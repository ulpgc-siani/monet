grammar org.monet.editor.dsl.MonetModelingLanguage with org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate monetModelingLanguage "http://www.monet.org/editor/dsl/MonetModelingLanguage"

DomainModel:
	DefinitionModel | ProjectModel | DistributionModel
;

DistributionModel:
	'distribution' name=ValidID 'extends' superType=[ProjectModel|QualifiedName] '{'
		features+=ManifestFeature*
	'}'
;

ProjectModel:
	'project' name=ValidID '{'
		features+=ManifestFeature*
	'}'
;

ManifestFeature:
	Attribute | Property | Define | Method
;

DefinitionModel:
	elements+=Import*
	elements+= PackageDeclaration;

Import:
	'import' importedNamespace=QualifiedNameWithWildcard;

Code:
	'[' value = STRING ']'
;

PackageDeclaration:
	'package' name=QualifiedName '{'
		
		definition=Definition
	'}';

DefinitionType:
'activity' | 'catalog' | 'collection' | 'container' | 'dashboard' | 'datastore-builder' | 'datastore' | 'desktop' | 'document' | 'exporter' | 'form' | 'glossary' | 'importer' | 'index' | 'job' | 'measure-unit' | 'role' | 'sensor' | 'service' | 'tasktray' | 'thesaurus'
;

PropertyTypes:
'parent' | 'allow-add' | 'is-component' | 'tab:taskboard' | 'default-location' | 'tab:trash' | 'cube' | 'require-confirmation' | 'is-environment' | 'links:out' | 'edit-video' | 'field-boolean' | 'self-generated' | 'secondary' | 'is-initial' | 'enable-history' | 'folder' | 'size' | 'stop' | 'meta' | 'is-extended' | 'enroll' | 'items' | 'send-response' | 'attachments' | 'field-number' | 'assign-role' | 'edit-check' | 'unpublish' | 'term' | 'attribute' | 'capture-position' | 'federation' | 'contain' | 'is-embedded' | 'is-email' | 'edit-date' | 'tab:roles' | 'is-final' | 'partner' | 'metric' | 'to' | 'tab:news' | 'operation' | 'is-breadcrumbs-disabled' | 'send-request' | 'rule:node' | 'notes' | 'source' | 'view' | 'is-multiple' | 'is-hand-written' | 'edit-boolean' | 'check-position' | 'allow-history' | 'add' | 'is-readonly' | 'shared-prototypes' | 'external' | 'is-visible-when-embedded' | 'secondary:location' | 'expiration' | 'is-shared' | 'is-read-only' | 'is-negative' | 'is-georeferenced' | 'show' | 'for' | 'edition' | 'allow-other' | 'timeout' | 'owned-prototypes' | 'is-oust' | 'provider' | 'sorting' | 'field:node' | 'summary' | 'tab:tasktray' | 'center' | 'is-background' | 'length' | 'publish' | 'olap' | 'rule:link' | 'field-serial' | 'location' | 'step' | 'require-partner-context' | 'field-picture' | 'select' | 'allow-locations' | 'aborted' | 'taxonomy' | 'signatures' | 'is-static' | 'terms' | 'edit-text' | 'recent-task' | 'is-default' | 'tasks' | 'edit-memo' | 'field-summation' | 'mapping' | 'capture-date' | 'rule:view' | 'index' | 'back-enable' | 'confirmation' | 'explicit' | 'allow-edit' | 'exit' | 'analyze' | 'field-date' | 'allow-less-precision' | 'orders' | 'allow-search' | 'primary' | 'is-univocal' | 'implicit' | 'internal' | 'wait' | 'signature' | 'is-singleton' | 'pattern' | 'edit-position' | 'range' | 'field-uri' | 'is-private' | 'feature' | 'add-operation' | 'place' | 'enable-services' | 'edit-select' | 'display' | 'field-node' | 'filter' | 'field-link' | 'from-roles' | 'toolbar' | 'is-conditional' | 'disable' | 'report' | 'is-abstract' | 'is-self-generated' | 'indicator' | 'field-text' | 'is-required' | 'door' | 'use' | 'edit-picture' | 'listen' | 'space' | 'reference' | 'is-category' | 'is-extensible' | 'is-prototypable' | 'field-composite' | 'contest' | 'level' | 'send-job' | 'is-hidden' | 'field-memo' | 'enable-feeders' | 'disable-edition' | 'edit-number' | 'rule:form' | 'is-external-fed' | 'links:in' | 'boundary' | 'allow-key' | 'request' | 'from-index' | 'rejected' | 'line' | 'scale' | 'shortcut' | 'revisions' | 'dimension' | 'is-profile-photo' | 'field-check' | 'disable-users' | 'is-collapsible' | 'field-file' | 'field-select' | 'serial' | 'is-manual' | 'response' | 'rule:operation' | 'locations' | 'delegation' | 'category' | 'properties' | 'customer'
;

MethodTypes:
'onChatMessageReceived' | 'onPopulated' | 'isVisible' | 'onTake' | 'when' | 'onExportItem' | 'onResponse' | 'onSelectJobRoleComplete' | 'onSave' | 'onInit' | 'onRemoved' | 'onSetupComplete' | 'calculate' | 'onAbort' | 'isEnabled' | 'constructor' | 'onSetupJobComplete' | 'execute' | 'onSignsComplete' | 'onTermAdded' | 'onSolve' | 'onImportItem' | 'onFinished' | 'onOpened' | 'onSelectJobRole' | 'import' | 'onRequest' | 'onSaved' | 'onTerminate' | 'onCancel' | 'onValidate' | 'onSynchronized' | 'onSetup' | 'onUnassign' | 'onItemAdded' | 'onSign' | 'onCreated' | 'onReceiveEvent' | 'onArrive' | 'onCreate' | 'onClosed' | 'onSetContext' | 'onExecute' | 'onAssign' | 'onItemRemoved' | 'onTimeout' | 'onTermModified' | 'onBack' | 'onBuild' | 'onInitialize' | 'onSetupJob' | 'onTerminate' | 'onSelectRole'
;

AttributeTypes:
'parent' | 'datastore' | 'type' | 'when' | 'resolution' | 'collaborator' | 'tab:environment' | 'shortcut-view' | 'children' | 'enable' | 'context' | 'classifier' | 'line-below' | 'dashboard' | 'height' | 'index' | 'version' | 'script' | 'node' | 'show-text' | 'field' | 'subtitle' | 'template' | 'regexp' | 'role' | 'latitude' | 'icon' | 'range' | 'secret' | 'layer' | 'default' | 'exporter' | 'min' | 'goto' | 'feature' | 'attribute' | 'after' | 'key' | 'max' | 'uri' | 'picture' | 'deploy-path' | 'help' | 'component' | 'depth' | 'metric' | 'width' | 'measure-unit' | 'operation' | 'indicator' | 'tab:dashboard' | 'use' | 'precision' | 'source' | 'operator' | 'mode' | 'flatten' | 'view' | 'add-flag' | 'limit' | 'tag' | 'ontology' | 'longitude' | 'use:amount' | 'unlock' | 'author' | 'format' | 'collection' | 'history' | 'field:file' | 'take' | 'task' | 'sort-by' | 'name' | 'position' | 'job' | 'request' | 'code' | 'purpose' | 'footer' | 'timezone' | 'line' | 'link' | 'for' | 'show' | 'edition' | 'description' | 'scale' | 'title' | 'highlight' | 'setup-uri' | 'shortcut' | 'provider' | 'root' | 'design' | 'definition' | 'factor' | 'value' | 'layout:extended' | 'use:y' | 'amount' | 'use:x' | 'center' | 'zoom' | 'label' | 'with-view' | 'message' | 'target' | 'layout' | 'interpolation' | 'sibling' | 'form' | 'sort-mode' | 'service' | 'response' | 'marker-icon' | 'formula' | 'deploy-uri' | 'user'
;

Definition:
	code=Code?
	abstract?='abstract'? extensible?='extensible'? 'definition' name=ValidID 'is' definitionType=DefinitionType ('extends' superType=[Definition|QualifiedName])? ('replace' replaceSuperType=[Definition|QualifiedName])? '{'
		features+=Feature*
	'}'
;

Feature:
	Attribute | Definition | Property | Schema | Method | Function | Variable
;

Attribute:
id=AttributeTypes '=' value=AttributeValue
;

AttributeValue:
StringLiteral | IntLiteral | FloatLiteral | DoubleLiteral | EnumLiteral | XTReference | LocalizedText | Resource | ExpressionLiteral | TimeLiteral
;

LocalizedText:
'text' value=(ID | ENUM) ';'
;

Resource:
  type=('data' | 'help' | 'image' | 'template' | 'layout') value=(ID | ENUM) ';'
;

StringLiteral:
value=STRING ';';

TimeLiteral:
	value=TIME ';'
;

IntLiteral:
	negative?='-'? value=INT ';'
;

FloatLiteral:
	negative?='-'? value=FLOAT ';'
;

DoubleLiteral:
	negative?='-'? value=DOUBLE ';'
;

ExpressionLiteral
:value=XBlockExpression;

Referenciable:
Property | Definition
;

XTReference:
'ref' value=[Referenciable|QualifiedName] ';'
;

EnumLiteral:
value=ENUM ';'
;

terminal ENUM : ('A'..'Z'|'_')('0'..'9'|'A'..'Z'|'_')*;
terminal FLOAT returns ecore::EFloat : INT '.' INT 'F';
terminal DOUBLE returns ecore::EDouble : INT '.' INT;
terminal TIME : ((('0'..'9')+ ':')? ((('0'..'1')('0'..'9')) | (('2')('0'..'3'))) ':')? ('0'..'5')('0'..'9') ':' ('0'..'5')('0'..'9') (',' ('0'..'9')('0'..'9')('0'..'9'))?;

Property:
	code=Code?
	id=PropertyTypes name=ValidID? ('{' 
		features+=PropertyFeature*
	'}' | ';')
;

PropertyFeature:
	Attribute | Property | Method
;

Method:
	id=MethodTypes '(' (params+=FullJvmFormalParameter (',' params+=FullJvmFormalParameter)*)? ')' body=XBlockExpression
;

Variable:
	'var' name=ValidID 'as' type=JvmTypeReference ';'
;

Define:
	'define' name=ValidID '=' value=STRING ';'
;

Schema:
	id='schema' '{'  
	 	properties+=SchemaFeature*
	 '}'
;

SchemaFeature:
	SchemaSection | SchemaProperty
;

SchemaSection:
	(many ?= 'many')? id=ID '{' features += SchemaFeature* '}'
;

SchemaProperty:
	(many ?= 'many')? id=ID source=SchemaPropertyOfValue
;

SchemaPropertyOfValue:
	type = JvmParameterizedTypeReference (body = XBlockExpression | ';')
;
		
Function:
	'function' name=ValidID '(' (params+=FullJvmFormalParameter (',' params+=FullJvmFormalParameter)*)? ')' (':' type=JvmTypeReference)? 
		body=XBlockExpression;

QualifiedNameWithWildcard:
	QualifiedName  ('.' '*')?;


