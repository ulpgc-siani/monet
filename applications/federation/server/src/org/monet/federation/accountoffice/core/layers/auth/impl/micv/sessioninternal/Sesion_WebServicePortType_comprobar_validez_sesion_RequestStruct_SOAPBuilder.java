package org.monet.federation.accountoffice.core.layers.auth.impl.micv.sessioninternal;
/*
    Monet will assist business to process re-engineering. Monet separate the
    business logic from the underlying technology to allow Model-Driven
    Engineering (MDE). These models guide all the development process over a
    Service Oriented Architecture (SOA).

    Copyright (C) 2009  Grupo de Ingenieria del Sofware y Sistemas de la Universidad de Las Palmas de Gran Canaria

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/.
*/

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, compilaciï¿½n R1)
// Generated source version: 1.1.3


import com.sun.xml.rpc.encoding.DeserializationException;
import com.sun.xml.rpc.encoding.SOAPInstanceBuilder;
import com.sun.xml.rpc.util.exception.LocalizableExceptionAdapter;

public class Sesion_WebServicePortType_comprobar_validez_sesion_RequestStruct_SOAPBuilder implements SOAPInstanceBuilder {
    private Sesion_WebServicePortType_comprobar_validez_sesion_RequestStruct _instance;
    private static final int myIDENTIFICADOR_SESION_INDEX = 0;
    private static final int myDNI_USUARIO_INDEX = 1;
    
    public Sesion_WebServicePortType_comprobar_validez_sesion_RequestStruct_SOAPBuilder() {
    }
    
    public int memberGateType(int memberIndex) {
        switch (memberIndex) {
            case myIDENTIFICADOR_SESION_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myDNI_USUARIO_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            default:
                throw new IllegalArgumentException();
        }
    }
    
    public void construct() {
    }
    
    public void setMember(int index, java.lang.Object memberValue) {
        try {
            switch(index) {
                case myIDENTIFICADOR_SESION_INDEX:
                    _instance.setIdentificador_sesion((java.lang.String)memberValue);
                    break;
                case myDNI_USUARIO_INDEX:
                    _instance.setDni_usuario((java.lang.String)memberValue);
                    break;
                default:
                    throw new java.lang.IllegalArgumentException();
            }
        }
        catch (java.lang.RuntimeException e) {
            throw e;
        }
        catch (java.lang.Exception e) {
            throw new DeserializationException(new LocalizableExceptionAdapter(e));
        }
    }
    
    public void initialize() {
    }
    
    public void setInstance(java.lang.Object instance) {
        _instance = (Sesion_WebServicePortType_comprobar_validez_sesion_RequestStruct)instance;
    }
    
    public java.lang.Object getInstance() {
        return _instance;
    }
}
