<?xml version="1.0" encoding="UTF-8"?>
<project name="Monet" default="all" basedir="." xmlns:sonar="antlib:org.sonar.ant">

	<!-- Define the SonarQube properties -->
	<property name="sonar.projectKey" value="monet" />
	<property name="sonar.projectName" value="Monet" />
	<property name="sonar.projectVersion" value="3.1" />
	<property name="sonar.language" value="java" />
	<property name="sonar.target" value="1.7" />
	<property name="sonar.source" value="1.7" />
	<property name="sonar.sources" value="${src.dir}" />
	<property name="sonar.tests" value="${test.dir}" />
	<property name="sonar.binaries" value="${classes.dir}" />
	<property name="sonar.surefire.reportsPath" value="${reports.junit.xml.dir}" />
	<property name="sonar.modules" value="space, federation, docservice, deployservice"/>
	<property name="sonar.sourceEncoding" value="UTF-8" />
	<property name="sonar.host.url" value="http://192.168.200.88:9000" />
	<property name="sonar.login" value="application_hudson" />
	<loadfile property="sonar_web_password" srcfile="web.password"/>
	<property name="sonar.password" value="${sonar_web_password}" />

	<!-- Override some properties at module level -->
	<property name="space.sonar.projectName" value="space" />
	<property name="space.sonar.sources" value="server/src" />
	<property name="space.sonar.binaries" value="server/dist/WEB-INF/classes" />

	<property name="federation.sonar.projectName" value="federation" />
	<property name="federation.sonar.sources" value="server/src" />
	<property name="federation.sonar.binaries" value="server/dist/WEB-INF/classes" />

	<property name="docservice.sonar.projectName" value="docservice" />
	<property name="docservice.sonar.sources" value="server/src" />
	<property name="docservice.sonar.binaries" value="server/dist/WEB-INF/classes" />

	<property name="deployservice.sonar.projectName" value="deployservice" />
	<property name="deployservice.sonar.sources" value="server/src" />
	<property name="deployservice.sonar.binaries" value="server/dist" />

	<!-- The following properties are required to use JaCoCo: -->
	<property name="sonar.dynamicAnalysis" value="true" />
	<property name="sonar.java.coveragePlugin" value="jacoco" />
	<property name="sonar.jacoco.reportPath" value="target/jacoco.exec" />

	<!-- Add your basic SonarQube configuration below: sonar.jdbc.url, sonar.jdbc.username, etc. properties -->

	<property name="sonar.jdbc.url" value="jdbc:mysql://192.168.200.88:3306/sonar_45?characterEncoding=utf8" />
	<property name="sonar.jdbc.username" value="sonar" />
	<loadfile property="sonar_mysql_password" srcfile="mysql.password"/>
	<property name="sonar.jdbc.password" value="${sonar_mysql_password}" />

	<!-- ========= Define "regular" targets: clean, compile, test, ... ========= -->

	<target name="clean">
		<delete dir=".sonar"/>
		<ant dir="space/server" target="clean"/>
		<ant dir="federation/server" target="clean"/>
		<ant dir="docservice/server" target="clean"/>
		<ant dir="deployservice/server" target="clean"/>
	</target>


	<target name="compile">
		<ant dir="space/server" target="beta"/>
		<ant dir="federation/server" target="federation"/>
		<ant dir="docservice/server" target="tomcat-full"/>
		<ant dir="deployservice/server" target="99-beta"/>
	</target>

	<!-- ========= Define SonarQube target ========= -->
	<target name="sonar">
		<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
			<!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
			<!--<classpath path="/Users/Octavio/Downloads/sonar-ant-task-2.1.jar" />-->
		</taskdef>

		<!-- Execute SonarQube -->
		<sonar:sonar />
	</target>

	<!-- ========= The main target "all" ========= -->
	<target name="all" depends="clean, compile, sonar" />

</project>
