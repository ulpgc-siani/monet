package org.monet.metamodel;

import java.util.ArrayList;
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.Collection;

/**
FormDefinition
Un formulario es un tipo de nodo que se utiliza para que
		el usuario pueda cumplimentar datos

*/

public  class FormDefinitionBase extends NodeDefinition {

	
	public static class IsPrototypable  {protected void copy(IsPrototypable instance) {}protected void merge(IsPrototypable child) {}}protected IsPrototypable _isPrototypable;public boolean isPrototypable() { return (_isPrototypable != null); }public IsPrototypable getIsPrototypable() { return _isPrototypable; }public void setIsPrototypable(boolean value) { if(value) _isPrototypable = new IsPrototypable(); else {_isPrototypable = null;}}public static class IsGeoreferenced  {protected void copy(IsGeoreferenced instance) {}protected void merge(IsGeoreferenced child) {}}protected IsGeoreferenced _isGeoreferenced;public boolean isGeoreferenced() { return (_isGeoreferenced != null); }public IsGeoreferenced getIsGeoreferenced() { return _isGeoreferenced; }public void setIsGeoreferenced(boolean value) { if(value) _isGeoreferenced = new IsGeoreferenced(); else {_isGeoreferenced = null;}}public static class IsExtensible  {protected void copy(IsExtensible instance) {}protected void merge(IsExtensible child) {}}protected IsExtensible _isExtensible;public boolean isExtensible() { return (_isExtensible != null); }public IsExtensible getIsExtensible() { return _isExtensible; }public void setIsExtensible(boolean value) { if(value) _isExtensible = new IsExtensible(); else {_isExtensible = null;}}public static class IsComponent  {protected void copy(IsComponent instance) {}protected void merge(IsComponent child) {}}protected IsComponent _isComponent;public boolean isComponent() { return (_isComponent != null); }public IsComponent getIsComponent() { return _isComponent; }public void setIsComponent(boolean value) { if(value) _isComponent = new IsComponent(); else {_isComponent = null;}}public static class PropertiesProperty  {protected void copy(PropertiesProperty instance) {}protected void merge(PropertiesProperty child) {}}protected PropertiesProperty _propertiesProperty;public PropertiesProperty getProperties() { return _propertiesProperty; }public void setProperties(PropertiesProperty value) { if(_propertiesProperty!=null) _propertiesProperty.merge(value); else {_propertiesProperty = value;} }public static class MappingProperty  {protected org.monet.metamodel.internal.Ref _index;public org.monet.metamodel.internal.Ref getIndex() { return _index; }public void setIndex(org.monet.metamodel.internal.Ref value) { _index = value; }protected void copy(MappingProperty instance) {this._index = instance._index;
}protected void merge(MappingProperty child) {if(child._index != null)this._index = child._index;
}}protected ArrayList<MappingProperty> _mappingPropertyList = new ArrayList<MappingProperty>();public ArrayList<MappingProperty> getMappingList() { return _mappingPropertyList; }public static class RuleFormProperty extends org.monet.metamodel.RuleProperty {public enum AddFlagEnumeration { REQUIRED,READ_ONLY,INVALID,HIDDEN }protected ArrayList<AddFlagEnumeration> _addFlag = new ArrayList<AddFlagEnumeration>();public ArrayList<AddFlagEnumeration> getAddFlag() { return _addFlag; }public void setAddFlag(ArrayList<AddFlagEnumeration> value) { _addFlag = value; }public static class ToProperty  {protected ArrayList<org.monet.metamodel.internal.Ref> _field = new ArrayList<org.monet.metamodel.internal.Ref>();public ArrayList<org.monet.metamodel.internal.Ref> getField() { return _field; }public void setField(ArrayList<org.monet.metamodel.internal.Ref> value) { _field = value; }protected void copy(ToProperty instance) {this._field.addAll(instance._field);
}protected void merge(ToProperty child) {if(child._field != null)this._field.addAll(child._field);
}}protected ToProperty _toProperty;public ToProperty getTo() { return _toProperty; }public void setTo(ToProperty value) { if(_toProperty!=null) _toProperty.merge(value); else {_toProperty = value;} }protected void copy(RuleFormProperty instance) {this._addFlag.addAll(instance._addFlag);
this._code = instance._code;
this._toProperty = instance._toProperty; 
this._listenProperty = instance._listenProperty; 
}protected void merge(RuleFormProperty child) {super.merge(child);if(child._addFlag != null)this._addFlag.addAll(child._addFlag);
if(_toProperty == null) _toProperty = child._toProperty; else if (child._toProperty != null) {_toProperty.merge(child._toProperty);}
}}protected ArrayList<RuleFormProperty> _ruleFormPropertyList = new ArrayList<RuleFormProperty>();public ArrayList<RuleFormProperty> getRuleFormList() { return _ruleFormPropertyList; }public static class FormViewProperty extends org.monet.metamodel.NodeViewProperty {public static class ShowProperty  {protected String _layout;public String getLayout() { return _layout; }public void setLayout(String value) { _layout = value; }protected String _layoutExtended;public String getLayoutExtended() { return _layoutExtended; }public void setLayoutExtended(String value) { _layoutExtended = value; }protected ArrayList<org.monet.metamodel.internal.Ref> _field = new ArrayList<org.monet.metamodel.internal.Ref>();public ArrayList<org.monet.metamodel.internal.Ref> getField() { return _field; }public void setField(ArrayList<org.monet.metamodel.internal.Ref> value) { _field = value; }public static class LinksInProperty  {protected ArrayList<org.monet.metamodel.internal.Ref> _node = new ArrayList<org.monet.metamodel.internal.Ref>();public ArrayList<org.monet.metamodel.internal.Ref> getNode() { return _node; }public void setNode(ArrayList<org.monet.metamodel.internal.Ref> value) { _node = value; }protected void copy(LinksInProperty instance) {this._node.addAll(instance._node);
}protected void merge(LinksInProperty child) {if(child._node != null)this._node.addAll(child._node);
}}protected LinksInProperty _linksInProperty;public LinksInProperty getLinksIn() { return _linksInProperty; }public void setLinksIn(LinksInProperty value) { if(_linksInProperty!=null) _linksInProperty.merge(value); else {_linksInProperty = value;} }public static class LinksOutProperty  {protected ArrayList<org.monet.metamodel.internal.Ref> _node = new ArrayList<org.monet.metamodel.internal.Ref>();public ArrayList<org.monet.metamodel.internal.Ref> getNode() { return _node; }public void setNode(ArrayList<org.monet.metamodel.internal.Ref> value) { _node = value; }protected void copy(LinksOutProperty instance) {this._node.addAll(instance._node);
}protected void merge(LinksOutProperty child) {if(child._node != null)this._node.addAll(child._node);
}}protected LinksOutProperty _linksOutProperty;public LinksOutProperty getLinksOut() { return _linksOutProperty; }public void setLinksOut(LinksOutProperty value) { if(_linksOutProperty!=null) _linksOutProperty.merge(value); else {_linksOutProperty = value;} }public static class AttachmentsProperty  {protected ArrayList<org.monet.metamodel.internal.Ref> _fieldFile = new ArrayList<org.monet.metamodel.internal.Ref>();public ArrayList<org.monet.metamodel.internal.Ref> getFieldFile() { return _fieldFile; }public void setFieldFile(ArrayList<org.monet.metamodel.internal.Ref> value) { _fieldFile = value; }public static class FieldNodeProperty  {protected org.monet.metamodel.internal.Ref _field;public org.monet.metamodel.internal.Ref getField() { return _field; }public void setField(org.monet.metamodel.internal.Ref value) { _field = value; }protected org.monet.metamodel.internal.Ref _exporter;public org.monet.metamodel.internal.Ref getExporter() { return _exporter; }public void setExporter(org.monet.metamodel.internal.Ref value) { _exporter = value; }protected void copy(FieldNodeProperty instance) {this._field = instance._field;
this._exporter = instance._exporter;
}protected void merge(FieldNodeProperty child) {if(child._field != null)this._field = child._field;
if(child._exporter != null)this._exporter = child._exporter;
}}protected ArrayList<FieldNodeProperty> _fieldNodePropertyList = new ArrayList<FieldNodeProperty>();public ArrayList<FieldNodeProperty> getFieldNodeList() { return _fieldNodePropertyList; }protected void copy(AttachmentsProperty instance) {this._fieldFile.addAll(instance._fieldFile);
_fieldNodePropertyList.addAll(instance._fieldNodePropertyList);
}protected void merge(AttachmentsProperty child) {if(child._fieldFile != null)this._fieldFile.addAll(child._fieldFile);
_fieldNodePropertyList.addAll(child._fieldNodePropertyList);
}}protected AttachmentsProperty _attachmentsProperty;public AttachmentsProperty getAttachments() { return _attachmentsProperty; }public void setAttachments(AttachmentsProperty value) { if(_attachmentsProperty!=null) _attachmentsProperty.merge(value); else {_attachmentsProperty = value;} }public static class TasksProperty  {protected ArrayList<org.monet.metamodel.internal.Ref> _task = new ArrayList<org.monet.metamodel.internal.Ref>();public ArrayList<org.monet.metamodel.internal.Ref> getTask() { return _task; }public void setTask(ArrayList<org.monet.metamodel.internal.Ref> value) { _task = value; }protected void copy(TasksProperty instance) {this._task.addAll(instance._task);
}protected void merge(TasksProperty child) {if(child._task != null)this._task.addAll(child._task);
}}protected TasksProperty _tasksProperty;public TasksProperty getTasks() { return _tasksProperty; }public void setTasks(TasksProperty value) { if(_tasksProperty!=null) _tasksProperty.merge(value); else {_tasksProperty = value;} }public static class RecentTaskProperty  {protected ArrayList<org.monet.metamodel.internal.Ref> _task = new ArrayList<org.monet.metamodel.internal.Ref>();public ArrayList<org.monet.metamodel.internal.Ref> getTask() { return _task; }public void setTask(ArrayList<org.monet.metamodel.internal.Ref> value) { _task = value; }protected void copy(RecentTaskProperty instance) {this._task.addAll(instance._task);
}protected void merge(RecentTaskProperty child) {if(child._task != null)this._task.addAll(child._task);
}}protected RecentTaskProperty _recentTaskProperty;public RecentTaskProperty getRecentTask() { return _recentTaskProperty; }public void setRecentTask(RecentTaskProperty value) { if(_recentTaskProperty!=null) _recentTaskProperty.merge(value); else {_recentTaskProperty = value;} }public static class RevisionsProperty  {protected void copy(RevisionsProperty instance) {}protected void merge(RevisionsProperty child) {}}protected RevisionsProperty _revisionsProperty;public RevisionsProperty getRevisions() { return _revisionsProperty; }public void setRevisions(RevisionsProperty value) { if(_revisionsProperty!=null) _revisionsProperty.merge(value); else {_revisionsProperty = value;} }public static class NotesProperty  {protected void copy(NotesProperty instance) {}protected void merge(NotesProperty child) {}}protected NotesProperty _notesProperty;public NotesProperty getNotes() { return _notesProperty; }public void setNotes(NotesProperty value) { if(_notesProperty!=null) _notesProperty.merge(value); else {_notesProperty = value;} }public static class LocationProperty  {protected void copy(LocationProperty instance) {}protected void merge(LocationProperty child) {}}protected LocationProperty _locationProperty;public LocationProperty getLocation() { return _locationProperty; }public void setLocation(LocationProperty value) { if(_locationProperty!=null) _locationProperty.merge(value); else {_locationProperty = value;} }protected void copy(ShowProperty instance) {this._layout = instance._layout;
this._layoutExtended = instance._layoutExtended;
this._field.addAll(instance._field);
this._linksInProperty = instance._linksInProperty; 
this._linksOutProperty = instance._linksOutProperty; 
this._attachmentsProperty = instance._attachmentsProperty; 
this._tasksProperty = instance._tasksProperty; 
this._recentTaskProperty = instance._recentTaskProperty; 
this._revisionsProperty = instance._revisionsProperty; 
this._notesProperty = instance._notesProperty; 
this._locationProperty = instance._locationProperty; 
}protected void merge(ShowProperty child) {if(child._layout != null)this._layout = child._layout;
if(child._layoutExtended != null)this._layoutExtended = child._layoutExtended;
if(child._field != null)this._field.addAll(child._field);
if(_linksInProperty == null) _linksInProperty = child._linksInProperty; else if (child._linksInProperty != null) {_linksInProperty.merge(child._linksInProperty);}
if(_linksOutProperty == null) _linksOutProperty = child._linksOutProperty; else if (child._linksOutProperty != null) {_linksOutProperty.merge(child._linksOutProperty);}
if(_attachmentsProperty == null) _attachmentsProperty = child._attachmentsProperty; else if (child._attachmentsProperty != null) {_attachmentsProperty.merge(child._attachmentsProperty);}
if(_tasksProperty == null) _tasksProperty = child._tasksProperty; else if (child._tasksProperty != null) {_tasksProperty.merge(child._tasksProperty);}
if(_recentTaskProperty == null) _recentTaskProperty = child._recentTaskProperty; else if (child._recentTaskProperty != null) {_recentTaskProperty.merge(child._recentTaskProperty);}
if(_revisionsProperty == null) _revisionsProperty = child._revisionsProperty; else if (child._revisionsProperty != null) {_revisionsProperty.merge(child._revisionsProperty);}
if(_notesProperty == null) _notesProperty = child._notesProperty; else if (child._notesProperty != null) {_notesProperty.merge(child._notesProperty);}
if(_locationProperty == null) _locationProperty = child._locationProperty; else if (child._locationProperty != null) {_locationProperty.merge(child._locationProperty);}
}}protected ShowProperty _showProperty;public ShowProperty getShow() { return _showProperty; }public void setShow(ShowProperty value) { if(_showProperty!=null) _showProperty.merge(value); else {_showProperty = value;} }protected void copy(FormViewProperty instance) {this._label = instance._label;
this._code = instance._code;
this._name = instance._name;
this._showProperty = instance._showProperty; 
this._isDefault = instance._isDefault; 
this._isVisibleWhenEmbedded = instance._isVisibleWhenEmbedded; 
this._forProperty = instance._forProperty; 
}protected void merge(FormViewProperty child) {super.merge(child);if(_showProperty == null) _showProperty = child._showProperty; else if (child._showProperty != null) {_showProperty.merge(child._showProperty);}
}}protected LinkedHashMap<String, FormViewProperty> _formViewPropertyMap = new LinkedHashMap<String, FormViewProperty>();public void addView(FormViewProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();FormViewProperty current = _formViewPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {FormViewProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_formViewPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_formViewPropertyMap.put(key, value);} }public java.util.Map<String,FormViewProperty> getViewMap() { return _formViewPropertyMap; }public java.util.Collection<FormViewProperty> getViewList() { return _formViewPropertyMap.values(); }
	protected LinkedHashMap<String, NumberFieldProperty> _numberFieldPropertyMap = new LinkedHashMap<String, NumberFieldProperty>();protected LinkedHashMap<String, MemoFieldProperty> _memoFieldPropertyMap = new LinkedHashMap<String, MemoFieldProperty>();protected LinkedHashMap<String, BooleanFieldProperty> _booleanFieldPropertyMap = new LinkedHashMap<String, BooleanFieldProperty>();protected LinkedHashMap<String, CompositeFieldProperty> _compositeFieldPropertyMap = new LinkedHashMap<String, CompositeFieldProperty>();protected LinkedHashMap<String, NodeFieldProperty> _nodeFieldPropertyMap = new LinkedHashMap<String, NodeFieldProperty>();protected LinkedHashMap<String, UriFieldProperty> _uriFieldPropertyMap = new LinkedHashMap<String, UriFieldProperty>();protected LinkedHashMap<String, SummationFieldProperty> _summationFieldPropertyMap = new LinkedHashMap<String, SummationFieldProperty>();protected LinkedHashMap<String, LinkFieldProperty> _linkFieldPropertyMap = new LinkedHashMap<String, LinkFieldProperty>();protected LinkedHashMap<String, CheckFieldProperty> _checkFieldPropertyMap = new LinkedHashMap<String, CheckFieldProperty>();protected LinkedHashMap<String, FileFieldProperty> _fileFieldPropertyMap = new LinkedHashMap<String, FileFieldProperty>();protected LinkedHashMap<String, SelectFieldProperty> _selectFieldPropertyMap = new LinkedHashMap<String, SelectFieldProperty>();protected LinkedHashMap<String, DateFieldProperty> _dateFieldPropertyMap = new LinkedHashMap<String, DateFieldProperty>();protected LinkedHashMap<String, SerialFieldProperty> _serialFieldPropertyMap = new LinkedHashMap<String, SerialFieldProperty>();protected LinkedHashMap<String, TextFieldProperty> _textFieldPropertyMap = new LinkedHashMap<String, TextFieldProperty>();protected LinkedHashMap<String, PictureFieldProperty> _pictureFieldPropertyMap = new LinkedHashMap<String, PictureFieldProperty>();public void addNumberFieldProperty(NumberFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();NumberFieldProperty current = _numberFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {NumberFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_numberFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_numberFieldPropertyMap.put(key, value);} }public java.util.Map<String,NumberFieldProperty> getNumberFieldPropertyMap() { return _numberFieldPropertyMap; }public java.util.Collection<NumberFieldProperty> getNumberFieldPropertyList() { return _numberFieldPropertyMap.values(); }public void addMemoFieldProperty(MemoFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();MemoFieldProperty current = _memoFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {MemoFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_memoFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_memoFieldPropertyMap.put(key, value);} }public java.util.Map<String,MemoFieldProperty> getMemoFieldPropertyMap() { return _memoFieldPropertyMap; }public java.util.Collection<MemoFieldProperty> getMemoFieldPropertyList() { return _memoFieldPropertyMap.values(); }public void addBooleanFieldProperty(BooleanFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();BooleanFieldProperty current = _booleanFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {BooleanFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_booleanFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_booleanFieldPropertyMap.put(key, value);} }public java.util.Map<String,BooleanFieldProperty> getBooleanFieldPropertyMap() { return _booleanFieldPropertyMap; }public java.util.Collection<BooleanFieldProperty> getBooleanFieldPropertyList() { return _booleanFieldPropertyMap.values(); }public void addCompositeFieldProperty(CompositeFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();CompositeFieldProperty current = _compositeFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {CompositeFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_compositeFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_compositeFieldPropertyMap.put(key, value);} }public java.util.Map<String,CompositeFieldProperty> getCompositeFieldPropertyMap() { return _compositeFieldPropertyMap; }public java.util.Collection<CompositeFieldProperty> getCompositeFieldPropertyList() { return _compositeFieldPropertyMap.values(); }public void addNodeFieldProperty(NodeFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();NodeFieldProperty current = _nodeFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {NodeFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_nodeFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_nodeFieldPropertyMap.put(key, value);} }public java.util.Map<String,NodeFieldProperty> getNodeFieldPropertyMap() { return _nodeFieldPropertyMap; }public java.util.Collection<NodeFieldProperty> getNodeFieldPropertyList() { return _nodeFieldPropertyMap.values(); }public void addUriFieldProperty(UriFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();UriFieldProperty current = _uriFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {UriFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_uriFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_uriFieldPropertyMap.put(key, value);} }public java.util.Map<String,UriFieldProperty> getUriFieldPropertyMap() { return _uriFieldPropertyMap; }public java.util.Collection<UriFieldProperty> getUriFieldPropertyList() { return _uriFieldPropertyMap.values(); }public void addSummationFieldProperty(SummationFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();SummationFieldProperty current = _summationFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {SummationFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_summationFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_summationFieldPropertyMap.put(key, value);} }public java.util.Map<String,SummationFieldProperty> getSummationFieldPropertyMap() { return _summationFieldPropertyMap; }public java.util.Collection<SummationFieldProperty> getSummationFieldPropertyList() { return _summationFieldPropertyMap.values(); }public void addLinkFieldProperty(LinkFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();LinkFieldProperty current = _linkFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {LinkFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_linkFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_linkFieldPropertyMap.put(key, value);} }public java.util.Map<String,LinkFieldProperty> getLinkFieldPropertyMap() { return _linkFieldPropertyMap; }public java.util.Collection<LinkFieldProperty> getLinkFieldPropertyList() { return _linkFieldPropertyMap.values(); }public void addCheckFieldProperty(CheckFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();CheckFieldProperty current = _checkFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {CheckFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_checkFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_checkFieldPropertyMap.put(key, value);} }public java.util.Map<String,CheckFieldProperty> getCheckFieldPropertyMap() { return _checkFieldPropertyMap; }public java.util.Collection<CheckFieldProperty> getCheckFieldPropertyList() { return _checkFieldPropertyMap.values(); }public void addFileFieldProperty(FileFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();FileFieldProperty current = _fileFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {FileFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_fileFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_fileFieldPropertyMap.put(key, value);} }public java.util.Map<String,FileFieldProperty> getFileFieldPropertyMap() { return _fileFieldPropertyMap; }public java.util.Collection<FileFieldProperty> getFileFieldPropertyList() { return _fileFieldPropertyMap.values(); }public void addSelectFieldProperty(SelectFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();SelectFieldProperty current = _selectFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {SelectFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_selectFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_selectFieldPropertyMap.put(key, value);} }public java.util.Map<String,SelectFieldProperty> getSelectFieldPropertyMap() { return _selectFieldPropertyMap; }public java.util.Collection<SelectFieldProperty> getSelectFieldPropertyList() { return _selectFieldPropertyMap.values(); }public void addDateFieldProperty(DateFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();DateFieldProperty current = _dateFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {DateFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_dateFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_dateFieldPropertyMap.put(key, value);} }public java.util.Map<String,DateFieldProperty> getDateFieldPropertyMap() { return _dateFieldPropertyMap; }public java.util.Collection<DateFieldProperty> getDateFieldPropertyList() { return _dateFieldPropertyMap.values(); }public void addSerialFieldProperty(SerialFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();SerialFieldProperty current = _serialFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {SerialFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_serialFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_serialFieldPropertyMap.put(key, value);} }public java.util.Map<String,SerialFieldProperty> getSerialFieldPropertyMap() { return _serialFieldPropertyMap; }public java.util.Collection<SerialFieldProperty> getSerialFieldPropertyList() { return _serialFieldPropertyMap.values(); }public void addTextFieldProperty(TextFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();TextFieldProperty current = _textFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {TextFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_textFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_textFieldPropertyMap.put(key, value);} }public java.util.Map<String,TextFieldProperty> getTextFieldPropertyMap() { return _textFieldPropertyMap; }public java.util.Collection<TextFieldProperty> getTextFieldPropertyList() { return _textFieldPropertyMap.values(); }public void addPictureFieldProperty(PictureFieldProperty value) {String key = value.getName() != null ? value.getName() : value.getCode();PictureFieldProperty current = _pictureFieldPropertyMap.get(key);if (current != null) {if (current.getClass().isAssignableFrom(value.getClass())) {try {PictureFieldProperty instance = value.getClass().newInstance();instance.copy(current);instance.setCode(value.getCode());instance.setName(value.getName());instance.merge(value);_pictureFieldPropertyMap.put(key, instance);}catch (Exception exception) {}}else current.merge(value);} else {_pictureFieldPropertyMap.put(key, value);} }public java.util.Map<String,PictureFieldProperty> getPictureFieldPropertyMap() { return _pictureFieldPropertyMap; }public java.util.Collection<PictureFieldProperty> getPictureFieldPropertyList() { return _pictureFieldPropertyMap.values(); }protected ArrayList<FieldProperty> _allFieldPropertyList;protected void createAllFieldPropertyList() {_allFieldPropertyList = new ArrayList<FieldProperty>();_allFieldPropertyList.addAll(_numberFieldPropertyMap.values());_allFieldPropertyList.addAll(_memoFieldPropertyMap.values());_allFieldPropertyList.addAll(_booleanFieldPropertyMap.values());_allFieldPropertyList.addAll(_compositeFieldPropertyMap.values());_allFieldPropertyList.addAll(_nodeFieldPropertyMap.values());_allFieldPropertyList.addAll(_uriFieldPropertyMap.values());_allFieldPropertyList.addAll(_summationFieldPropertyMap.values());_allFieldPropertyList.addAll(_linkFieldPropertyMap.values());_allFieldPropertyList.addAll(_checkFieldPropertyMap.values());_allFieldPropertyList.addAll(_fileFieldPropertyMap.values());_allFieldPropertyList.addAll(_selectFieldPropertyMap.values());_allFieldPropertyList.addAll(_dateFieldPropertyMap.values());_allFieldPropertyList.addAll(_serialFieldPropertyMap.values());_allFieldPropertyList.addAll(_textFieldPropertyMap.values());_allFieldPropertyList.addAll(_pictureFieldPropertyMap.values());}public ArrayList<FieldProperty> getAllFieldPropertyList() {if (_allFieldPropertyList == null) createAllFieldPropertyList();return _allFieldPropertyList;}protected LinkedHashMap<String,FieldProperty> _allFieldPropertyMap;protected void createAllFieldPropertyMap() {_allFieldPropertyMap = new LinkedHashMap<String,FieldProperty>();if (_allFieldPropertyList == null) createAllFieldPropertyList();for (FieldProperty item : _allFieldPropertyList) {_allFieldPropertyMap.put(item.getCode(), item);_allFieldPropertyMap.put(item.getName(), item);}}public FieldProperty getField(String key) {if (_allFieldPropertyMap == null) createAllFieldPropertyMap();return _allFieldPropertyMap.get(key);}

	public void copy(FormDefinitionBase instance) {
		this._code = instance._code;
this._name = instance._name;
this._parent = instance._parent;
this._label = instance._label;
this._description = instance._description;
this._help = instance._help;

		this._isPrototypable = instance._isPrototypable; 
this._isGeoreferenced = instance._isGeoreferenced; 
this._isExtensible = instance._isExtensible; 
this._isComponent = instance._isComponent; 
this._propertiesProperty = instance._propertiesProperty; 
_mappingPropertyList.addAll(instance._mappingPropertyList);
_ruleFormPropertyList.addAll(instance._ruleFormPropertyList);
for(FormViewProperty item : instance._formViewPropertyMap.values())this.addView(item);
this._isSingleton = instance._isSingleton; 
this._isReadonly = instance._isReadonly; 
this._isPrivate = instance._isPrivate; 
this._requirePartnerContextProperty = instance._requirePartnerContextProperty; 
this._isBreadcrumbsDisabled = instance._isBreadcrumbsDisabled; 
for(OperationProperty item : instance._operationPropertyMap.values())this.addOperation(item);
_ruleNodePropertyList.addAll(instance._ruleNodePropertyList);
_ruleViewPropertyList.addAll(instance._ruleViewPropertyList);
_ruleOperationPropertyList.addAll(instance._ruleOperationPropertyList);
_displayPropertyList.addAll(instance._displayPropertyList);
this._isAbstract = instance._isAbstract; 

		for(NumberFieldProperty item : instance._numberFieldPropertyMap.values())this.addNumberFieldProperty(item);for(MemoFieldProperty item : instance._memoFieldPropertyMap.values())this.addMemoFieldProperty(item);for(BooleanFieldProperty item : instance._booleanFieldPropertyMap.values())this.addBooleanFieldProperty(item);for(CompositeFieldProperty item : instance._compositeFieldPropertyMap.values())this.addCompositeFieldProperty(item);for(NodeFieldProperty item : instance._nodeFieldPropertyMap.values())this.addNodeFieldProperty(item);for(UriFieldProperty item : instance._uriFieldPropertyMap.values())this.addUriFieldProperty(item);for(SummationFieldProperty item : instance._summationFieldPropertyMap.values())this.addSummationFieldProperty(item);for(LinkFieldProperty item : instance._linkFieldPropertyMap.values())this.addLinkFieldProperty(item);for(CheckFieldProperty item : instance._checkFieldPropertyMap.values())this.addCheckFieldProperty(item);for(FileFieldProperty item : instance._fileFieldPropertyMap.values())this.addFileFieldProperty(item);for(SelectFieldProperty item : instance._selectFieldPropertyMap.values())this.addSelectFieldProperty(item);for(DateFieldProperty item : instance._dateFieldPropertyMap.values())this.addDateFieldProperty(item);for(SerialFieldProperty item : instance._serialFieldPropertyMap.values())this.addSerialFieldProperty(item);for(TextFieldProperty item : instance._textFieldPropertyMap.values())this.addTextFieldProperty(item);for(PictureFieldProperty item : instance._pictureFieldPropertyMap.values())this.addPictureFieldProperty(item);
	}

	public void merge(FormDefinitionBase child) {
		super.merge(child);
		
		
		if(_isPrototypable == null) _isPrototypable = child._isPrototypable; else if (child._isPrototypable != null) {_isPrototypable.merge(child._isPrototypable);}
if(_isGeoreferenced == null) _isGeoreferenced = child._isGeoreferenced; else if (child._isGeoreferenced != null) {_isGeoreferenced.merge(child._isGeoreferenced);}
if(_isExtensible == null) _isExtensible = child._isExtensible; else if (child._isExtensible != null) {_isExtensible.merge(child._isExtensible);}
if(_isComponent == null) _isComponent = child._isComponent; else if (child._isComponent != null) {_isComponent.merge(child._isComponent);}
if(_propertiesProperty == null) _propertiesProperty = child._propertiesProperty; else if (child._propertiesProperty != null) {_propertiesProperty.merge(child._propertiesProperty);}
_mappingPropertyList.addAll(child._mappingPropertyList);
_ruleFormPropertyList.addAll(child._ruleFormPropertyList);
for(FormViewProperty item : child._formViewPropertyMap.values())this.addView(item);

		for(NumberFieldProperty item : child._numberFieldPropertyMap.values())this.addNumberFieldProperty(item);for(MemoFieldProperty item : child._memoFieldPropertyMap.values())this.addMemoFieldProperty(item);for(BooleanFieldProperty item : child._booleanFieldPropertyMap.values())this.addBooleanFieldProperty(item);for(CompositeFieldProperty item : child._compositeFieldPropertyMap.values())this.addCompositeFieldProperty(item);for(NodeFieldProperty item : child._nodeFieldPropertyMap.values())this.addNodeFieldProperty(item);for(UriFieldProperty item : child._uriFieldPropertyMap.values())this.addUriFieldProperty(item);for(SummationFieldProperty item : child._summationFieldPropertyMap.values())this.addSummationFieldProperty(item);for(LinkFieldProperty item : child._linkFieldPropertyMap.values())this.addLinkFieldProperty(item);for(CheckFieldProperty item : child._checkFieldPropertyMap.values())this.addCheckFieldProperty(item);for(FileFieldProperty item : child._fileFieldPropertyMap.values())this.addFileFieldProperty(item);for(SelectFieldProperty item : child._selectFieldPropertyMap.values())this.addSelectFieldProperty(item);for(DateFieldProperty item : child._dateFieldPropertyMap.values())this.addDateFieldProperty(item);for(SerialFieldProperty item : child._serialFieldPropertyMap.values())this.addSerialFieldProperty(item);for(TextFieldProperty item : child._textFieldPropertyMap.values())this.addTextFieldProperty(item);for(PictureFieldProperty item : child._pictureFieldPropertyMap.values())this.addPictureFieldProperty(item);
	}

	public Class<?> getMetamodelClass() {
		return FormDefinitionBase.class;
	}

}

