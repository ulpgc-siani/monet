/*
* generated by Xtext
*/
package org.monet.editor.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class MonetModelingLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DomainModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionModelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProjectModelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDistributionModelParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DomainModel:
		//	DefinitionModel | ProjectModel | DistributionModel;
		public ParserRule getRule() { return rule; }

		//DefinitionModel | ProjectModel | DistributionModel
		public Alternatives getAlternatives() { return cAlternatives; }

		//DefinitionModel
		public RuleCall getDefinitionModelParserRuleCall_0() { return cDefinitionModelParserRuleCall_0; }

		//ProjectModel
		public RuleCall getProjectModelParserRuleCall_1() { return cProjectModelParserRuleCall_1; }

		//DistributionModel
		public RuleCall getDistributionModelParserRuleCall_2() { return cDistributionModelParserRuleCall_2; }
	}

	public class DistributionModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DistributionModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDistributionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExtendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSuperTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSuperTypeProjectModelCrossReference_3_0 = (CrossReference)cSuperTypeAssignment_3.eContents().get(0);
		private final RuleCall cSuperTypeProjectModelQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cSuperTypeProjectModelCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesManifestFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DistributionModel:
		//	"distribution" name=ValidID "extends" superType=[ProjectModel|QualifiedName] "{" features+=ManifestFeature* "}";
		public ParserRule getRule() { return rule; }

		//"distribution" name=ValidID "extends" superType=[ProjectModel|QualifiedName] "{" features+=ManifestFeature* "}"
		public Group getGroup() { return cGroup; }

		//"distribution"
		public Keyword getDistributionKeyword_0() { return cDistributionKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"extends"
		public Keyword getExtendsKeyword_2() { return cExtendsKeyword_2; }

		//superType=[ProjectModel|QualifiedName]
		public Assignment getSuperTypeAssignment_3() { return cSuperTypeAssignment_3; }

		//[ProjectModel|QualifiedName]
		public CrossReference getSuperTypeProjectModelCrossReference_3_0() { return cSuperTypeProjectModelCrossReference_3_0; }

		//QualifiedName
		public RuleCall getSuperTypeProjectModelQualifiedNameParserRuleCall_3_0_1() { return cSuperTypeProjectModelQualifiedNameParserRuleCall_3_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//features+=ManifestFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }

		//ManifestFeature
		public RuleCall getFeaturesManifestFeatureParserRuleCall_5_0() { return cFeaturesManifestFeatureParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ProjectModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProjectModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesManifestFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ProjectModel:
		//	"project" name=ValidID "{" features+=ManifestFeature* "}";
		public ParserRule getRule() { return rule; }

		//"project" name=ValidID "{" features+=ManifestFeature* "}"
		public Group getGroup() { return cGroup; }

		//"project"
		public Keyword getProjectKeyword_0() { return cProjectKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//features+=ManifestFeature*
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }

		//ManifestFeature
		public RuleCall getFeaturesManifestFeatureParserRuleCall_3_0() { return cFeaturesManifestFeatureParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ManifestFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ManifestFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDefineParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMethodParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ManifestFeature:
		//	Attribute | Property | Define | Method;
		public ParserRule getRule() { return rule; }

		//Attribute | Property | Define | Method
		public Alternatives getAlternatives() { return cAlternatives; }

		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }

		//Property
		public RuleCall getPropertyParserRuleCall_1() { return cPropertyParserRuleCall_1; }

		//Define
		public RuleCall getDefineParserRuleCall_2() { return cDefineParserRuleCall_2; }

		//Method
		public RuleCall getMethodParserRuleCall_3() { return cMethodParserRuleCall_3; }
	}

	public class DefinitionModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefinitionModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementsImportParserRuleCall_0_0 = (RuleCall)cElementsAssignment_0.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsPackageDeclarationParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		
		//DefinitionModel:
		//	elements+=Import* elements+=PackageDeclaration;
		public ParserRule getRule() { return rule; }

		//elements+=Import* elements+=PackageDeclaration
		public Group getGroup() { return cGroup; }

		//elements+=Import*
		public Assignment getElementsAssignment_0() { return cElementsAssignment_0; }

		//Import
		public RuleCall getElementsImportParserRuleCall_0_0() { return cElementsImportParserRuleCall_0_0; }

		//elements+=PackageDeclaration
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }

		//PackageDeclaration
		public RuleCall getElementsPackageDeclarationParserRuleCall_1_0() { return cElementsPackageDeclarationParserRuleCall_1_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import:
		//	"import" importedNamespace=QualifiedNameWithWildcard;
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=QualifiedNameWithWildcard
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
	}

	public class CodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Code");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Code:
		//	"[" value=STRING "]";
		public ParserRule getRule() { return rule; }

		//"[" value=STRING "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDefinitionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDefinitionDefinitionParserRuleCall_3_0 = (RuleCall)cDefinitionAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PackageDeclaration:
		//	"package" name=QualifiedName "{" definition=Definition "}";
		public ParserRule getRule() { return rule; }

		//"package" name=QualifiedName "{" definition=Definition "}"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//definition=Definition
		public Assignment getDefinitionAssignment_3() { return cDefinitionAssignment_3; }

		//Definition
		public RuleCall getDefinitionDefinitionParserRuleCall_3_0() { return cDefinitionDefinitionParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class DefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefinitionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cActivityKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCatalogKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cCollectionKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cContainerKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cDashboardKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cDatastoreBuilderKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cDatastoreKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cDesktopKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cDocumentKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cExporterKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cFormKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cGlossaryKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cImporterKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cIndexKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cJobKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cMeasureUnitKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cRoleKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cSensorKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cServiceKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cTasktrayKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cThesaurusKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		
		//DefinitionType:
		//	"activity" | "catalog" | "collection" | "container" | "dashboard" | "datastore-builder" | "datastore" | "desktop" |
		//	"document" | "exporter" | "form" | "glossary" | "importer" | "index" | "job" | "measure-unit" | "role" | "sensor" |
		//	"service" | "tasktray" | "thesaurus";
		public ParserRule getRule() { return rule; }

		//"activity" | "catalog" | "collection" | "container" | "dashboard" | "datastore-builder" | "datastore" | "desktop" |
		//"document" | "exporter" | "form" | "glossary" | "importer" | "index" | "job" | "measure-unit" | "role" | "sensor" |
		//"service" | "tasktray" | "thesaurus"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"activity"
		public Keyword getActivityKeyword_0() { return cActivityKeyword_0; }

		//"catalog"
		public Keyword getCatalogKeyword_1() { return cCatalogKeyword_1; }

		//"collection"
		public Keyword getCollectionKeyword_2() { return cCollectionKeyword_2; }

		//"container"
		public Keyword getContainerKeyword_3() { return cContainerKeyword_3; }

		//"dashboard"
		public Keyword getDashboardKeyword_4() { return cDashboardKeyword_4; }

		//"datastore-builder"
		public Keyword getDatastoreBuilderKeyword_5() { return cDatastoreBuilderKeyword_5; }

		//"datastore"
		public Keyword getDatastoreKeyword_6() { return cDatastoreKeyword_6; }

		//"desktop"
		public Keyword getDesktopKeyword_7() { return cDesktopKeyword_7; }

		//"document"
		public Keyword getDocumentKeyword_8() { return cDocumentKeyword_8; }

		//"exporter"
		public Keyword getExporterKeyword_9() { return cExporterKeyword_9; }

		//"form"
		public Keyword getFormKeyword_10() { return cFormKeyword_10; }

		//"glossary"
		public Keyword getGlossaryKeyword_11() { return cGlossaryKeyword_11; }

		//"importer"
		public Keyword getImporterKeyword_12() { return cImporterKeyword_12; }

		//"index"
		public Keyword getIndexKeyword_13() { return cIndexKeyword_13; }

		//"job"
		public Keyword getJobKeyword_14() { return cJobKeyword_14; }

		//"measure-unit"
		public Keyword getMeasureUnitKeyword_15() { return cMeasureUnitKeyword_15; }

		//"role"
		public Keyword getRoleKeyword_16() { return cRoleKeyword_16; }

		//"sensor"
		public Keyword getSensorKeyword_17() { return cSensorKeyword_17; }

		//"service"
		public Keyword getServiceKeyword_18() { return cServiceKeyword_18; }

		//"tasktray"
		public Keyword getTasktrayKeyword_19() { return cTasktrayKeyword_19; }

		//"thesaurus"
		public Keyword getThesaurusKeyword_20() { return cThesaurusKeyword_20; }
	}

	public class PropertyTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropertyTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cParentKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFieldPictureKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cSelectKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cAllowLocationsKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cAbortedKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cAllowAddKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cIsComponentKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cTaxonomyKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cSignaturesKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cIsStaticKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cTabTaskboardKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cTermsKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cEditTextKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cDefaultLocationKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cIsDefaultKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cTabTrashKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cCubeKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cRequireConfirmationKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cTasksKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cIsEnvironmentKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cEditMemoKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cFieldSummationKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cMappingKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cLinksOutKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cEditVideoKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cCaptureDateKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cFieldBooleanKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cRuleViewKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cIndexKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cSelfGeneratedKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cBackEnableKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cConfirmationKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cSecondaryKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cExplicitKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cAllowEditKeyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cExitKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		private final Keyword cIsInitialKeyword_36 = (Keyword)cAlternatives.eContents().get(36);
		private final Keyword cEnableHistoryKeyword_37 = (Keyword)cAlternatives.eContents().get(37);
		private final Keyword cFolderKeyword_38 = (Keyword)cAlternatives.eContents().get(38);
		private final Keyword cSizeKeyword_39 = (Keyword)cAlternatives.eContents().get(39);
		private final Keyword cStopKeyword_40 = (Keyword)cAlternatives.eContents().get(40);
		private final Keyword cMetaKeyword_41 = (Keyword)cAlternatives.eContents().get(41);
		private final Keyword cIsExtendedKeyword_42 = (Keyword)cAlternatives.eContents().get(42);
		private final Keyword cAnalyzeKeyword_43 = (Keyword)cAlternatives.eContents().get(43);
		private final Keyword cFieldDateKeyword_44 = (Keyword)cAlternatives.eContents().get(44);
		private final Keyword cAllowLessPrecisionKeyword_45 = (Keyword)cAlternatives.eContents().get(45);
		private final Keyword cOrdersKeyword_46 = (Keyword)cAlternatives.eContents().get(46);
		private final Keyword cEnrollKeyword_47 = (Keyword)cAlternatives.eContents().get(47);
		private final Keyword cAllowSearchKeyword_48 = (Keyword)cAlternatives.eContents().get(48);
		private final Keyword cItemsKeyword_49 = (Keyword)cAlternatives.eContents().get(49);
		private final Keyword cPrimaryKeyword_50 = (Keyword)cAlternatives.eContents().get(50);
		private final Keyword cIsUnivocalKeyword_51 = (Keyword)cAlternatives.eContents().get(51);
		private final Keyword cImplicitKeyword_52 = (Keyword)cAlternatives.eContents().get(52);
		private final Keyword cInternalKeyword_53 = (Keyword)cAlternatives.eContents().get(53);
		private final Keyword cWaitKeyword_54 = (Keyword)cAlternatives.eContents().get(54);
		private final Keyword cSendResponseKeyword_55 = (Keyword)cAlternatives.eContents().get(55);
		private final Keyword cAttachmentsKeyword_56 = (Keyword)cAlternatives.eContents().get(56);
		private final Keyword cSignatureKeyword_57 = (Keyword)cAlternatives.eContents().get(57);
		private final Keyword cIsSingletonKeyword_58 = (Keyword)cAlternatives.eContents().get(58);
		private final Keyword cPatternKeyword_59 = (Keyword)cAlternatives.eContents().get(59);
		private final Keyword cFieldNumberKeyword_60 = (Keyword)cAlternatives.eContents().get(60);
		private final Keyword cEditPositionKeyword_61 = (Keyword)cAlternatives.eContents().get(61);
		private final Keyword cRangeKeyword_62 = (Keyword)cAlternatives.eContents().get(62);
		private final Keyword cFieldUriKeyword_63 = (Keyword)cAlternatives.eContents().get(63);
		private final Keyword cAssignRoleKeyword_64 = (Keyword)cAlternatives.eContents().get(64);
		private final Keyword cIsPrivateKeyword_65 = (Keyword)cAlternatives.eContents().get(65);
		private final Keyword cEditCheckKeyword_66 = (Keyword)cAlternatives.eContents().get(66);
		private final Keyword cFeatureKeyword_67 = (Keyword)cAlternatives.eContents().get(67);
		private final Keyword cUnpublishKeyword_68 = (Keyword)cAlternatives.eContents().get(68);
		private final Keyword cAddOperationKeyword_69 = (Keyword)cAlternatives.eContents().get(69);
		private final Keyword cTermKeyword_70 = (Keyword)cAlternatives.eContents().get(70);
		private final Keyword cAttributeKeyword_71 = (Keyword)cAlternatives.eContents().get(71);
		private final Keyword cPlaceKeyword_72 = (Keyword)cAlternatives.eContents().get(72);
		private final Keyword cEnableServicesKeyword_73 = (Keyword)cAlternatives.eContents().get(73);
		private final Keyword cCapturePositionKeyword_74 = (Keyword)cAlternatives.eContents().get(74);
		private final Keyword cFederationKeyword_75 = (Keyword)cAlternatives.eContents().get(75);
		private final Keyword cContainKeyword_76 = (Keyword)cAlternatives.eContents().get(76);
		private final Keyword cEditSelectKeyword_77 = (Keyword)cAlternatives.eContents().get(77);
		private final Keyword cIsEmbeddedKeyword_78 = (Keyword)cAlternatives.eContents().get(78);
		private final Keyword cDisplayKeyword_79 = (Keyword)cAlternatives.eContents().get(79);
		private final Keyword cFieldNodeKeyword_80 = (Keyword)cAlternatives.eContents().get(80);
		private final Keyword cIsEmailKeyword_81 = (Keyword)cAlternatives.eContents().get(81);
		private final Keyword cEditDateKeyword_82 = (Keyword)cAlternatives.eContents().get(82);
		private final Keyword cFilterKeyword_83 = (Keyword)cAlternatives.eContents().get(83);
		private final Keyword cFieldLinkKeyword_84 = (Keyword)cAlternatives.eContents().get(84);
		private final Keyword cFromRolesKeyword_85 = (Keyword)cAlternatives.eContents().get(85);
		private final Keyword cToolbarKeyword_86 = (Keyword)cAlternatives.eContents().get(86);
		private final Keyword cTabRolesKeyword_87 = (Keyword)cAlternatives.eContents().get(87);
		private final Keyword cIsConditionalKeyword_88 = (Keyword)cAlternatives.eContents().get(88);
		private final Keyword cIsFinalKeyword_89 = (Keyword)cAlternatives.eContents().get(89);
		private final Keyword cPartnerKeyword_90 = (Keyword)cAlternatives.eContents().get(90);
		private final Keyword cMetricKeyword_91 = (Keyword)cAlternatives.eContents().get(91);
		private final Keyword cDisableKeyword_92 = (Keyword)cAlternatives.eContents().get(92);
		private final Keyword cReportKeyword_93 = (Keyword)cAlternatives.eContents().get(93);
		private final Keyword cIsAbstractKeyword_94 = (Keyword)cAlternatives.eContents().get(94);
		private final Keyword cToKeyword_95 = (Keyword)cAlternatives.eContents().get(95);
		private final Keyword cTabNewsKeyword_96 = (Keyword)cAlternatives.eContents().get(96);
		private final Keyword cIsSelfGeneratedKeyword_97 = (Keyword)cAlternatives.eContents().get(97);
		private final Keyword cOperationKeyword_98 = (Keyword)cAlternatives.eContents().get(98);
		private final Keyword cIsBreadcrumbsDisabledKeyword_99 = (Keyword)cAlternatives.eContents().get(99);
		private final Keyword cSendRequestKeyword_100 = (Keyword)cAlternatives.eContents().get(100);
		private final Keyword cIndicatorKeyword_101 = (Keyword)cAlternatives.eContents().get(101);
		private final Keyword cFieldTextKeyword_102 = (Keyword)cAlternatives.eContents().get(102);
		private final Keyword cIsRequiredKeyword_103 = (Keyword)cAlternatives.eContents().get(103);
		private final Keyword cDoorKeyword_104 = (Keyword)cAlternatives.eContents().get(104);
		private final Keyword cRuleNodeKeyword_105 = (Keyword)cAlternatives.eContents().get(105);
		private final Keyword cNotesKeyword_106 = (Keyword)cAlternatives.eContents().get(106);
		private final Keyword cUseKeyword_107 = (Keyword)cAlternatives.eContents().get(107);
		private final Keyword cEditPictureKeyword_108 = (Keyword)cAlternatives.eContents().get(108);
		private final Keyword cSourceKeyword_109 = (Keyword)cAlternatives.eContents().get(109);
		private final Keyword cListenKeyword_110 = (Keyword)cAlternatives.eContents().get(110);
		private final Keyword cSpaceKeyword_111 = (Keyword)cAlternatives.eContents().get(111);
		private final Keyword cReferenceKeyword_112 = (Keyword)cAlternatives.eContents().get(112);
		private final Keyword cViewKeyword_113 = (Keyword)cAlternatives.eContents().get(113);
		private final Keyword cIsCategoryKeyword_114 = (Keyword)cAlternatives.eContents().get(114);
		private final Keyword cIsMultipleKeyword_115 = (Keyword)cAlternatives.eContents().get(115);
		private final Keyword cIsExtensibleKeyword_116 = (Keyword)cAlternatives.eContents().get(116);
		private final Keyword cIsHandWrittenKeyword_117 = (Keyword)cAlternatives.eContents().get(117);
		private final Keyword cIsPrototypableKeyword_118 = (Keyword)cAlternatives.eContents().get(118);
		private final Keyword cEditBooleanKeyword_119 = (Keyword)cAlternatives.eContents().get(119);
		private final Keyword cCheckPositionKeyword_120 = (Keyword)cAlternatives.eContents().get(120);
		private final Keyword cAllowHistoryKeyword_121 = (Keyword)cAlternatives.eContents().get(121);
		private final Keyword cAddKeyword_122 = (Keyword)cAlternatives.eContents().get(122);
		private final Keyword cFieldCompositeKeyword_123 = (Keyword)cAlternatives.eContents().get(123);
		private final Keyword cContestKeyword_124 = (Keyword)cAlternatives.eContents().get(124);
		private final Keyword cLevelKeyword_125 = (Keyword)cAlternatives.eContents().get(125);
		private final Keyword cIsReadonlyKeyword_126 = (Keyword)cAlternatives.eContents().get(126);
		private final Keyword cSharedPrototypesKeyword_127 = (Keyword)cAlternatives.eContents().get(127);
		private final Keyword cSendJobKeyword_128 = (Keyword)cAlternatives.eContents().get(128);
		private final Keyword cExternalKeyword_129 = (Keyword)cAlternatives.eContents().get(129);
		private final Keyword cIsHiddenKeyword_130 = (Keyword)cAlternatives.eContents().get(130);
		private final Keyword cFieldMemoKeyword_131 = (Keyword)cAlternatives.eContents().get(131);
		private final Keyword cEnableFeedersKeyword_132 = (Keyword)cAlternatives.eContents().get(132);
		private final Keyword cDisableEditionKeyword_133 = (Keyword)cAlternatives.eContents().get(133);
		private final Keyword cIsVisibleWhenEmbeddedKeyword_134 = (Keyword)cAlternatives.eContents().get(134);
		private final Keyword cEditNumberKeyword_135 = (Keyword)cAlternatives.eContents().get(135);
		private final Keyword cSecondaryLocationKeyword_136 = (Keyword)cAlternatives.eContents().get(136);
		private final Keyword cExpirationKeyword_137 = (Keyword)cAlternatives.eContents().get(137);
		private final Keyword cRuleFormKeyword_138 = (Keyword)cAlternatives.eContents().get(138);
		private final Keyword cIsExternalFedKeyword_139 = (Keyword)cAlternatives.eContents().get(139);
		private final Keyword cLinksInKeyword_140 = (Keyword)cAlternatives.eContents().get(140);
		private final Keyword cBoundaryKeyword_141 = (Keyword)cAlternatives.eContents().get(141);
		private final Keyword cAllowKeyKeyword_142 = (Keyword)cAlternatives.eContents().get(142);
		private final Keyword cIsReadOnlyKeyword_143 = (Keyword)cAlternatives.eContents().get(143);
		private final Keyword cRequestKeyword_144 = (Keyword)cAlternatives.eContents().get(144);
		private final Keyword cIsNegativeKeyword_145 = (Keyword)cAlternatives.eContents().get(145);
		private final Keyword cIsGeoreferencedKeyword_146 = (Keyword)cAlternatives.eContents().get(146);
		private final Keyword cFromIndexKeyword_147 = (Keyword)cAlternatives.eContents().get(147);
		private final Keyword cRejectedKeyword_148 = (Keyword)cAlternatives.eContents().get(148);
		private final Keyword cLineKeyword_149 = (Keyword)cAlternatives.eContents().get(149);
		private final Keyword cShowKeyword_150 = (Keyword)cAlternatives.eContents().get(150);
		private final Keyword cForKeyword_151 = (Keyword)cAlternatives.eContents().get(151);
		private final Keyword cEditionKeyword_152 = (Keyword)cAlternatives.eContents().get(152);
		private final Keyword cScaleKeyword_153 = (Keyword)cAlternatives.eContents().get(153);
		private final Keyword cAllowOtherKeyword_154 = (Keyword)cAlternatives.eContents().get(154);
		private final Keyword cTimeoutKeyword_155 = (Keyword)cAlternatives.eContents().get(155);
		private final Keyword cOwnedPrototypesKeyword_156 = (Keyword)cAlternatives.eContents().get(156);
		private final Keyword cIsOustKeyword_157 = (Keyword)cAlternatives.eContents().get(157);
		private final Keyword cShortcutKeyword_158 = (Keyword)cAlternatives.eContents().get(158);
		private final Keyword cProviderKeyword_159 = (Keyword)cAlternatives.eContents().get(159);
		private final Keyword cSortingKeyword_160 = (Keyword)cAlternatives.eContents().get(160);
		private final Keyword cFieldNodeKeyword_161 = (Keyword)cAlternatives.eContents().get(161);
		private final Keyword cRevisionsKeyword_162 = (Keyword)cAlternatives.eContents().get(162);
		private final Keyword cDimensionKeyword_163 = (Keyword)cAlternatives.eContents().get(163);
		private final Keyword cSummaryKeyword_164 = (Keyword)cAlternatives.eContents().get(164);
		private final Keyword cTabTasktrayKeyword_165 = (Keyword)cAlternatives.eContents().get(165);
		private final Keyword cCenterKeyword_166 = (Keyword)cAlternatives.eContents().get(166);
		private final Keyword cIsBackgroundKeyword_167 = (Keyword)cAlternatives.eContents().get(167);
		private final Keyword cLengthKeyword_168 = (Keyword)cAlternatives.eContents().get(168);
		private final Keyword cIsProfilePhotoKeyword_169 = (Keyword)cAlternatives.eContents().get(169);
		private final Keyword cFieldCheckKeyword_170 = (Keyword)cAlternatives.eContents().get(170);
		private final Keyword cDisableUsersKeyword_171 = (Keyword)cAlternatives.eContents().get(171);
		private final Keyword cIsCollapsibleKeyword_172 = (Keyword)cAlternatives.eContents().get(172);
		private final Keyword cFieldFileKeyword_173 = (Keyword)cAlternatives.eContents().get(173);
		private final Keyword cFieldSelectKeyword_174 = (Keyword)cAlternatives.eContents().get(174);
		private final Keyword cSerialKeyword_175 = (Keyword)cAlternatives.eContents().get(175);
		private final Keyword cIsManualKeyword_176 = (Keyword)cAlternatives.eContents().get(176);
		private final Keyword cResponseKeyword_177 = (Keyword)cAlternatives.eContents().get(177);
		private final Keyword cPublishKeyword_178 = (Keyword)cAlternatives.eContents().get(178);
		private final Keyword cOlapKeyword_179 = (Keyword)cAlternatives.eContents().get(179);
		private final Keyword cRuleLinkKeyword_180 = (Keyword)cAlternatives.eContents().get(180);
		private final Keyword cRuleOperationKeyword_181 = (Keyword)cAlternatives.eContents().get(181);
		private final Keyword cFieldSerialKeyword_182 = (Keyword)cAlternatives.eContents().get(182);
		private final Keyword cLocationsKeyword_183 = (Keyword)cAlternatives.eContents().get(183);
		private final Keyword cLocationKeyword_184 = (Keyword)cAlternatives.eContents().get(184);
		private final Keyword cStepKeyword_185 = (Keyword)cAlternatives.eContents().get(185);
		private final Keyword cRequirePartnerContextKeyword_186 = (Keyword)cAlternatives.eContents().get(186);
		private final Keyword cDelegationKeyword_187 = (Keyword)cAlternatives.eContents().get(187);
		private final Keyword cCategoryKeyword_188 = (Keyword)cAlternatives.eContents().get(188);
		private final Keyword cPropertiesKeyword_189 = (Keyword)cAlternatives.eContents().get(189);
		private final Keyword cCustomerKeyword_190 = (Keyword)cAlternatives.eContents().get(190);
		
		//PropertyTypes:
		//	"parent" | "field-picture" | "select" | "allow-locations" | "aborted" | "allow-add" | "is-component" | "taxonomy" |
		//	"signatures" | "is-static" | "tab:taskboard" | "terms" | "edit-text" | "default-location" | "is-default" | "tab:trash"
		//	| "cube" | "require-confirmation" | "tasks" | "is-environment" | "edit-memo" | "field-summation" | "mapping" |
		//	"links:out" | "edit-video" | "capture-date" | "field-boolean" | "rule:view" | "index" | "self-generated" |
		//	"back-enable" | "confirmation" | "secondary" | "explicit" | "allow-edit" | "exit" | "is-initial" | "enable-history" |
		//	"folder" | "size" | "stop" | "meta" | "is-extended" | "analyze" | "field-date" | "allow-less-precision" | "orders" |
		//	"enroll" | "allow-search" | "items" | "primary" | "is-univocal" | "implicit" | "internal" | "wait" | "send-response" |
		//	"attachments" | "signature" | "is-singleton" | "pattern" | "field-number" | "edit-position" | "range" | "field-uri" |
		//	"assign-role" | "is-private" | "edit-check" | "feature" | "unpublish" | "add-operation" | "term" | "attribute" |
		//	"place" | "enable-services" | "capture-position" | "federation" | "contain" | "edit-select" | "is-embedded" |
		//	"display" | "field-node" | "is-email" | "edit-date" | "filter" | "field-link" | "from-roles" | "toolbar" | "tab:roles"
		//	| "is-conditional" | "is-final" | "partner" | "metric" | "disable" | "report" | "is-abstract" | "to" | "tab:news" |
		//	"is-self-generated" | "operation" | "is-breadcrumbs-disabled" | "send-request" | "indicator" | "field-text" |
		//	"is-required" | "door" | "rule:node" | "notes" | "use" | "edit-picture" | "source" | "listen" | "space" | "reference"
		//	| "view" | "is-category" | "is-multiple" | "is-extensible" | "is-hand-written" | "is-prototypable" | "edit-boolean" |
		//	"check-position" | "allow-history" | "add" | "field-composite" | "contest" | "level" | "is-readonly" |
		//	"shared-prototypes" | "send-job" | "external" | "is-hidden" | "field-memo" | "enable-feeders" | "disable-edition" |
		//	"is-visible-when-embedded" | "edit-number" | "secondary:location" | "expiration" | "rule:form" | "is-external-fed" |
		//	"links:in" | "boundary" | "allow-key" | "is-read-only" | "request" | "is-negative" | "is-georeferenced" | "from-index"
		//	| "rejected" | "line" | "show" | "for" | "edition" | "scale" | "allow-other" | "timeout" | "owned-prototypes" |
		//	"is-oust" | "shortcut" | "provider" | "sorting" | "field:node" | "revisions" | "dimension" | "summary" |
		//	"tab:tasktray" | "center" | "is-background" | "length" | "is-profile-photo" | "field-check" | "disable-users" |
		//	"is-collapsible" | "field-file" | "field-select" | "serial" | "is-manual" | "response" | "publish" | "olap" |
		//	"rule:link" | "rule:operation" | "field-serial" | "locations" | "location" | "step" | "require-partner-context" |
		//	"delegation" | "category" | "properties" | "customer";
		public ParserRule getRule() { return rule; }

		//"parent" | "field-picture" | "select" | "allow-locations" | "aborted" | "allow-add" | "is-component" | "taxonomy" |
		//"signatures" | "is-static" | "tab:taskboard" | "terms" | "edit-text" | "default-location" | "is-default" | "tab:trash"
		//| "cube" | "require-confirmation" | "tasks" | "is-environment" | "edit-memo" | "field-summation" | "mapping" |
		//"links:out" | "edit-video" | "capture-date" | "field-boolean" | "rule:view" | "index" | "self-generated" |
		//"back-enable" | "confirmation" | "secondary" | "explicit" | "allow-edit" | "exit" | "is-initial" | "enable-history" |
		//"folder" | "size" | "stop" | "meta" | "is-extended" | "analyze" | "field-date" | "allow-less-precision" | "orders" |
		//"enroll" | "allow-search" | "items" | "primary" | "is-univocal" | "implicit" | "internal" | "wait" | "send-response" |
		//"attachments" | "signature" | "is-singleton" | "pattern" | "field-number" | "edit-position" | "range" | "field-uri" |
		//"assign-role" | "is-private" | "edit-check" | "feature" | "unpublish" | "add-operation" | "term" | "attribute" |
		//"place" | "enable-services" | "capture-position" | "federation" | "contain" | "edit-select" | "is-embedded" | "display"
		//| "field-node" | "is-email" | "edit-date" | "filter" | "field-link" | "from-roles" | "toolbar" | "tab:roles" |
		//"is-conditional" | "is-final" | "partner" | "metric" | "disable" | "report" | "is-abstract" | "to" | "tab:news" |
		//"is-self-generated" | "operation" | "is-breadcrumbs-disabled" | "send-request" | "indicator" | "field-text" |
		//"is-required" | "door" | "rule:node" | "notes" | "use" | "edit-picture" | "source" | "listen" | "space" | "reference" |
		//"view" | "is-category" | "is-multiple" | "is-extensible" | "is-hand-written" | "is-prototypable" | "edit-boolean" |
		//"check-position" | "allow-history" | "add" | "field-composite" | "contest" | "level" | "is-readonly" |
		//"shared-prototypes" | "send-job" | "external" | "is-hidden" | "field-memo" | "enable-feeders" | "disable-edition" |
		//"is-visible-when-embedded" | "edit-number" | "secondary:location" | "expiration" | "rule:form" | "is-external-fed" |
		//"links:in" | "boundary" | "allow-key" | "is-read-only" | "request" | "is-negative" | "is-georeferenced" | "from-index"
		//| "rejected" | "line" | "show" | "for" | "edition" | "scale" | "allow-other" | "timeout" | "owned-prototypes" |
		//"is-oust" | "shortcut" | "provider" | "sorting" | "field:node" | "revisions" | "dimension" | "summary" | "tab:tasktray"
		//| "center" | "is-background" | "length" | "is-profile-photo" | "field-check" | "disable-users" | "is-collapsible" |
		//"field-file" | "field-select" | "serial" | "is-manual" | "response" | "publish" | "olap" | "rule:link" |
		//"rule:operation" | "field-serial" | "locations" | "location" | "step" | "require-partner-context" | "delegation" |
		//"category" | "properties" | "customer"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"parent"
		public Keyword getParentKeyword_0() { return cParentKeyword_0; }

		//"field-picture"
		public Keyword getFieldPictureKeyword_1() { return cFieldPictureKeyword_1; }

		//"select"
		public Keyword getSelectKeyword_2() { return cSelectKeyword_2; }

		//"allow-locations"
		public Keyword getAllowLocationsKeyword_3() { return cAllowLocationsKeyword_3; }

		//"aborted"
		public Keyword getAbortedKeyword_4() { return cAbortedKeyword_4; }

		//"allow-add"
		public Keyword getAllowAddKeyword_5() { return cAllowAddKeyword_5; }

		//"is-component"
		public Keyword getIsComponentKeyword_6() { return cIsComponentKeyword_6; }

		//"taxonomy"
		public Keyword getTaxonomyKeyword_7() { return cTaxonomyKeyword_7; }

		//"signatures"
		public Keyword getSignaturesKeyword_8() { return cSignaturesKeyword_8; }

		//"is-static"
		public Keyword getIsStaticKeyword_9() { return cIsStaticKeyword_9; }

		//"tab:taskboard"
		public Keyword getTabTaskboardKeyword_10() { return cTabTaskboardKeyword_10; }

		//"terms"
		public Keyword getTermsKeyword_11() { return cTermsKeyword_11; }

		//"edit-text"
		public Keyword getEditTextKeyword_12() { return cEditTextKeyword_12; }

		//"default-location"
		public Keyword getDefaultLocationKeyword_13() { return cDefaultLocationKeyword_13; }

		//"is-default"
		public Keyword getIsDefaultKeyword_14() { return cIsDefaultKeyword_14; }

		//"tab:trash"
		public Keyword getTabTrashKeyword_15() { return cTabTrashKeyword_15; }

		//"cube"
		public Keyword getCubeKeyword_16() { return cCubeKeyword_16; }

		//"require-confirmation"
		public Keyword getRequireConfirmationKeyword_17() { return cRequireConfirmationKeyword_17; }

		//"tasks"
		public Keyword getTasksKeyword_18() { return cTasksKeyword_18; }

		//"is-environment"
		public Keyword getIsEnvironmentKeyword_19() { return cIsEnvironmentKeyword_19; }

		//"edit-memo"
		public Keyword getEditMemoKeyword_20() { return cEditMemoKeyword_20; }

		//"field-summation"
		public Keyword getFieldSummationKeyword_21() { return cFieldSummationKeyword_21; }

		//"mapping"
		public Keyword getMappingKeyword_22() { return cMappingKeyword_22; }

		//"links:out"
		public Keyword getLinksOutKeyword_23() { return cLinksOutKeyword_23; }

		//"edit-video"
		public Keyword getEditVideoKeyword_24() { return cEditVideoKeyword_24; }

		//"capture-date"
		public Keyword getCaptureDateKeyword_25() { return cCaptureDateKeyword_25; }

		//"field-boolean"
		public Keyword getFieldBooleanKeyword_26() { return cFieldBooleanKeyword_26; }

		//"rule:view"
		public Keyword getRuleViewKeyword_27() { return cRuleViewKeyword_27; }

		//"index"
		public Keyword getIndexKeyword_28() { return cIndexKeyword_28; }

		//"self-generated"
		public Keyword getSelfGeneratedKeyword_29() { return cSelfGeneratedKeyword_29; }

		//"back-enable"
		public Keyword getBackEnableKeyword_30() { return cBackEnableKeyword_30; }

		//"confirmation"
		public Keyword getConfirmationKeyword_31() { return cConfirmationKeyword_31; }

		//"secondary"
		public Keyword getSecondaryKeyword_32() { return cSecondaryKeyword_32; }

		//"explicit"
		public Keyword getExplicitKeyword_33() { return cExplicitKeyword_33; }

		//"allow-edit"
		public Keyword getAllowEditKeyword_34() { return cAllowEditKeyword_34; }

		//"exit"
		public Keyword getExitKeyword_35() { return cExitKeyword_35; }

		//"is-initial"
		public Keyword getIsInitialKeyword_36() { return cIsInitialKeyword_36; }

		//"enable-history"
		public Keyword getEnableHistoryKeyword_37() { return cEnableHistoryKeyword_37; }

		//"folder"
		public Keyword getFolderKeyword_38() { return cFolderKeyword_38; }

		//"size"
		public Keyword getSizeKeyword_39() { return cSizeKeyword_39; }

		//"stop"
		public Keyword getStopKeyword_40() { return cStopKeyword_40; }

		//"meta"
		public Keyword getMetaKeyword_41() { return cMetaKeyword_41; }

		//"is-extended"
		public Keyword getIsExtendedKeyword_42() { return cIsExtendedKeyword_42; }

		//"analyze"
		public Keyword getAnalyzeKeyword_43() { return cAnalyzeKeyword_43; }

		//"field-date"
		public Keyword getFieldDateKeyword_44() { return cFieldDateKeyword_44; }

		//"allow-less-precision"
		public Keyword getAllowLessPrecisionKeyword_45() { return cAllowLessPrecisionKeyword_45; }

		//"orders"
		public Keyword getOrdersKeyword_46() { return cOrdersKeyword_46; }

		//"enroll"
		public Keyword getEnrollKeyword_47() { return cEnrollKeyword_47; }

		//"allow-search"
		public Keyword getAllowSearchKeyword_48() { return cAllowSearchKeyword_48; }

		//"items"
		public Keyword getItemsKeyword_49() { return cItemsKeyword_49; }

		//"primary"
		public Keyword getPrimaryKeyword_50() { return cPrimaryKeyword_50; }

		//"is-univocal"
		public Keyword getIsUnivocalKeyword_51() { return cIsUnivocalKeyword_51; }

		//"implicit"
		public Keyword getImplicitKeyword_52() { return cImplicitKeyword_52; }

		//"internal"
		public Keyword getInternalKeyword_53() { return cInternalKeyword_53; }

		//"wait"
		public Keyword getWaitKeyword_54() { return cWaitKeyword_54; }

		//"send-response"
		public Keyword getSendResponseKeyword_55() { return cSendResponseKeyword_55; }

		//"attachments"
		public Keyword getAttachmentsKeyword_56() { return cAttachmentsKeyword_56; }

		//"signature"
		public Keyword getSignatureKeyword_57() { return cSignatureKeyword_57; }

		//"is-singleton"
		public Keyword getIsSingletonKeyword_58() { return cIsSingletonKeyword_58; }

		//"pattern"
		public Keyword getPatternKeyword_59() { return cPatternKeyword_59; }

		//"field-number"
		public Keyword getFieldNumberKeyword_60() { return cFieldNumberKeyword_60; }

		//"edit-position"
		public Keyword getEditPositionKeyword_61() { return cEditPositionKeyword_61; }

		//"range"
		public Keyword getRangeKeyword_62() { return cRangeKeyword_62; }

		//"field-uri"
		public Keyword getFieldUriKeyword_63() { return cFieldUriKeyword_63; }

		//"assign-role"
		public Keyword getAssignRoleKeyword_64() { return cAssignRoleKeyword_64; }

		//"is-private"
		public Keyword getIsPrivateKeyword_65() { return cIsPrivateKeyword_65; }

		//"edit-check"
		public Keyword getEditCheckKeyword_66() { return cEditCheckKeyword_66; }

		//"feature"
		public Keyword getFeatureKeyword_67() { return cFeatureKeyword_67; }

		//"unpublish"
		public Keyword getUnpublishKeyword_68() { return cUnpublishKeyword_68; }

		//"add-operation"
		public Keyword getAddOperationKeyword_69() { return cAddOperationKeyword_69; }

		//"term"
		public Keyword getTermKeyword_70() { return cTermKeyword_70; }

		//"attribute"
		public Keyword getAttributeKeyword_71() { return cAttributeKeyword_71; }

		//"place"
		public Keyword getPlaceKeyword_72() { return cPlaceKeyword_72; }

		//"enable-services"
		public Keyword getEnableServicesKeyword_73() { return cEnableServicesKeyword_73; }

		//"capture-position"
		public Keyword getCapturePositionKeyword_74() { return cCapturePositionKeyword_74; }

		//"federation"
		public Keyword getFederationKeyword_75() { return cFederationKeyword_75; }

		//"contain"
		public Keyword getContainKeyword_76() { return cContainKeyword_76; }

		//"edit-select"
		public Keyword getEditSelectKeyword_77() { return cEditSelectKeyword_77; }

		//"is-embedded"
		public Keyword getIsEmbeddedKeyword_78() { return cIsEmbeddedKeyword_78; }

		//"display"
		public Keyword getDisplayKeyword_79() { return cDisplayKeyword_79; }

		//"field-node"
		public Keyword getFieldNodeKeyword_80() { return cFieldNodeKeyword_80; }

		//"is-email"
		public Keyword getIsEmailKeyword_81() { return cIsEmailKeyword_81; }

		//"edit-date"
		public Keyword getEditDateKeyword_82() { return cEditDateKeyword_82; }

		//"filter"
		public Keyword getFilterKeyword_83() { return cFilterKeyword_83; }

		//"field-link"
		public Keyword getFieldLinkKeyword_84() { return cFieldLinkKeyword_84; }

		//"from-roles"
		public Keyword getFromRolesKeyword_85() { return cFromRolesKeyword_85; }

		//"toolbar"
		public Keyword getToolbarKeyword_86() { return cToolbarKeyword_86; }

		//"tab:roles"
		public Keyword getTabRolesKeyword_87() { return cTabRolesKeyword_87; }

		//"is-conditional"
		public Keyword getIsConditionalKeyword_88() { return cIsConditionalKeyword_88; }

		//"is-final"
		public Keyword getIsFinalKeyword_89() { return cIsFinalKeyword_89; }

		//"partner"
		public Keyword getPartnerKeyword_90() { return cPartnerKeyword_90; }

		//"metric"
		public Keyword getMetricKeyword_91() { return cMetricKeyword_91; }

		//"disable"
		public Keyword getDisableKeyword_92() { return cDisableKeyword_92; }

		//"report"
		public Keyword getReportKeyword_93() { return cReportKeyword_93; }

		//"is-abstract"
		public Keyword getIsAbstractKeyword_94() { return cIsAbstractKeyword_94; }

		//"to"
		public Keyword getToKeyword_95() { return cToKeyword_95; }

		//"tab:news"
		public Keyword getTabNewsKeyword_96() { return cTabNewsKeyword_96; }

		//"is-self-generated"
		public Keyword getIsSelfGeneratedKeyword_97() { return cIsSelfGeneratedKeyword_97; }

		//"operation"
		public Keyword getOperationKeyword_98() { return cOperationKeyword_98; }

		//"is-breadcrumbs-disabled"
		public Keyword getIsBreadcrumbsDisabledKeyword_99() { return cIsBreadcrumbsDisabledKeyword_99; }

		//"send-request"
		public Keyword getSendRequestKeyword_100() { return cSendRequestKeyword_100; }

		//"indicator"
		public Keyword getIndicatorKeyword_101() { return cIndicatorKeyword_101; }

		//"field-text"
		public Keyword getFieldTextKeyword_102() { return cFieldTextKeyword_102; }

		//"is-required"
		public Keyword getIsRequiredKeyword_103() { return cIsRequiredKeyword_103; }

		//"door"
		public Keyword getDoorKeyword_104() { return cDoorKeyword_104; }

		//"rule:node"
		public Keyword getRuleNodeKeyword_105() { return cRuleNodeKeyword_105; }

		//"notes"
		public Keyword getNotesKeyword_106() { return cNotesKeyword_106; }

		//"use"
		public Keyword getUseKeyword_107() { return cUseKeyword_107; }

		//"edit-picture"
		public Keyword getEditPictureKeyword_108() { return cEditPictureKeyword_108; }

		//"source"
		public Keyword getSourceKeyword_109() { return cSourceKeyword_109; }

		//"listen"
		public Keyword getListenKeyword_110() { return cListenKeyword_110; }

		//"space"
		public Keyword getSpaceKeyword_111() { return cSpaceKeyword_111; }

		//"reference"
		public Keyword getReferenceKeyword_112() { return cReferenceKeyword_112; }

		//"view"
		public Keyword getViewKeyword_113() { return cViewKeyword_113; }

		//"is-category"
		public Keyword getIsCategoryKeyword_114() { return cIsCategoryKeyword_114; }

		//"is-multiple"
		public Keyword getIsMultipleKeyword_115() { return cIsMultipleKeyword_115; }

		//"is-extensible"
		public Keyword getIsExtensibleKeyword_116() { return cIsExtensibleKeyword_116; }

		//"is-hand-written"
		public Keyword getIsHandWrittenKeyword_117() { return cIsHandWrittenKeyword_117; }

		//"is-prototypable"
		public Keyword getIsPrototypableKeyword_118() { return cIsPrototypableKeyword_118; }

		//"edit-boolean"
		public Keyword getEditBooleanKeyword_119() { return cEditBooleanKeyword_119; }

		//"check-position"
		public Keyword getCheckPositionKeyword_120() { return cCheckPositionKeyword_120; }

		//"allow-history"
		public Keyword getAllowHistoryKeyword_121() { return cAllowHistoryKeyword_121; }

		//"add"
		public Keyword getAddKeyword_122() { return cAddKeyword_122; }

		//"field-composite"
		public Keyword getFieldCompositeKeyword_123() { return cFieldCompositeKeyword_123; }

		//"contest"
		public Keyword getContestKeyword_124() { return cContestKeyword_124; }

		//"level"
		public Keyword getLevelKeyword_125() { return cLevelKeyword_125; }

		//"is-readonly"
		public Keyword getIsReadonlyKeyword_126() { return cIsReadonlyKeyword_126; }

		//"shared-prototypes"
		public Keyword getSharedPrototypesKeyword_127() { return cSharedPrototypesKeyword_127; }

		//"send-job"
		public Keyword getSendJobKeyword_128() { return cSendJobKeyword_128; }

		//"external"
		public Keyword getExternalKeyword_129() { return cExternalKeyword_129; }

		//"is-hidden"
		public Keyword getIsHiddenKeyword_130() { return cIsHiddenKeyword_130; }

		//"field-memo"
		public Keyword getFieldMemoKeyword_131() { return cFieldMemoKeyword_131; }

		//"enable-feeders"
		public Keyword getEnableFeedersKeyword_132() { return cEnableFeedersKeyword_132; }

		//"disable-edition"
		public Keyword getDisableEditionKeyword_133() { return cDisableEditionKeyword_133; }

		//"is-visible-when-embedded"
		public Keyword getIsVisibleWhenEmbeddedKeyword_134() { return cIsVisibleWhenEmbeddedKeyword_134; }

		//"edit-number"
		public Keyword getEditNumberKeyword_135() { return cEditNumberKeyword_135; }

		//"secondary:location"
		public Keyword getSecondaryLocationKeyword_136() { return cSecondaryLocationKeyword_136; }

		//"expiration"
		public Keyword getExpirationKeyword_137() { return cExpirationKeyword_137; }

		//"rule:form"
		public Keyword getRuleFormKeyword_138() { return cRuleFormKeyword_138; }

		//"is-external-fed"
		public Keyword getIsExternalFedKeyword_139() { return cIsExternalFedKeyword_139; }

		//"links:in"
		public Keyword getLinksInKeyword_140() { return cLinksInKeyword_140; }

		//"boundary"
		public Keyword getBoundaryKeyword_141() { return cBoundaryKeyword_141; }

		//"allow-key"
		public Keyword getAllowKeyKeyword_142() { return cAllowKeyKeyword_142; }

		//"is-read-only"
		public Keyword getIsReadOnlyKeyword_143() { return cIsReadOnlyKeyword_143; }

		//"request"
		public Keyword getRequestKeyword_144() { return cRequestKeyword_144; }

		//"is-negative"
		public Keyword getIsNegativeKeyword_145() { return cIsNegativeKeyword_145; }

		//"is-georeferenced"
		public Keyword getIsGeoreferencedKeyword_146() { return cIsGeoreferencedKeyword_146; }

		//"from-index"
		public Keyword getFromIndexKeyword_147() { return cFromIndexKeyword_147; }

		//"rejected"
		public Keyword getRejectedKeyword_148() { return cRejectedKeyword_148; }

		//"line"
		public Keyword getLineKeyword_149() { return cLineKeyword_149; }

		//"show"
		public Keyword getShowKeyword_150() { return cShowKeyword_150; }

		//"for"
		public Keyword getForKeyword_151() { return cForKeyword_151; }

		//"edition"
		public Keyword getEditionKeyword_152() { return cEditionKeyword_152; }

		//"scale"
		public Keyword getScaleKeyword_153() { return cScaleKeyword_153; }

		//"allow-other"
		public Keyword getAllowOtherKeyword_154() { return cAllowOtherKeyword_154; }

		//"timeout"
		public Keyword getTimeoutKeyword_155() { return cTimeoutKeyword_155; }

		//"owned-prototypes"
		public Keyword getOwnedPrototypesKeyword_156() { return cOwnedPrototypesKeyword_156; }

		//"is-oust"
		public Keyword getIsOustKeyword_157() { return cIsOustKeyword_157; }

		//"shortcut"
		public Keyword getShortcutKeyword_158() { return cShortcutKeyword_158; }

		//"provider"
		public Keyword getProviderKeyword_159() { return cProviderKeyword_159; }

		//"sorting"
		public Keyword getSortingKeyword_160() { return cSortingKeyword_160; }

		//"field:node"
		public Keyword getFieldNodeKeyword_161() { return cFieldNodeKeyword_161; }

		//"revisions"
		public Keyword getRevisionsKeyword_162() { return cRevisionsKeyword_162; }

		//"dimension"
		public Keyword getDimensionKeyword_163() { return cDimensionKeyword_163; }

		//"summary"
		public Keyword getSummaryKeyword_164() { return cSummaryKeyword_164; }

		//"tab:tasktray"
		public Keyword getTabTasktrayKeyword_165() { return cTabTasktrayKeyword_165; }

		//"center"
		public Keyword getCenterKeyword_166() { return cCenterKeyword_166; }

		//"is-background"
		public Keyword getIsBackgroundKeyword_167() { return cIsBackgroundKeyword_167; }

		//"length"
		public Keyword getLengthKeyword_168() { return cLengthKeyword_168; }

		//"is-profile-photo"
		public Keyword getIsProfilePhotoKeyword_169() { return cIsProfilePhotoKeyword_169; }

		//"field-check"
		public Keyword getFieldCheckKeyword_170() { return cFieldCheckKeyword_170; }

		//"disable-users"
		public Keyword getDisableUsersKeyword_171() { return cDisableUsersKeyword_171; }

		//"is-collapsible"
		public Keyword getIsCollapsibleKeyword_172() { return cIsCollapsibleKeyword_172; }

		//"field-file"
		public Keyword getFieldFileKeyword_173() { return cFieldFileKeyword_173; }

		//"field-select"
		public Keyword getFieldSelectKeyword_174() { return cFieldSelectKeyword_174; }

		//"serial"
		public Keyword getSerialKeyword_175() { return cSerialKeyword_175; }

		//"is-manual"
		public Keyword getIsManualKeyword_176() { return cIsManualKeyword_176; }

		//"response"
		public Keyword getResponseKeyword_177() { return cResponseKeyword_177; }

		//"publish"
		public Keyword getPublishKeyword_178() { return cPublishKeyword_178; }

		//"olap"
		public Keyword getOlapKeyword_179() { return cOlapKeyword_179; }

		//"rule:link"
		public Keyword getRuleLinkKeyword_180() { return cRuleLinkKeyword_180; }

		//"rule:operation"
		public Keyword getRuleOperationKeyword_181() { return cRuleOperationKeyword_181; }

		//"field-serial"
		public Keyword getFieldSerialKeyword_182() { return cFieldSerialKeyword_182; }

		//"locations"
		public Keyword getLocationsKeyword_183() { return cLocationsKeyword_183; }

		//"location"
		public Keyword getLocationKeyword_184() { return cLocationKeyword_184; }

		//"step"
		public Keyword getStepKeyword_185() { return cStepKeyword_185; }

		//"require-partner-context"
		public Keyword getRequirePartnerContextKeyword_186() { return cRequirePartnerContextKeyword_186; }

		//"delegation"
		public Keyword getDelegationKeyword_187() { return cDelegationKeyword_187; }

		//"category"
		public Keyword getCategoryKeyword_188() { return cCategoryKeyword_188; }

		//"properties"
		public Keyword getPropertiesKeyword_189() { return cPropertiesKeyword_189; }

		//"customer"
		public Keyword getCustomerKeyword_190() { return cCustomerKeyword_190; }
	}

	public class MethodTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MethodTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cOnChatMessageReceivedKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cOnPopulatedKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cIsVisibleKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cOnTakeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cWhenKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cOnExportItemKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cOnResponseKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cOnSelectJobRoleCompleteKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cOnSaveKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cOnInitKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cOnRemovedKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cOnSetupCompleteKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cCalculateKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cOnAbortKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cIsEnabledKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cConstructorKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cOnSetupJobCompleteKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cExecuteKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cOnSignsCompleteKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cOnTermAddedKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cOnSolveKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cOnImportItemKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cOnFinishedKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cOnOpenedKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cOnSelectJobRoleKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cImportKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cOnRequestKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cOnSavedKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cOnTerminateKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cOnCancelKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cOnValidateKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cOnSynchronizedKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cOnSetupKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cOnUnassignKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cOnItemAddedKeyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cOnSignKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		private final Keyword cOnCreatedKeyword_36 = (Keyword)cAlternatives.eContents().get(36);
		private final Keyword cOnReceiveEventKeyword_37 = (Keyword)cAlternatives.eContents().get(37);
		private final Keyword cOnArriveKeyword_38 = (Keyword)cAlternatives.eContents().get(38);
		private final Keyword cOnCreateKeyword_39 = (Keyword)cAlternatives.eContents().get(39);
		private final Keyword cOnClosedKeyword_40 = (Keyword)cAlternatives.eContents().get(40);
		private final Keyword cOnSetContextKeyword_41 = (Keyword)cAlternatives.eContents().get(41);
		private final Keyword cOnExecuteKeyword_42 = (Keyword)cAlternatives.eContents().get(42);
		private final Keyword cOnAssignKeyword_43 = (Keyword)cAlternatives.eContents().get(43);
		private final Keyword cOnItemRemovedKeyword_44 = (Keyword)cAlternatives.eContents().get(44);
		private final Keyword cOnTimeoutKeyword_45 = (Keyword)cAlternatives.eContents().get(45);
		private final Keyword cOnTermModifiedKeyword_46 = (Keyword)cAlternatives.eContents().get(46);
		private final Keyword cOnBackKeyword_47 = (Keyword)cAlternatives.eContents().get(47);
		private final Keyword cOnBuildKeyword_48 = (Keyword)cAlternatives.eContents().get(48);
		private final Keyword cOnInitializeKeyword_49 = (Keyword)cAlternatives.eContents().get(49);
		private final Keyword cOnSetupJobKeyword_50 = (Keyword)cAlternatives.eContents().get(50);
		private final Keyword cOnTerminateKeyword_51 = (Keyword)cAlternatives.eContents().get(51);
		private final Keyword cOnSelectRoleKeyword_52 = (Keyword)cAlternatives.eContents().get(52);
		
		//MethodTypes:
		//	"onChatMessageReceived" | "onPopulated" | "isVisible" | "onTake" | "when" | "onExportItem" | "onResponse" |
		//	"onSelectJobRoleComplete" | "onSave" | "onInit" | "onRemoved" | "onSetupComplete" | "calculate" | "onAbort" |
		//	"isEnabled" | "constructor" | "onSetupJobComplete" | "execute" | "onSignsComplete" | "onTermAdded" | "onSolve" |
		//	"onImportItem" | "onFinished" | "onOpened" | "onSelectJobRole" | "import" | "onRequest" | "onSaved" | "onTerminate" |
		//	"onCancel" | "onValidate" | "onSynchronized" | "onSetup" | "onUnassign" | "onItemAdded" | "onSign" | "onCreated" |
		//	"onReceiveEvent" | "onArrive" | "onCreate" | "onClosed" | "onSetContext" | "onExecute" | "onAssign" | "onItemRemoved"
		//	| "onTimeout" | "onTermModified" | "onBack" | "onBuild" | "onInitialize" | "onSetupJob" | "onTerminate" |
		//	"onSelectRole";
		public ParserRule getRule() { return rule; }

		//"onChatMessageReceived" | "onPopulated" | "isVisible" | "onTake" | "when" | "onExportItem" | "onResponse" |
		//"onSelectJobRoleComplete" | "onSave" | "onInit" | "onRemoved" | "onSetupComplete" | "calculate" | "onAbort" |
		//"isEnabled" | "constructor" | "onSetupJobComplete" | "execute" | "onSignsComplete" | "onTermAdded" | "onSolve" |
		//"onImportItem" | "onFinished" | "onOpened" | "onSelectJobRole" | "import" | "onRequest" | "onSaved" | "onTerminate" |
		//"onCancel" | "onValidate" | "onSynchronized" | "onSetup" | "onUnassign" | "onItemAdded" | "onSign" | "onCreated" |
		//"onReceiveEvent" | "onArrive" | "onCreate" | "onClosed" | "onSetContext" | "onExecute" | "onAssign" | "onItemRemoved" |
		//"onTimeout" | "onTermModified" | "onBack" | "onBuild" | "onInitialize" | "onSetupJob" | "onTerminate" | "onSelectRole"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"onChatMessageReceived"
		public Keyword getOnChatMessageReceivedKeyword_0() { return cOnChatMessageReceivedKeyword_0; }

		//"onPopulated"
		public Keyword getOnPopulatedKeyword_1() { return cOnPopulatedKeyword_1; }

		//"isVisible"
		public Keyword getIsVisibleKeyword_2() { return cIsVisibleKeyword_2; }

		//"onTake"
		public Keyword getOnTakeKeyword_3() { return cOnTakeKeyword_3; }

		//"when"
		public Keyword getWhenKeyword_4() { return cWhenKeyword_4; }

		//"onExportItem"
		public Keyword getOnExportItemKeyword_5() { return cOnExportItemKeyword_5; }

		//"onResponse"
		public Keyword getOnResponseKeyword_6() { return cOnResponseKeyword_6; }

		//"onSelectJobRoleComplete"
		public Keyword getOnSelectJobRoleCompleteKeyword_7() { return cOnSelectJobRoleCompleteKeyword_7; }

		//"onSave"
		public Keyword getOnSaveKeyword_8() { return cOnSaveKeyword_8; }

		//"onInit"
		public Keyword getOnInitKeyword_9() { return cOnInitKeyword_9; }

		//"onRemoved"
		public Keyword getOnRemovedKeyword_10() { return cOnRemovedKeyword_10; }

		//"onSetupComplete"
		public Keyword getOnSetupCompleteKeyword_11() { return cOnSetupCompleteKeyword_11; }

		//"calculate"
		public Keyword getCalculateKeyword_12() { return cCalculateKeyword_12; }

		//"onAbort"
		public Keyword getOnAbortKeyword_13() { return cOnAbortKeyword_13; }

		//"isEnabled"
		public Keyword getIsEnabledKeyword_14() { return cIsEnabledKeyword_14; }

		//"constructor"
		public Keyword getConstructorKeyword_15() { return cConstructorKeyword_15; }

		//"onSetupJobComplete"
		public Keyword getOnSetupJobCompleteKeyword_16() { return cOnSetupJobCompleteKeyword_16; }

		//"execute"
		public Keyword getExecuteKeyword_17() { return cExecuteKeyword_17; }

		//"onSignsComplete"
		public Keyword getOnSignsCompleteKeyword_18() { return cOnSignsCompleteKeyword_18; }

		//"onTermAdded"
		public Keyword getOnTermAddedKeyword_19() { return cOnTermAddedKeyword_19; }

		//"onSolve"
		public Keyword getOnSolveKeyword_20() { return cOnSolveKeyword_20; }

		//"onImportItem"
		public Keyword getOnImportItemKeyword_21() { return cOnImportItemKeyword_21; }

		//"onFinished"
		public Keyword getOnFinishedKeyword_22() { return cOnFinishedKeyword_22; }

		//"onOpened"
		public Keyword getOnOpenedKeyword_23() { return cOnOpenedKeyword_23; }

		//"onSelectJobRole"
		public Keyword getOnSelectJobRoleKeyword_24() { return cOnSelectJobRoleKeyword_24; }

		//"import"
		public Keyword getImportKeyword_25() { return cImportKeyword_25; }

		//"onRequest"
		public Keyword getOnRequestKeyword_26() { return cOnRequestKeyword_26; }

		//"onSaved"
		public Keyword getOnSavedKeyword_27() { return cOnSavedKeyword_27; }

		//"onTerminate"
		public Keyword getOnTerminateKeyword_28() { return cOnTerminateKeyword_28; }

		//"onCancel"
		public Keyword getOnCancelKeyword_29() { return cOnCancelKeyword_29; }

		//"onValidate"
		public Keyword getOnValidateKeyword_30() { return cOnValidateKeyword_30; }

		//"onSynchronized"
		public Keyword getOnSynchronizedKeyword_31() { return cOnSynchronizedKeyword_31; }

		//"onSetup"
		public Keyword getOnSetupKeyword_32() { return cOnSetupKeyword_32; }

		//"onUnassign"
		public Keyword getOnUnassignKeyword_33() { return cOnUnassignKeyword_33; }

		//"onItemAdded"
		public Keyword getOnItemAddedKeyword_34() { return cOnItemAddedKeyword_34; }

		//"onSign"
		public Keyword getOnSignKeyword_35() { return cOnSignKeyword_35; }

		//"onCreated"
		public Keyword getOnCreatedKeyword_36() { return cOnCreatedKeyword_36; }

		//"onReceiveEvent"
		public Keyword getOnReceiveEventKeyword_37() { return cOnReceiveEventKeyword_37; }

		//"onArrive"
		public Keyword getOnArriveKeyword_38() { return cOnArriveKeyword_38; }

		//"onCreate"
		public Keyword getOnCreateKeyword_39() { return cOnCreateKeyword_39; }

		//"onClosed"
		public Keyword getOnClosedKeyword_40() { return cOnClosedKeyword_40; }

		//"onSetContext"
		public Keyword getOnSetContextKeyword_41() { return cOnSetContextKeyword_41; }

		//"onExecute"
		public Keyword getOnExecuteKeyword_42() { return cOnExecuteKeyword_42; }

		//"onAssign"
		public Keyword getOnAssignKeyword_43() { return cOnAssignKeyword_43; }

		//"onItemRemoved"
		public Keyword getOnItemRemovedKeyword_44() { return cOnItemRemovedKeyword_44; }

		//"onTimeout"
		public Keyword getOnTimeoutKeyword_45() { return cOnTimeoutKeyword_45; }

		//"onTermModified"
		public Keyword getOnTermModifiedKeyword_46() { return cOnTermModifiedKeyword_46; }

		//"onBack"
		public Keyword getOnBackKeyword_47() { return cOnBackKeyword_47; }

		//"onBuild"
		public Keyword getOnBuildKeyword_48() { return cOnBuildKeyword_48; }

		//"onInitialize"
		public Keyword getOnInitializeKeyword_49() { return cOnInitializeKeyword_49; }

		//"onSetupJob"
		public Keyword getOnSetupJobKeyword_50() { return cOnSetupJobKeyword_50; }

		//"onTerminate"
		public Keyword getOnTerminateKeyword_51() { return cOnTerminateKeyword_51; }

		//"onSelectRole"
		public Keyword getOnSelectRoleKeyword_52() { return cOnSelectRoleKeyword_52; }
	}

	public class AttributeTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cParentKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDatastoreKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cWhenKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cResolutionKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cCollaboratorKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cTabEnvironmentKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cShortcutViewKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cChildrenKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cEnableKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cContextKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cClassifierKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cLineBelowKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Keyword cDashboardKeyword_13 = (Keyword)cAlternatives.eContents().get(13);
		private final Keyword cHeightKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cIndexKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cVersionKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cScriptKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		private final Keyword cNodeKeyword_18 = (Keyword)cAlternatives.eContents().get(18);
		private final Keyword cShowTextKeyword_19 = (Keyword)cAlternatives.eContents().get(19);
		private final Keyword cFieldKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		private final Keyword cSubtitleKeyword_21 = (Keyword)cAlternatives.eContents().get(21);
		private final Keyword cTemplateKeyword_22 = (Keyword)cAlternatives.eContents().get(22);
		private final Keyword cRegexpKeyword_23 = (Keyword)cAlternatives.eContents().get(23);
		private final Keyword cRoleKeyword_24 = (Keyword)cAlternatives.eContents().get(24);
		private final Keyword cLatitudeKeyword_25 = (Keyword)cAlternatives.eContents().get(25);
		private final Keyword cIconKeyword_26 = (Keyword)cAlternatives.eContents().get(26);
		private final Keyword cRangeKeyword_27 = (Keyword)cAlternatives.eContents().get(27);
		private final Keyword cSecretKeyword_28 = (Keyword)cAlternatives.eContents().get(28);
		private final Keyword cLayerKeyword_29 = (Keyword)cAlternatives.eContents().get(29);
		private final Keyword cDefaultKeyword_30 = (Keyword)cAlternatives.eContents().get(30);
		private final Keyword cExporterKeyword_31 = (Keyword)cAlternatives.eContents().get(31);
		private final Keyword cMinKeyword_32 = (Keyword)cAlternatives.eContents().get(32);
		private final Keyword cGotoKeyword_33 = (Keyword)cAlternatives.eContents().get(33);
		private final Keyword cFeatureKeyword_34 = (Keyword)cAlternatives.eContents().get(34);
		private final Keyword cAttributeKeyword_35 = (Keyword)cAlternatives.eContents().get(35);
		private final Keyword cAfterKeyword_36 = (Keyword)cAlternatives.eContents().get(36);
		private final Keyword cKeyKeyword_37 = (Keyword)cAlternatives.eContents().get(37);
		private final Keyword cMaxKeyword_38 = (Keyword)cAlternatives.eContents().get(38);
		private final Keyword cUriKeyword_39 = (Keyword)cAlternatives.eContents().get(39);
		private final Keyword cPictureKeyword_40 = (Keyword)cAlternatives.eContents().get(40);
		private final Keyword cHelpKeyword_41 = (Keyword)cAlternatives.eContents().get(41);
		private final Keyword cComponentKeyword_42 = (Keyword)cAlternatives.eContents().get(42);
		private final Keyword cDepthKeyword_43 = (Keyword)cAlternatives.eContents().get(43);
		private final Keyword cMetricKeyword_44 = (Keyword)cAlternatives.eContents().get(44);
		private final Keyword cWidthKeyword_45 = (Keyword)cAlternatives.eContents().get(45);
		private final Keyword cMeasureUnitKeyword_46 = (Keyword)cAlternatives.eContents().get(46);
		private final Keyword cOperationKeyword_47 = (Keyword)cAlternatives.eContents().get(47);
		private final Keyword cIndicatorKeyword_48 = (Keyword)cAlternatives.eContents().get(48);
		private final Keyword cTabDashboardKeyword_49 = (Keyword)cAlternatives.eContents().get(49);
		private final Keyword cUseKeyword_50 = (Keyword)cAlternatives.eContents().get(50);
		private final Keyword cPrecisionKeyword_51 = (Keyword)cAlternatives.eContents().get(51);
		private final Keyword cSourceKeyword_52 = (Keyword)cAlternatives.eContents().get(52);
		private final Keyword cOperatorKeyword_53 = (Keyword)cAlternatives.eContents().get(53);
		private final Keyword cModeKeyword_54 = (Keyword)cAlternatives.eContents().get(54);
		private final Keyword cFlattenKeyword_55 = (Keyword)cAlternatives.eContents().get(55);
		private final Keyword cViewKeyword_56 = (Keyword)cAlternatives.eContents().get(56);
		private final Keyword cAddFlagKeyword_57 = (Keyword)cAlternatives.eContents().get(57);
		private final Keyword cLimitKeyword_58 = (Keyword)cAlternatives.eContents().get(58);
		private final Keyword cTagKeyword_59 = (Keyword)cAlternatives.eContents().get(59);
		private final Keyword cOntologyKeyword_60 = (Keyword)cAlternatives.eContents().get(60);
		private final Keyword cLongitudeKeyword_61 = (Keyword)cAlternatives.eContents().get(61);
		private final Keyword cUseAmountKeyword_62 = (Keyword)cAlternatives.eContents().get(62);
		private final Keyword cUnlockKeyword_63 = (Keyword)cAlternatives.eContents().get(63);
		private final Keyword cAuthorKeyword_64 = (Keyword)cAlternatives.eContents().get(64);
		private final Keyword cFormatKeyword_65 = (Keyword)cAlternatives.eContents().get(65);
		private final Keyword cCollectionKeyword_66 = (Keyword)cAlternatives.eContents().get(66);
		private final Keyword cHistoryKeyword_67 = (Keyword)cAlternatives.eContents().get(67);
		private final Keyword cFieldFileKeyword_68 = (Keyword)cAlternatives.eContents().get(68);
		private final Keyword cTakeKeyword_69 = (Keyword)cAlternatives.eContents().get(69);
		private final Keyword cTaskKeyword_70 = (Keyword)cAlternatives.eContents().get(70);
		private final Keyword cSortByKeyword_71 = (Keyword)cAlternatives.eContents().get(71);
		private final Keyword cNameKeyword_72 = (Keyword)cAlternatives.eContents().get(72);
		private final Keyword cPositionKeyword_73 = (Keyword)cAlternatives.eContents().get(73);
		private final Keyword cJobKeyword_74 = (Keyword)cAlternatives.eContents().get(74);
		private final Keyword cRequestKeyword_75 = (Keyword)cAlternatives.eContents().get(75);
		private final Keyword cCodeKeyword_76 = (Keyword)cAlternatives.eContents().get(76);
		private final Keyword cPurposeKeyword_77 = (Keyword)cAlternatives.eContents().get(77);
		private final Keyword cFooterKeyword_78 = (Keyword)cAlternatives.eContents().get(78);
		private final Keyword cTimezoneKeyword_79 = (Keyword)cAlternatives.eContents().get(79);
		private final Keyword cLineKeyword_80 = (Keyword)cAlternatives.eContents().get(80);
		private final Keyword cLinkKeyword_81 = (Keyword)cAlternatives.eContents().get(81);
		private final Keyword cForKeyword_82 = (Keyword)cAlternatives.eContents().get(82);
		private final Keyword cShowKeyword_83 = (Keyword)cAlternatives.eContents().get(83);
		private final Keyword cEditionKeyword_84 = (Keyword)cAlternatives.eContents().get(84);
		private final Keyword cDescriptionKeyword_85 = (Keyword)cAlternatives.eContents().get(85);
		private final Keyword cScaleKeyword_86 = (Keyword)cAlternatives.eContents().get(86);
		private final Keyword cTitleKeyword_87 = (Keyword)cAlternatives.eContents().get(87);
		private final Keyword cHighlightKeyword_88 = (Keyword)cAlternatives.eContents().get(88);
		private final Keyword cSetupUriKeyword_89 = (Keyword)cAlternatives.eContents().get(89);
		private final Keyword cShortcutKeyword_90 = (Keyword)cAlternatives.eContents().get(90);
		private final Keyword cProviderKeyword_91 = (Keyword)cAlternatives.eContents().get(91);
		private final Keyword cRootKeyword_92 = (Keyword)cAlternatives.eContents().get(92);
		private final Keyword cDesignKeyword_93 = (Keyword)cAlternatives.eContents().get(93);
		private final Keyword cDefinitionKeyword_94 = (Keyword)cAlternatives.eContents().get(94);
		private final Keyword cFactorKeyword_95 = (Keyword)cAlternatives.eContents().get(95);
		private final Keyword cValueKeyword_96 = (Keyword)cAlternatives.eContents().get(96);
		private final Keyword cLayoutExtendedKeyword_97 = (Keyword)cAlternatives.eContents().get(97);
		private final Keyword cUseYKeyword_98 = (Keyword)cAlternatives.eContents().get(98);
		private final Keyword cAmountKeyword_99 = (Keyword)cAlternatives.eContents().get(99);
		private final Keyword cUseXKeyword_100 = (Keyword)cAlternatives.eContents().get(100);
		private final Keyword cCenterKeyword_101 = (Keyword)cAlternatives.eContents().get(101);
		private final Keyword cZoomKeyword_102 = (Keyword)cAlternatives.eContents().get(102);
		private final Keyword cLabelKeyword_103 = (Keyword)cAlternatives.eContents().get(103);
		private final Keyword cWithViewKeyword_104 = (Keyword)cAlternatives.eContents().get(104);
		private final Keyword cMessageKeyword_105 = (Keyword)cAlternatives.eContents().get(105);
		private final Keyword cTargetKeyword_106 = (Keyword)cAlternatives.eContents().get(106);
		private final Keyword cLayoutKeyword_107 = (Keyword)cAlternatives.eContents().get(107);
		private final Keyword cInterpolationKeyword_108 = (Keyword)cAlternatives.eContents().get(108);
		private final Keyword cSiblingKeyword_109 = (Keyword)cAlternatives.eContents().get(109);
		private final Keyword cFormKeyword_110 = (Keyword)cAlternatives.eContents().get(110);
		private final Keyword cSortModeKeyword_111 = (Keyword)cAlternatives.eContents().get(111);
		private final Keyword cServiceKeyword_112 = (Keyword)cAlternatives.eContents().get(112);
		private final Keyword cResponseKeyword_113 = (Keyword)cAlternatives.eContents().get(113);
		private final Keyword cMarkerIconKeyword_114 = (Keyword)cAlternatives.eContents().get(114);
		private final Keyword cFormulaKeyword_115 = (Keyword)cAlternatives.eContents().get(115);
		private final Keyword cDeployUriKeyword_116 = (Keyword)cAlternatives.eContents().get(116);
		private final Keyword cUserKeyword_117 = (Keyword)cAlternatives.eContents().get(117);
		
		//AttributeTypes:
		//	"parent" | "datastore" | "type" | "when" | "resolution" | "collaborator" | "tab:environment" | "shortcut-view" |
		//	"children" | "enable" | "context" | "classifier" | "line-below" | "dashboard" | "height" | "index" | "version" |
		//	"script" | "node" | "show-text" | "field" | "subtitle" | "template" | "regexp" | "role" | "latitude" | "icon" |
		//	"range" | "secret" | "layer" | "default" | "exporter" | "min" | "goto" | "feature" | "attribute" | "after" | "key" |
		//	"max" | "uri" | "picture" | "help" | "component" | "depth" | "metric" | "width" | "measure-unit" | "operation" |
		//	"indicator" | "tab:dashboard" | "use" | "precision" | "source" | "operator" | "mode" | "flatten" | "view" | "add-flag"
		//	| "limit" | "tag" | "ontology" | "longitude" | "use:amount" | "unlock" | "author" | "format" | "collection" |
		//	"history" | "field:file" | "take" | "task" | "sort-by" | "name" | "position" | "job" | "request" | "code" | "purpose"
		//	| "footer" | "timezone" | "line" | "link" | "for" | "show" | "edition" | "description" | "scale" | "title" |
		//	"highlight" | "setup-uri" | "shortcut" | "provider" | "root" | "design" | "definition" | "factor" | "value" |
		//	"layout:extended" | "use:y" | "amount" | "use:x" | "center" | "zoom" | "label" | "with-view" | "message" | "target" |
		//	"layout" | "interpolation" | "sibling" | "form" | "sort-mode" | "service" | "response" | "marker-icon" | "formula" |
		//	"deploy-uri" | "user";
		public ParserRule getRule() { return rule; }

		//"parent" | "datastore" | "type" | "when" | "resolution" | "collaborator" | "tab:environment" | "shortcut-view" |
		//"children" | "enable" | "context" | "classifier" | "line-below" | "dashboard" | "height" | "index" | "version" |
		//"script" | "node" | "show-text" | "field" | "subtitle" | "template" | "regexp" | "role" | "latitude" | "icon" | "range"
		//| "secret" | "layer" | "default" | "exporter" | "min" | "goto" | "feature" | "attribute" | "after" | "key" | "max" |
		//"uri" | "picture" | "help" | "component" | "depth" | "metric" | "width" | "measure-unit" | "operation" | "indicator" |
		//"tab:dashboard" | "use" | "precision" | "source" | "operator" | "mode" | "flatten" | "view" | "add-flag" | "limit" |
		//"tag" | "ontology" | "longitude" | "use:amount" | "unlock" | "author" | "format" | "collection" | "history" |
		//"field:file" | "take" | "task" | "sort-by" | "name" | "position" | "job" | "request" | "code" | "purpose" | "footer" |
		//"timezone" | "line" | "link" | "for" | "show" | "edition" | "description" | "scale" | "title" | "highlight" |
		//"setup-uri" | "shortcut" | "provider" | "root" | "design" | "definition" | "factor" | "value" | "layout:extended" |
		//"use:y" | "amount" | "use:x" | "center" | "zoom" | "label" | "with-view" | "message" | "target" | "layout" |
		//"interpolation" | "sibling" | "form" | "sort-mode" | "service" | "response" | "marker-icon" | "formula" | "deploy-uri"
		//| "user"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"parent"
		public Keyword getParentKeyword_0() { return cParentKeyword_0; }

		//"datastore"
		public Keyword getDatastoreKeyword_1() { return cDatastoreKeyword_1; }

		//"type"
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }

		//"when"
		public Keyword getWhenKeyword_3() { return cWhenKeyword_3; }

		//"resolution"
		public Keyword getResolutionKeyword_4() { return cResolutionKeyword_4; }

		//"collaborator"
		public Keyword getCollaboratorKeyword_5() { return cCollaboratorKeyword_5; }

		//"tab:environment"
		public Keyword getTabEnvironmentKeyword_6() { return cTabEnvironmentKeyword_6; }

		//"shortcut-view"
		public Keyword getShortcutViewKeyword_7() { return cShortcutViewKeyword_7; }

		//"children"
		public Keyword getChildrenKeyword_8() { return cChildrenKeyword_8; }

		//"enable"
		public Keyword getEnableKeyword_9() { return cEnableKeyword_9; }

		//"context"
		public Keyword getContextKeyword_10() { return cContextKeyword_10; }

		//"classifier"
		public Keyword getClassifierKeyword_11() { return cClassifierKeyword_11; }

		//"line-below"
		public Keyword getLineBelowKeyword_12() { return cLineBelowKeyword_12; }

		//"dashboard"
		public Keyword getDashboardKeyword_13() { return cDashboardKeyword_13; }

		//"height"
		public Keyword getHeightKeyword_14() { return cHeightKeyword_14; }

		//"index"
		public Keyword getIndexKeyword_15() { return cIndexKeyword_15; }

		//"version"
		public Keyword getVersionKeyword_16() { return cVersionKeyword_16; }

		//"script"
		public Keyword getScriptKeyword_17() { return cScriptKeyword_17; }

		//"node"
		public Keyword getNodeKeyword_18() { return cNodeKeyword_18; }

		//"show-text"
		public Keyword getShowTextKeyword_19() { return cShowTextKeyword_19; }

		//"field"
		public Keyword getFieldKeyword_20() { return cFieldKeyword_20; }

		//"subtitle"
		public Keyword getSubtitleKeyword_21() { return cSubtitleKeyword_21; }

		//"template"
		public Keyword getTemplateKeyword_22() { return cTemplateKeyword_22; }

		//"regexp"
		public Keyword getRegexpKeyword_23() { return cRegexpKeyword_23; }

		//"role"
		public Keyword getRoleKeyword_24() { return cRoleKeyword_24; }

		//"latitude"
		public Keyword getLatitudeKeyword_25() { return cLatitudeKeyword_25; }

		//"icon"
		public Keyword getIconKeyword_26() { return cIconKeyword_26; }

		//"range"
		public Keyword getRangeKeyword_27() { return cRangeKeyword_27; }

		//"secret"
		public Keyword getSecretKeyword_28() { return cSecretKeyword_28; }

		//"layer"
		public Keyword getLayerKeyword_29() { return cLayerKeyword_29; }

		//"default"
		public Keyword getDefaultKeyword_30() { return cDefaultKeyword_30; }

		//"exporter"
		public Keyword getExporterKeyword_31() { return cExporterKeyword_31; }

		//"min"
		public Keyword getMinKeyword_32() { return cMinKeyword_32; }

		//"goto"
		public Keyword getGotoKeyword_33() { return cGotoKeyword_33; }

		//"feature"
		public Keyword getFeatureKeyword_34() { return cFeatureKeyword_34; }

		//"attribute"
		public Keyword getAttributeKeyword_35() { return cAttributeKeyword_35; }

		//"after"
		public Keyword getAfterKeyword_36() { return cAfterKeyword_36; }

		//"key"
		public Keyword getKeyKeyword_37() { return cKeyKeyword_37; }

		//"max"
		public Keyword getMaxKeyword_38() { return cMaxKeyword_38; }

		//"uri"
		public Keyword getUriKeyword_39() { return cUriKeyword_39; }

		//"picture"
		public Keyword getPictureKeyword_40() { return cPictureKeyword_40; }

		//"help"
		public Keyword getHelpKeyword_41() { return cHelpKeyword_41; }

		//"component"
		public Keyword getComponentKeyword_42() { return cComponentKeyword_42; }

		//"depth"
		public Keyword getDepthKeyword_43() { return cDepthKeyword_43; }

		//"metric"
		public Keyword getMetricKeyword_44() { return cMetricKeyword_44; }

		//"width"
		public Keyword getWidthKeyword_45() { return cWidthKeyword_45; }

		//"measure-unit"
		public Keyword getMeasureUnitKeyword_46() { return cMeasureUnitKeyword_46; }

		//"operation"
		public Keyword getOperationKeyword_47() { return cOperationKeyword_47; }

		//"indicator"
		public Keyword getIndicatorKeyword_48() { return cIndicatorKeyword_48; }

		//"tab:dashboard"
		public Keyword getTabDashboardKeyword_49() { return cTabDashboardKeyword_49; }

		//"use"
		public Keyword getUseKeyword_50() { return cUseKeyword_50; }

		//"precision"
		public Keyword getPrecisionKeyword_51() { return cPrecisionKeyword_51; }

		//"source"
		public Keyword getSourceKeyword_52() { return cSourceKeyword_52; }

		//"operator"
		public Keyword getOperatorKeyword_53() { return cOperatorKeyword_53; }

		//"mode"
		public Keyword getModeKeyword_54() { return cModeKeyword_54; }

		//"flatten"
		public Keyword getFlattenKeyword_55() { return cFlattenKeyword_55; }

		//"view"
		public Keyword getViewKeyword_56() { return cViewKeyword_56; }

		//"add-flag"
		public Keyword getAddFlagKeyword_57() { return cAddFlagKeyword_57; }

		//"limit"
		public Keyword getLimitKeyword_58() { return cLimitKeyword_58; }

		//"tag"
		public Keyword getTagKeyword_59() { return cTagKeyword_59; }

		//"ontology"
		public Keyword getOntologyKeyword_60() { return cOntologyKeyword_60; }

		//"longitude"
		public Keyword getLongitudeKeyword_61() { return cLongitudeKeyword_61; }

		//"use:amount"
		public Keyword getUseAmountKeyword_62() { return cUseAmountKeyword_62; }

		//"unlock"
		public Keyword getUnlockKeyword_63() { return cUnlockKeyword_63; }

		//"author"
		public Keyword getAuthorKeyword_64() { return cAuthorKeyword_64; }

		//"format"
		public Keyword getFormatKeyword_65() { return cFormatKeyword_65; }

		//"collection"
		public Keyword getCollectionKeyword_66() { return cCollectionKeyword_66; }

		//"history"
		public Keyword getHistoryKeyword_67() { return cHistoryKeyword_67; }

		//"field:file"
		public Keyword getFieldFileKeyword_68() { return cFieldFileKeyword_68; }

		//"take"
		public Keyword getTakeKeyword_69() { return cTakeKeyword_69; }

		//"task"
		public Keyword getTaskKeyword_70() { return cTaskKeyword_70; }

		//"sort-by"
		public Keyword getSortByKeyword_71() { return cSortByKeyword_71; }

		//"name"
		public Keyword getNameKeyword_72() { return cNameKeyword_72; }

		//"position"
		public Keyword getPositionKeyword_73() { return cPositionKeyword_73; }

		//"job"
		public Keyword getJobKeyword_74() { return cJobKeyword_74; }

		//"request"
		public Keyword getRequestKeyword_75() { return cRequestKeyword_75; }

		//"code"
		public Keyword getCodeKeyword_76() { return cCodeKeyword_76; }

		//"purpose"
		public Keyword getPurposeKeyword_77() { return cPurposeKeyword_77; }

		//"footer"
		public Keyword getFooterKeyword_78() { return cFooterKeyword_78; }

		//"timezone"
		public Keyword getTimezoneKeyword_79() { return cTimezoneKeyword_79; }

		//"line"
		public Keyword getLineKeyword_80() { return cLineKeyword_80; }

		//"link"
		public Keyword getLinkKeyword_81() { return cLinkKeyword_81; }

		//"for"
		public Keyword getForKeyword_82() { return cForKeyword_82; }

		//"show"
		public Keyword getShowKeyword_83() { return cShowKeyword_83; }

		//"edition"
		public Keyword getEditionKeyword_84() { return cEditionKeyword_84; }

		//"description"
		public Keyword getDescriptionKeyword_85() { return cDescriptionKeyword_85; }

		//"scale"
		public Keyword getScaleKeyword_86() { return cScaleKeyword_86; }

		//"title"
		public Keyword getTitleKeyword_87() { return cTitleKeyword_87; }

		//"highlight"
		public Keyword getHighlightKeyword_88() { return cHighlightKeyword_88; }

		//"setup-uri"
		public Keyword getSetupUriKeyword_89() { return cSetupUriKeyword_89; }

		//"shortcut"
		public Keyword getShortcutKeyword_90() { return cShortcutKeyword_90; }

		//"provider"
		public Keyword getProviderKeyword_91() { return cProviderKeyword_91; }

		//"root"
		public Keyword getRootKeyword_92() { return cRootKeyword_92; }

		//"design"
		public Keyword getDesignKeyword_93() { return cDesignKeyword_93; }

		//"definition"
		public Keyword getDefinitionKeyword_94() { return cDefinitionKeyword_94; }

		//"factor"
		public Keyword getFactorKeyword_95() { return cFactorKeyword_95; }

		//"value"
		public Keyword getValueKeyword_96() { return cValueKeyword_96; }

		//"layout:extended"
		public Keyword getLayoutExtendedKeyword_97() { return cLayoutExtendedKeyword_97; }

		//"use:y"
		public Keyword getUseYKeyword_98() { return cUseYKeyword_98; }

		//"amount"
		public Keyword getAmountKeyword_99() { return cAmountKeyword_99; }

		//"use:x"
		public Keyword getUseXKeyword_100() { return cUseXKeyword_100; }

		//"center"
		public Keyword getCenterKeyword_101() { return cCenterKeyword_101; }

		//"zoom"
		public Keyword getZoomKeyword_102() { return cZoomKeyword_102; }

		//"label"
		public Keyword getLabelKeyword_103() { return cLabelKeyword_103; }

		//"with-view"
		public Keyword getWithViewKeyword_104() { return cWithViewKeyword_104; }

		//"message"
		public Keyword getMessageKeyword_105() { return cMessageKeyword_105; }

		//"target"
		public Keyword getTargetKeyword_106() { return cTargetKeyword_106; }

		//"layout"
		public Keyword getLayoutKeyword_107() { return cLayoutKeyword_107; }

		//"interpolation"
		public Keyword getInterpolationKeyword_108() { return cInterpolationKeyword_108; }

		//"sibling"
		public Keyword getSiblingKeyword_109() { return cSiblingKeyword_109; }

		//"form"
		public Keyword getFormKeyword_110() { return cFormKeyword_110; }

		//"sort-mode"
		public Keyword getSortModeKeyword_111() { return cSortModeKeyword_111; }

		//"service"
		public Keyword getServiceKeyword_112() { return cServiceKeyword_112; }

		//"response"
		public Keyword getResponseKeyword_113() { return cResponseKeyword_113; }

		//"marker-icon"
		public Keyword getMarkerIconKeyword_114() { return cMarkerIconKeyword_114; }

		//"formula"
		public Keyword getFormulaKeyword_115() { return cFormulaKeyword_115; }

		//"deploy-uri"
		public Keyword getDeployUriKeyword_116() { return cDeployUriKeyword_116; }

		//"user"
		public Keyword getUserKeyword_117() { return cUserKeyword_117; }
	}

	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Definition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCodeCodeParserRuleCall_0_0 = (RuleCall)cCodeAssignment_0.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		private final Assignment cExtensibleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cExtensibleExtensibleKeyword_2_0 = (Keyword)cExtensibleAssignment_2.eContents().get(0);
		private final Keyword cDefinitionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameValidIDParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cIsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDefinitionTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDefinitionTypeDefinitionTypeParserRuleCall_6_0 = (RuleCall)cDefinitionTypeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cExtendsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSuperTypeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cSuperTypeDefinitionCrossReference_7_1_0 = (CrossReference)cSuperTypeAssignment_7_1.eContents().get(0);
		private final RuleCall cSuperTypeDefinitionQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cSuperTypeDefinitionCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cReplaceKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cReplaceSuperTypeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cReplaceSuperTypeDefinitionCrossReference_8_1_0 = (CrossReference)cReplaceSuperTypeAssignment_8_1.eContents().get(0);
		private final RuleCall cReplaceSuperTypeDefinitionQualifiedNameParserRuleCall_8_1_0_1 = (RuleCall)cReplaceSuperTypeDefinitionCrossReference_8_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cFeaturesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cFeaturesFeatureParserRuleCall_10_0 = (RuleCall)cFeaturesAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Definition:
		//	code=Code? abstract?="abstract"? extensible?="extensible"? "definition" name=ValidID "is"
		//	definitionType=DefinitionType ("extends" superType=[Definition|QualifiedName])? ("replace"
		//	replaceSuperType=[Definition|QualifiedName])? "{" features+=Feature* "}";
		public ParserRule getRule() { return rule; }

		//code=Code? abstract?="abstract"? extensible?="extensible"? "definition" name=ValidID "is" definitionType=DefinitionType
		//("extends" superType=[Definition|QualifiedName])? ("replace" replaceSuperType=[Definition|QualifiedName])? "{"
		//features+=Feature* "}"
		public Group getGroup() { return cGroup; }

		//code=Code?
		public Assignment getCodeAssignment_0() { return cCodeAssignment_0; }

		//Code
		public RuleCall getCodeCodeParserRuleCall_0_0() { return cCodeCodeParserRuleCall_0_0; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }

		//extensible?="extensible"?
		public Assignment getExtensibleAssignment_2() { return cExtensibleAssignment_2; }

		//"extensible"
		public Keyword getExtensibleExtensibleKeyword_2_0() { return cExtensibleExtensibleKeyword_2_0; }

		//"definition"
		public Keyword getDefinitionKeyword_3() { return cDefinitionKeyword_3; }

		//name=ValidID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_4_0() { return cNameValidIDParserRuleCall_4_0; }

		//"is"
		public Keyword getIsKeyword_5() { return cIsKeyword_5; }

		//definitionType=DefinitionType
		public Assignment getDefinitionTypeAssignment_6() { return cDefinitionTypeAssignment_6; }

		//DefinitionType
		public RuleCall getDefinitionTypeDefinitionTypeParserRuleCall_6_0() { return cDefinitionTypeDefinitionTypeParserRuleCall_6_0; }

		//("extends" superType=[Definition|QualifiedName])?
		public Group getGroup_7() { return cGroup_7; }

		//"extends"
		public Keyword getExtendsKeyword_7_0() { return cExtendsKeyword_7_0; }

		//superType=[Definition|QualifiedName]
		public Assignment getSuperTypeAssignment_7_1() { return cSuperTypeAssignment_7_1; }

		//[Definition|QualifiedName]
		public CrossReference getSuperTypeDefinitionCrossReference_7_1_0() { return cSuperTypeDefinitionCrossReference_7_1_0; }

		//QualifiedName
		public RuleCall getSuperTypeDefinitionQualifiedNameParserRuleCall_7_1_0_1() { return cSuperTypeDefinitionQualifiedNameParserRuleCall_7_1_0_1; }

		//("replace" replaceSuperType=[Definition|QualifiedName])?
		public Group getGroup_8() { return cGroup_8; }

		//"replace"
		public Keyword getReplaceKeyword_8_0() { return cReplaceKeyword_8_0; }

		//replaceSuperType=[Definition|QualifiedName]
		public Assignment getReplaceSuperTypeAssignment_8_1() { return cReplaceSuperTypeAssignment_8_1; }

		//[Definition|QualifiedName]
		public CrossReference getReplaceSuperTypeDefinitionCrossReference_8_1_0() { return cReplaceSuperTypeDefinitionCrossReference_8_1_0; }

		//QualifiedName
		public RuleCall getReplaceSuperTypeDefinitionQualifiedNameParserRuleCall_8_1_0_1() { return cReplaceSuperTypeDefinitionQualifiedNameParserRuleCall_8_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//features+=Feature*
		public Assignment getFeaturesAssignment_10() { return cFeaturesAssignment_10; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_10_0() { return cFeaturesFeatureParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Feature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPropertyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSchemaParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMethodParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFunctionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cVariableParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Feature:
		//	Attribute | Definition | Property | Schema | Method | Function | Variable;
		public ParserRule getRule() { return rule; }

		//Attribute | Definition | Property | Schema | Method | Function | Variable
		public Alternatives getAlternatives() { return cAlternatives; }

		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }

		//Definition
		public RuleCall getDefinitionParserRuleCall_1() { return cDefinitionParserRuleCall_1; }

		//Property
		public RuleCall getPropertyParserRuleCall_2() { return cPropertyParserRuleCall_2; }

		//Schema
		public RuleCall getSchemaParserRuleCall_3() { return cSchemaParserRuleCall_3; }

		//Method
		public RuleCall getMethodParserRuleCall_4() { return cMethodParserRuleCall_4; }

		//Function
		public RuleCall getFunctionParserRuleCall_5() { return cFunctionParserRuleCall_5; }

		//Variable
		public RuleCall getVariableParserRuleCall_6() { return cVariableParserRuleCall_6; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdAttributeTypesParserRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAttributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Attribute:
		//	id=AttributeTypes "=" value=AttributeValue;
		public ParserRule getRule() { return rule; }

		//id=AttributeTypes "=" value=AttributeValue
		public Group getGroup() { return cGroup; }

		//id=AttributeTypes
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//AttributeTypes
		public RuleCall getIdAttributeTypesParserRuleCall_0_0() { return cIdAttributeTypesParserRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=AttributeValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//AttributeValue
		public RuleCall getValueAttributeValueParserRuleCall_2_0() { return cValueAttributeValueParserRuleCall_2_0; }
	}

	public class AttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIntLiteralParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFloatLiteralParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDoubleLiteralParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEnumLiteralParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cXTReferenceParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cLocalizedTextParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cResourceParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cExpressionLiteralParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cTimeLiteralParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//AttributeValue:
		//	StringLiteral | IntLiteral | FloatLiteral | DoubleLiteral | EnumLiteral | XTReference | LocalizedText | Resource |
		//	ExpressionLiteral | TimeLiteral;
		public ParserRule getRule() { return rule; }

		//StringLiteral | IntLiteral | FloatLiteral | DoubleLiteral | EnumLiteral | XTReference | LocalizedText | Resource |
		//ExpressionLiteral | TimeLiteral
		public Alternatives getAlternatives() { return cAlternatives; }

		//StringLiteral
		public RuleCall getStringLiteralParserRuleCall_0() { return cStringLiteralParserRuleCall_0; }

		//IntLiteral
		public RuleCall getIntLiteralParserRuleCall_1() { return cIntLiteralParserRuleCall_1; }

		//FloatLiteral
		public RuleCall getFloatLiteralParserRuleCall_2() { return cFloatLiteralParserRuleCall_2; }

		//DoubleLiteral
		public RuleCall getDoubleLiteralParserRuleCall_3() { return cDoubleLiteralParserRuleCall_3; }

		//EnumLiteral
		public RuleCall getEnumLiteralParserRuleCall_4() { return cEnumLiteralParserRuleCall_4; }

		//XTReference
		public RuleCall getXTReferenceParserRuleCall_5() { return cXTReferenceParserRuleCall_5; }

		//LocalizedText
		public RuleCall getLocalizedTextParserRuleCall_6() { return cLocalizedTextParserRuleCall_6; }

		//Resource
		public RuleCall getResourceParserRuleCall_7() { return cResourceParserRuleCall_7; }

		//ExpressionLiteral
		public RuleCall getExpressionLiteralParserRuleCall_8() { return cExpressionLiteralParserRuleCall_8; }

		//TimeLiteral
		public RuleCall getTimeLiteralParserRuleCall_9() { return cTimeLiteralParserRuleCall_9; }
	}

	public class LocalizedTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocalizedText");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cValueAlternatives_1_0 = (Alternatives)cValueAssignment_1.eContents().get(0);
		private final RuleCall cValueIDTerminalRuleCall_1_0_0 = (RuleCall)cValueAlternatives_1_0.eContents().get(0);
		private final RuleCall cValueENUMTerminalRuleCall_1_0_1 = (RuleCall)cValueAlternatives_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//LocalizedText:
		//	"text" value=(ID | ENUM) ";";
		public ParserRule getRule() { return rule; }

		//"text" value=(ID | ENUM) ";"
		public Group getGroup() { return cGroup; }

		//"text"
		public Keyword getTextKeyword_0() { return cTextKeyword_0; }

		//value=(ID | ENUM)
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//ID | ENUM
		public Alternatives getValueAlternatives_1_0() { return cValueAlternatives_1_0; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_1_0_0() { return cValueIDTerminalRuleCall_1_0_0; }

		//ENUM
		public RuleCall getValueENUMTerminalRuleCall_1_0_1() { return cValueENUMTerminalRuleCall_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Resource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cTypeAlternatives_0_0 = (Alternatives)cTypeAssignment_0.eContents().get(0);
		private final Keyword cTypeDataKeyword_0_0_0 = (Keyword)cTypeAlternatives_0_0.eContents().get(0);
		private final Keyword cTypeHelpKeyword_0_0_1 = (Keyword)cTypeAlternatives_0_0.eContents().get(1);
		private final Keyword cTypeImageKeyword_0_0_2 = (Keyword)cTypeAlternatives_0_0.eContents().get(2);
		private final Keyword cTypeTemplateKeyword_0_0_3 = (Keyword)cTypeAlternatives_0_0.eContents().get(3);
		private final Keyword cTypeLayoutKeyword_0_0_4 = (Keyword)cTypeAlternatives_0_0.eContents().get(4);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cValueAlternatives_1_0 = (Alternatives)cValueAssignment_1.eContents().get(0);
		private final RuleCall cValueIDTerminalRuleCall_1_0_0 = (RuleCall)cValueAlternatives_1_0.eContents().get(0);
		private final RuleCall cValueENUMTerminalRuleCall_1_0_1 = (RuleCall)cValueAlternatives_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Resource:
		//	type=("data" | "help" | "image" | "template" | "layout") value=(ID | ENUM) ";";
		public ParserRule getRule() { return rule; }

		//type=("data" | "help" | "image" | "template" | "layout") value=(ID | ENUM) ";"
		public Group getGroup() { return cGroup; }

		//type=("data" | "help" | "image" | "template" | "layout")
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"data" | "help" | "image" | "template" | "layout"
		public Alternatives getTypeAlternatives_0_0() { return cTypeAlternatives_0_0; }

		//"data"
		public Keyword getTypeDataKeyword_0_0_0() { return cTypeDataKeyword_0_0_0; }

		//"help"
		public Keyword getTypeHelpKeyword_0_0_1() { return cTypeHelpKeyword_0_0_1; }

		//"image"
		public Keyword getTypeImageKeyword_0_0_2() { return cTypeImageKeyword_0_0_2; }

		//"template"
		public Keyword getTypeTemplateKeyword_0_0_3() { return cTypeTemplateKeyword_0_0_3; }

		//"layout"
		public Keyword getTypeLayoutKeyword_0_0_4() { return cTypeLayoutKeyword_0_0_4; }

		//value=(ID | ENUM)
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//ID | ENUM
		public Alternatives getValueAlternatives_1_0() { return cValueAlternatives_1_0; }

		//ID
		public RuleCall getValueIDTerminalRuleCall_1_0_0() { return cValueIDTerminalRuleCall_1_0_0; }

		//ENUM
		public RuleCall getValueENUMTerminalRuleCall_1_0_1() { return cValueENUMTerminalRuleCall_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class StringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//StringLiteral:
		//	value=STRING ";";
		public ParserRule getRule() { return rule; }

		//value=STRING ";"
		public Group getGroup() { return cGroup; }

		//value=STRING
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0_0() { return cValueSTRINGTerminalRuleCall_0_0; }

		//";"
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}

	public class TimeLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TimeLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueTIMETerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//TimeLiteral:
		//	value=TIME ";";
		public ParserRule getRule() { return rule; }

		//value=TIME ";"
		public Group getGroup() { return cGroup; }

		//value=TIME
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//TIME
		public RuleCall getValueTIMETerminalRuleCall_0_0() { return cValueTIMETerminalRuleCall_0_0; }

		//";"
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}

	public class IntLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNegativeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNegativeHyphenMinusKeyword_0_0 = (Keyword)cNegativeAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//IntLiteral:
		//	negative?="-"? value=INT ";";
		public ParserRule getRule() { return rule; }

		//negative?="-"? value=INT ";"
		public Group getGroup() { return cGroup; }

		//negative?="-"?
		public Assignment getNegativeAssignment_0() { return cNegativeAssignment_0; }

		//"-"
		public Keyword getNegativeHyphenMinusKeyword_0_0() { return cNegativeHyphenMinusKeyword_0_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class FloatLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FloatLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNegativeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNegativeHyphenMinusKeyword_0_0 = (Keyword)cNegativeAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueFLOATTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FloatLiteral:
		//	negative?="-"? value=FLOAT ";";
		public ParserRule getRule() { return rule; }

		//negative?="-"? value=FLOAT ";"
		public Group getGroup() { return cGroup; }

		//negative?="-"?
		public Assignment getNegativeAssignment_0() { return cNegativeAssignment_0; }

		//"-"
		public Keyword getNegativeHyphenMinusKeyword_0_0() { return cNegativeHyphenMinusKeyword_0_0; }

		//value=FLOAT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//FLOAT
		public RuleCall getValueFLOATTerminalRuleCall_1_0() { return cValueFLOATTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class DoubleLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DoubleLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNegativeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNegativeHyphenMinusKeyword_0_0 = (Keyword)cNegativeAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueDOUBLETerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DoubleLiteral:
		//	negative?="-"? value=DOUBLE ";";
		public ParserRule getRule() { return rule; }

		//negative?="-"? value=DOUBLE ";"
		public Group getGroup() { return cGroup; }

		//negative?="-"?
		public Assignment getNegativeAssignment_0() { return cNegativeAssignment_0; }

		//"-"
		public Keyword getNegativeHyphenMinusKeyword_0_0() { return cNegativeHyphenMinusKeyword_0_0; }

		//value=DOUBLE
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//DOUBLE
		public RuleCall getValueDOUBLETerminalRuleCall_1_0() { return cValueDOUBLETerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class ExpressionLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueXBlockExpressionParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ExpressionLiteral:
		//	value=XBlockExpression;
		public ParserRule getRule() { return rule; }

		//value=XBlockExpression
		public Assignment getValueAssignment() { return cValueAssignment; }

		//XBlockExpression
		public RuleCall getValueXBlockExpressionParserRuleCall_0() { return cValueXBlockExpressionParserRuleCall_0; }
	}

	public class ReferenciableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Referenciable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Referenciable:
		//	Property | Definition;
		public ParserRule getRule() { return rule; }

		//Property | Definition
		public Alternatives getAlternatives() { return cAlternatives; }

		//Property
		public RuleCall getPropertyParserRuleCall_0() { return cPropertyParserRuleCall_0; }

		//Definition
		public RuleCall getDefinitionParserRuleCall_1() { return cDefinitionParserRuleCall_1; }
	}

	public class XTReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XTReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cValueReferenciableCrossReference_1_0 = (CrossReference)cValueAssignment_1.eContents().get(0);
		private final RuleCall cValueReferenciableQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cValueReferenciableCrossReference_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//XTReference:
		//	"ref" value=[Referenciable|QualifiedName] ";";
		public ParserRule getRule() { return rule; }

		//"ref" value=[Referenciable|QualifiedName] ";"
		public Group getGroup() { return cGroup; }

		//"ref"
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//value=[Referenciable|QualifiedName]
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//[Referenciable|QualifiedName]
		public CrossReference getValueReferenciableCrossReference_1_0() { return cValueReferenciableCrossReference_1_0; }

		//QualifiedName
		public RuleCall getValueReferenciableQualifiedNameParserRuleCall_1_0_1() { return cValueReferenciableQualifiedNameParserRuleCall_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class EnumLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueENUMTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//EnumLiteral:
		//	value=ENUM ";";
		public ParserRule getRule() { return rule; }

		//value=ENUM ";"
		public Group getGroup() { return cGroup; }

		//value=ENUM
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//ENUM
		public RuleCall getValueENUMTerminalRuleCall_0_0() { return cValueENUMTerminalRuleCall_0_0; }

		//";"
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCodeCodeParserRuleCall_0_0 = (RuleCall)cCodeAssignment_0.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdPropertyTypesParserRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cFeaturesPropertyFeatureParserRuleCall_3_0_1_0 = (RuleCall)cFeaturesAssignment_3_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		//Property:
		//	code=Code? id=PropertyTypes name=ValidID? ("{" features+=PropertyFeature* "}" | ";");
		public ParserRule getRule() { return rule; }

		//code=Code? id=PropertyTypes name=ValidID? ("{" features+=PropertyFeature* "}" | ";")
		public Group getGroup() { return cGroup; }

		//code=Code?
		public Assignment getCodeAssignment_0() { return cCodeAssignment_0; }

		//Code
		public RuleCall getCodeCodeParserRuleCall_0_0() { return cCodeCodeParserRuleCall_0_0; }

		//id=PropertyTypes
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }

		//PropertyTypes
		public RuleCall getIdPropertyTypesParserRuleCall_1_0() { return cIdPropertyTypesParserRuleCall_1_0; }

		//name=ValidID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//"{" features+=PropertyFeature* "}" | ";"
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//"{" features+=PropertyFeature* "}"
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0_0() { return cLeftCurlyBracketKeyword_3_0_0; }

		//features+=PropertyFeature*
		public Assignment getFeaturesAssignment_3_0_1() { return cFeaturesAssignment_3_0_1; }

		//PropertyFeature
		public RuleCall getFeaturesPropertyFeatureParserRuleCall_3_0_1_0() { return cFeaturesPropertyFeatureParserRuleCall_3_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_0_2() { return cRightCurlyBracketKeyword_3_0_2; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
	}

	public class PropertyFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropertyFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMethodParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//PropertyFeature:
		//	Attribute | Property | Method;
		public ParserRule getRule() { return rule; }

		//Attribute | Property | Method
		public Alternatives getAlternatives() { return cAlternatives; }

		//Attribute
		public RuleCall getAttributeParserRuleCall_0() { return cAttributeParserRuleCall_0; }

		//Property
		public RuleCall getPropertyParserRuleCall_1() { return cPropertyParserRuleCall_1; }

		//Method
		public RuleCall getMethodParserRuleCall_2() { return cMethodParserRuleCall_2; }
	}

	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdMethodTypesParserRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cParamsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cParamsFullJvmFormalParameterParserRuleCall_2_0_0 = (RuleCall)cParamsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cParamsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cParamsFullJvmFormalParameterParserRuleCall_2_1_1_0 = (RuleCall)cParamsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBodyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBodyXBlockExpressionParserRuleCall_4_0 = (RuleCall)cBodyAssignment_4.eContents().get(0);
		
		//Method:
		//	id=MethodTypes "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")" body=XBlockExpression;
		public ParserRule getRule() { return rule; }

		//id=MethodTypes "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")" body=XBlockExpression
		public Group getGroup() { return cGroup; }

		//id=MethodTypes
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//MethodTypes
		public RuleCall getIdMethodTypesParserRuleCall_0_0() { return cIdMethodTypesParserRuleCall_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//(params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)?
		public Group getGroup_2() { return cGroup_2; }

		//params+=FullJvmFormalParameter
		public Assignment getParamsAssignment_2_0() { return cParamsAssignment_2_0; }

		//FullJvmFormalParameter
		public RuleCall getParamsFullJvmFormalParameterParserRuleCall_2_0_0() { return cParamsFullJvmFormalParameterParserRuleCall_2_0_0; }

		//("," params+=FullJvmFormalParameter)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//params+=FullJvmFormalParameter
		public Assignment getParamsAssignment_2_1_1() { return cParamsAssignment_2_1_1; }

		//FullJvmFormalParameter
		public RuleCall getParamsFullJvmFormalParameterParserRuleCall_2_1_1_0() { return cParamsFullJvmFormalParameterParserRuleCall_2_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//body=XBlockExpression
		public Assignment getBodyAssignment_4() { return cBodyAssignment_4; }

		//XBlockExpression
		public RuleCall getBodyXBlockExpressionParserRuleCall_4_0() { return cBodyXBlockExpressionParserRuleCall_4_0; }
	}

	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Variable:
		//	"var" name=ValidID "as" type=JvmTypeReference ";";
		public ParserRule getRule() { return rule; }

		//"var" name=ValidID "as" type=JvmTypeReference ";"
		public Group getGroup() { return cGroup; }

		//"var"
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"as"
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_3_0() { return cTypeJvmTypeReferenceParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class DefineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Define");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Define:
		//	"define" name=ValidID "=" value=STRING ";";
		public ParserRule getRule() { return rule; }

		//"define" name=ValidID "=" value=STRING ";"
		public Group getGroup() { return cGroup; }

		//"define"
		public Keyword getDefineKeyword_0() { return cDefineKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class SchemaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Schema");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIdSchemaKeyword_0_0 = (Keyword)cIdAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPropertiesSchemaFeatureParserRuleCall_2_0 = (RuleCall)cPropertiesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Schema:
		//	id="schema" "{" properties+=SchemaFeature* "}";
		public ParserRule getRule() { return rule; }

		//id="schema" "{" properties+=SchemaFeature* "}"
		public Group getGroup() { return cGroup; }

		//id="schema"
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//"schema"
		public Keyword getIdSchemaKeyword_0_0() { return cIdSchemaKeyword_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//properties+=SchemaFeature*
		public Assignment getPropertiesAssignment_2() { return cPropertiesAssignment_2; }

		//SchemaFeature
		public RuleCall getPropertiesSchemaFeatureParserRuleCall_2_0() { return cPropertiesSchemaFeatureParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class SchemaFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SchemaFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSchemaSectionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSchemaPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SchemaFeature:
		//	SchemaSection | SchemaProperty;
		public ParserRule getRule() { return rule; }

		//SchemaSection | SchemaProperty
		public Alternatives getAlternatives() { return cAlternatives; }

		//SchemaSection
		public RuleCall getSchemaSectionParserRuleCall_0() { return cSchemaSectionParserRuleCall_0; }

		//SchemaProperty
		public RuleCall getSchemaPropertyParserRuleCall_1() { return cSchemaPropertyParserRuleCall_1; }
	}

	public class SchemaSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SchemaSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesSchemaFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SchemaSection:
		//	many?="many"? id=ID "{" features+=SchemaFeature* "}";
		public ParserRule getRule() { return rule; }

		//many?="many"? id=ID "{" features+=SchemaFeature* "}"
		public Group getGroup() { return cGroup; }

		//many?="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//features+=SchemaFeature*
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }

		//SchemaFeature
		public RuleCall getFeaturesSchemaFeatureParserRuleCall_3_0() { return cFeaturesSchemaFeatureParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SchemaPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SchemaProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSourceSchemaPropertyOfValueParserRuleCall_2_0 = (RuleCall)cSourceAssignment_2.eContents().get(0);
		
		//SchemaProperty:
		//	many?="many"? id=ID source=SchemaPropertyOfValue;
		public ParserRule getRule() { return rule; }

		//many?="many"? id=ID source=SchemaPropertyOfValue
		public Group getGroup() { return cGroup; }

		//many?="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//id=ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_1_0() { return cIdIDTerminalRuleCall_1_0; }

		//source=SchemaPropertyOfValue
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }

		//SchemaPropertyOfValue
		public RuleCall getSourceSchemaPropertyOfValueParserRuleCall_2_0() { return cSourceSchemaPropertyOfValueParserRuleCall_2_0; }
	}

	public class SchemaPropertyOfValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SchemaPropertyOfValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cBodyAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cBodyXBlockExpressionParserRuleCall_1_0_0 = (RuleCall)cBodyAssignment_1_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		
		//SchemaPropertyOfValue:
		//	type=JvmParameterizedTypeReference (body=XBlockExpression | ";");
		public ParserRule getRule() { return rule; }

		//type=JvmParameterizedTypeReference (body=XBlockExpression | ";")
		public Group getGroup() { return cGroup; }

		//type=JvmParameterizedTypeReference
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//JvmParameterizedTypeReference
		public RuleCall getTypeJvmParameterizedTypeReferenceParserRuleCall_0_0() { return cTypeJvmParameterizedTypeReferenceParserRuleCall_0_0; }

		//body=XBlockExpression | ";"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//body=XBlockExpression
		public Assignment getBodyAssignment_1_0() { return cBodyAssignment_1_0; }

		//XBlockExpression
		public RuleCall getBodyXBlockExpressionParserRuleCall_1_0_0() { return cBodyXBlockExpressionParserRuleCall_1_0_0; }

		//";"
		public Keyword getSemicolonKeyword_1_1() { return cSemicolonKeyword_1_1; }
	}

	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Function");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameValidIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamsFullJvmFormalParameterParserRuleCall_3_0_0 = (RuleCall)cParamsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParamsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParamsFullJvmFormalParameterParserRuleCall_3_1_1_0 = (RuleCall)cParamsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Assignment cBodyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBodyXBlockExpressionParserRuleCall_6_0 = (RuleCall)cBodyAssignment_6.eContents().get(0);
		
		//Function:
		//	"function" name=ValidID "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")" (":"
		//	type=JvmTypeReference)? body=XBlockExpression;
		public ParserRule getRule() { return rule; }

		//"function" name=ValidID "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")" (":"
		//type=JvmTypeReference)? body=XBlockExpression
		public Group getGroup() { return cGroup; }

		//"function"
		public Keyword getFunctionKeyword_0() { return cFunctionKeyword_0; }

		//name=ValidID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_1_0() { return cNameValidIDParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)?
		public Group getGroup_3() { return cGroup_3; }

		//params+=FullJvmFormalParameter
		public Assignment getParamsAssignment_3_0() { return cParamsAssignment_3_0; }

		//FullJvmFormalParameter
		public RuleCall getParamsFullJvmFormalParameterParserRuleCall_3_0_0() { return cParamsFullJvmFormalParameterParserRuleCall_3_0_0; }

		//("," params+=FullJvmFormalParameter)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//params+=FullJvmFormalParameter
		public Assignment getParamsAssignment_3_1_1() { return cParamsAssignment_3_1_1; }

		//FullJvmFormalParameter
		public RuleCall getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0() { return cParamsFullJvmFormalParameterParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//(":" type=JvmTypeReference)?
		public Group getGroup_5() { return cGroup_5; }

		//":"
		public Keyword getColonKeyword_5_0() { return cColonKeyword_5_0; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_5_1_0() { return cTypeJvmTypeReferenceParserRuleCall_5_1_0; }

		//body=XBlockExpression
		public Assignment getBodyAssignment_6() { return cBodyAssignment_6; }

		//XBlockExpression
		public RuleCall getBodyXBlockExpressionParserRuleCall_6_0() { return cBodyXBlockExpressionParserRuleCall_6_0; }
	}

	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName ("." "*")?;
		public ParserRule getRule() { return rule; }

		//QualifiedName ("." "*")?
		public Group getGroup() { return cGroup; }

		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }

		//("." "*")?
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//"*"
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}
	
	
	private final DomainModelElements pDomainModel;
	private final DistributionModelElements pDistributionModel;
	private final ProjectModelElements pProjectModel;
	private final ManifestFeatureElements pManifestFeature;
	private final DefinitionModelElements pDefinitionModel;
	private final ImportElements pImport;
	private final CodeElements pCode;
	private final PackageDeclarationElements pPackageDeclaration;
	private final DefinitionTypeElements pDefinitionType;
	private final PropertyTypesElements pPropertyTypes;
	private final MethodTypesElements pMethodTypes;
	private final AttributeTypesElements pAttributeTypes;
	private final DefinitionElements pDefinition;
	private final FeatureElements pFeature;
	private final AttributeElements pAttribute;
	private final AttributeValueElements pAttributeValue;
	private final LocalizedTextElements pLocalizedText;
	private final ResourceElements pResource;
	private final StringLiteralElements pStringLiteral;
	private final TimeLiteralElements pTimeLiteral;
	private final IntLiteralElements pIntLiteral;
	private final FloatLiteralElements pFloatLiteral;
	private final DoubleLiteralElements pDoubleLiteral;
	private final ExpressionLiteralElements pExpressionLiteral;
	private final ReferenciableElements pReferenciable;
	private final XTReferenceElements pXTReference;
	private final EnumLiteralElements pEnumLiteral;
	private final TerminalRule tENUM;
	private final TerminalRule tFLOAT;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tTIME;
	private final PropertyElements pProperty;
	private final PropertyFeatureElements pPropertyFeature;
	private final MethodElements pMethod;
	private final VariableElements pVariable;
	private final DefineElements pDefine;
	private final SchemaElements pSchema;
	private final SchemaFeatureElements pSchemaFeature;
	private final SchemaSectionElements pSchemaSection;
	private final SchemaPropertyElements pSchemaProperty;
	private final SchemaPropertyOfValueElements pSchemaPropertyOfValue;
	private final FunctionElements pFunction;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	
	private final Grammar grammar;

	private final XbaseGrammarAccess gaXbase;

	@Inject
	public MonetModelingLanguageGrammarAccess(GrammarProvider grammarProvider,
		XbaseGrammarAccess gaXbase) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaXbase = gaXbase;
		this.pDomainModel = new DomainModelElements();
		this.pDistributionModel = new DistributionModelElements();
		this.pProjectModel = new ProjectModelElements();
		this.pManifestFeature = new ManifestFeatureElements();
		this.pDefinitionModel = new DefinitionModelElements();
		this.pImport = new ImportElements();
		this.pCode = new CodeElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pDefinitionType = new DefinitionTypeElements();
		this.pPropertyTypes = new PropertyTypesElements();
		this.pMethodTypes = new MethodTypesElements();
		this.pAttributeTypes = new AttributeTypesElements();
		this.pDefinition = new DefinitionElements();
		this.pFeature = new FeatureElements();
		this.pAttribute = new AttributeElements();
		this.pAttributeValue = new AttributeValueElements();
		this.pLocalizedText = new LocalizedTextElements();
		this.pResource = new ResourceElements();
		this.pStringLiteral = new StringLiteralElements();
		this.pTimeLiteral = new TimeLiteralElements();
		this.pIntLiteral = new IntLiteralElements();
		this.pFloatLiteral = new FloatLiteralElements();
		this.pDoubleLiteral = new DoubleLiteralElements();
		this.pExpressionLiteral = new ExpressionLiteralElements();
		this.pReferenciable = new ReferenciableElements();
		this.pXTReference = new XTReferenceElements();
		this.pEnumLiteral = new EnumLiteralElements();
		this.tENUM = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ENUM");
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "FLOAT");
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DOUBLE");
		this.tTIME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "TIME");
		this.pProperty = new PropertyElements();
		this.pPropertyFeature = new PropertyFeatureElements();
		this.pMethod = new MethodElements();
		this.pVariable = new VariableElements();
		this.pDefine = new DefineElements();
		this.pSchema = new SchemaElements();
		this.pSchemaFeature = new SchemaFeatureElements();
		this.pSchemaSection = new SchemaSectionElements();
		this.pSchemaProperty = new SchemaPropertyElements();
		this.pSchemaPropertyOfValue = new SchemaPropertyOfValueElements();
		this.pFunction = new FunctionElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.monet.editor.dsl.MonetModelingLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public XbaseGrammarAccess getXbaseGrammarAccess() {
		return gaXbase;
	}

	
	//DomainModel:
	//	DefinitionModel | ProjectModel | DistributionModel;
	public DomainModelElements getDomainModelAccess() {
		return pDomainModel;
	}
	
	public ParserRule getDomainModelRule() {
		return getDomainModelAccess().getRule();
	}

	//DistributionModel:
	//	"distribution" name=ValidID "extends" superType=[ProjectModel|QualifiedName] "{" features+=ManifestFeature* "}";
	public DistributionModelElements getDistributionModelAccess() {
		return pDistributionModel;
	}
	
	public ParserRule getDistributionModelRule() {
		return getDistributionModelAccess().getRule();
	}

	//ProjectModel:
	//	"project" name=ValidID "{" features+=ManifestFeature* "}";
	public ProjectModelElements getProjectModelAccess() {
		return pProjectModel;
	}
	
	public ParserRule getProjectModelRule() {
		return getProjectModelAccess().getRule();
	}

	//ManifestFeature:
	//	Attribute | Property | Define | Method;
	public ManifestFeatureElements getManifestFeatureAccess() {
		return pManifestFeature;
	}
	
	public ParserRule getManifestFeatureRule() {
		return getManifestFeatureAccess().getRule();
	}

	//DefinitionModel:
	//	elements+=Import* elements+=PackageDeclaration;
	public DefinitionModelElements getDefinitionModelAccess() {
		return pDefinitionModel;
	}
	
	public ParserRule getDefinitionModelRule() {
		return getDefinitionModelAccess().getRule();
	}

	//Import:
	//	"import" importedNamespace=QualifiedNameWithWildcard;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//Code:
	//	"[" value=STRING "]";
	public CodeElements getCodeAccess() {
		return pCode;
	}
	
	public ParserRule getCodeRule() {
		return getCodeAccess().getRule();
	}

	//PackageDeclaration:
	//	"package" name=QualifiedName "{" definition=Definition "}";
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}

	//DefinitionType:
	//	"activity" | "catalog" | "collection" | "container" | "dashboard" | "datastore-builder" | "datastore" | "desktop" |
	//	"document" | "exporter" | "form" | "glossary" | "importer" | "index" | "job" | "measure-unit" | "role" | "sensor" |
	//	"service" | "tasktray" | "thesaurus";
	public DefinitionTypeElements getDefinitionTypeAccess() {
		return pDefinitionType;
	}
	
	public ParserRule getDefinitionTypeRule() {
		return getDefinitionTypeAccess().getRule();
	}

	//PropertyTypes:
	//	"parent" | "field-picture" | "select" | "allow-locations" | "aborted" | "allow-add" | "is-component" | "taxonomy" |
	//	"signatures" | "is-static" | "tab:taskboard" | "terms" | "edit-text" | "default-location" | "is-default" | "tab:trash"
	//	| "cube" | "require-confirmation" | "tasks" | "is-environment" | "edit-memo" | "field-summation" | "mapping" |
	//	"links:out" | "edit-video" | "capture-date" | "field-boolean" | "rule:view" | "index" | "self-generated" |
	//	"back-enable" | "confirmation" | "secondary" | "explicit" | "allow-edit" | "exit" | "is-initial" | "enable-history" |
	//	"folder" | "size" | "stop" | "meta" | "is-extended" | "analyze" | "field-date" | "allow-less-precision" | "orders" |
	//	"enroll" | "allow-search" | "items" | "primary" | "is-univocal" | "implicit" | "internal" | "wait" | "send-response" |
	//	"attachments" | "signature" | "is-singleton" | "pattern" | "field-number" | "edit-position" | "range" | "field-uri" |
	//	"assign-role" | "is-private" | "edit-check" | "feature" | "unpublish" | "add-operation" | "term" | "attribute" |
	//	"place" | "enable-services" | "capture-position" | "federation" | "contain" | "edit-select" | "is-embedded" |
	//	"display" | "field-node" | "is-email" | "edit-date" | "filter" | "field-link" | "from-roles" | "toolbar" | "tab:roles"
	//	| "is-conditional" | "is-final" | "partner" | "metric" | "disable" | "report" | "is-abstract" | "to" | "tab:news" |
	//	"is-self-generated" | "operation" | "is-breadcrumbs-disabled" | "send-request" | "indicator" | "field-text" |
	//	"is-required" | "door" | "rule:node" | "notes" | "use" | "edit-picture" | "source" | "listen" | "space" | "reference"
	//	| "view" | "is-category" | "is-multiple" | "is-extensible" | "is-hand-written" | "is-prototypable" | "edit-boolean" |
	//	"check-position" | "allow-history" | "add" | "field-composite" | "contest" | "level" | "is-readonly" |
	//	"shared-prototypes" | "send-job" | "external" | "is-hidden" | "field-memo" | "enable-feeders" | "disable-edition" |
	//	"is-visible-when-embedded" | "edit-number" | "secondary:location" | "expiration" | "rule:form" | "is-external-fed" |
	//	"links:in" | "boundary" | "allow-key" | "is-read-only" | "request" | "is-negative" | "is-georeferenced" | "from-index"
	//	| "rejected" | "line" | "show" | "for" | "edition" | "scale" | "allow-other" | "timeout" | "owned-prototypes" |
	//	"is-oust" | "shortcut" | "provider" | "sorting" | "field:node" | "revisions" | "dimension" | "summary" |
	//	"tab:tasktray" | "center" | "is-background" | "length" | "is-profile-photo" | "field-check" | "disable-users" |
	//	"is-collapsible" | "field-file" | "field-select" | "serial" | "is-manual" | "response" | "publish" | "olap" |
	//	"rule:link" | "rule:operation" | "field-serial" | "locations" | "location" | "step" | "require-partner-context" |
	//	"delegation" | "category" | "properties" | "customer";
	public PropertyTypesElements getPropertyTypesAccess() {
		return pPropertyTypes;
	}
	
	public ParserRule getPropertyTypesRule() {
		return getPropertyTypesAccess().getRule();
	}

	//MethodTypes:
	//	"onChatMessageReceived" | "onPopulated" | "isVisible" | "onTake" | "when" | "onExportItem" | "onResponse" |
	//	"onSelectJobRoleComplete" | "onSave" | "onInit" | "onRemoved" | "onSetupComplete" | "calculate" | "onAbort" |
	//	"isEnabled" | "constructor" | "onSetupJobComplete" | "execute" | "onSignsComplete" | "onTermAdded" | "onSolve" |
	//	"onImportItem" | "onFinished" | "onOpened" | "onSelectJobRole" | "import" | "onRequest" | "onSaved" | "onTerminate" |
	//	"onCancel" | "onValidate" | "onSynchronized" | "onSetup" | "onUnassign" | "onItemAdded" | "onSign" | "onCreated" |
	//	"onReceiveEvent" | "onArrive" | "onCreate" | "onClosed" | "onSetContext" | "onExecute" | "onAssign" | "onItemRemoved"
	//	| "onTimeout" | "onTermModified" | "onBack" | "onBuild" | "onInitialize" | "onSetupJob" | "onTerminate" |
	//	"onSelectRole";
	public MethodTypesElements getMethodTypesAccess() {
		return pMethodTypes;
	}
	
	public ParserRule getMethodTypesRule() {
		return getMethodTypesAccess().getRule();
	}

	//AttributeTypes:
	//	"parent" | "datastore" | "type" | "when" | "resolution" | "collaborator" | "tab:environment" | "shortcut-view" |
	//	"children" | "enable" | "context" | "classifier" | "line-below" | "dashboard" | "height" | "index" | "version" |
	//	"script" | "node" | "show-text" | "field" | "subtitle" | "template" | "regexp" | "role" | "latitude" | "icon" |
	//	"range" | "secret" | "layer" | "default" | "exporter" | "min" | "goto" | "feature" | "attribute" | "after" | "key" |
	//	"max" | "uri" | "picture" | "help" | "component" | "depth" | "metric" | "width" | "measure-unit" | "operation" |
	//	"indicator" | "tab:dashboard" | "use" | "precision" | "source" | "operator" | "mode" | "flatten" | "view" | "add-flag"
	//	| "limit" | "tag" | "ontology" | "longitude" | "use:amount" | "unlock" | "author" | "format" | "collection" |
	//	"history" | "field:file" | "take" | "task" | "sort-by" | "name" | "position" | "job" | "request" | "code" | "purpose"
	//	| "footer" | "timezone" | "line" | "link" | "for" | "show" | "edition" | "description" | "scale" | "title" |
	//	"highlight" | "setup-uri" | "shortcut" | "provider" | "root" | "design" | "definition" | "factor" | "value" |
	//	"layout:extended" | "use:y" | "amount" | "use:x" | "center" | "zoom" | "label" | "with-view" | "message" | "target" |
	//	"layout" | "interpolation" | "sibling" | "form" | "sort-mode" | "service" | "response" | "marker-icon" | "formula" |
	//	"deploy-uri" | "user";
	public AttributeTypesElements getAttributeTypesAccess() {
		return pAttributeTypes;
	}
	
	public ParserRule getAttributeTypesRule() {
		return getAttributeTypesAccess().getRule();
	}

	//Definition:
	//	code=Code? abstract?="abstract"? extensible?="extensible"? "definition" name=ValidID "is"
	//	definitionType=DefinitionType ("extends" superType=[Definition|QualifiedName])? ("replace"
	//	replaceSuperType=[Definition|QualifiedName])? "{" features+=Feature* "}";
	public DefinitionElements getDefinitionAccess() {
		return pDefinition;
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}

	//Feature:
	//	Attribute | Definition | Property | Schema | Method | Function | Variable;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}

	//Attribute:
	//	id=AttributeTypes "=" value=AttributeValue;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//AttributeValue:
	//	StringLiteral | IntLiteral | FloatLiteral | DoubleLiteral | EnumLiteral | XTReference | LocalizedText | Resource |
	//	ExpressionLiteral | TimeLiteral;
	public AttributeValueElements getAttributeValueAccess() {
		return pAttributeValue;
	}
	
	public ParserRule getAttributeValueRule() {
		return getAttributeValueAccess().getRule();
	}

	//LocalizedText:
	//	"text" value=(ID | ENUM) ";";
	public LocalizedTextElements getLocalizedTextAccess() {
		return pLocalizedText;
	}
	
	public ParserRule getLocalizedTextRule() {
		return getLocalizedTextAccess().getRule();
	}

	//Resource:
	//	type=("data" | "help" | "image" | "template" | "layout") value=(ID | ENUM) ";";
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}

	//StringLiteral:
	//	value=STRING ";";
	public StringLiteralElements getStringLiteralAccess() {
		return pStringLiteral;
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//TimeLiteral:
	//	value=TIME ";";
	public TimeLiteralElements getTimeLiteralAccess() {
		return pTimeLiteral;
	}
	
	public ParserRule getTimeLiteralRule() {
		return getTimeLiteralAccess().getRule();
	}

	//IntLiteral:
	//	negative?="-"? value=INT ";";
	public IntLiteralElements getIntLiteralAccess() {
		return pIntLiteral;
	}
	
	public ParserRule getIntLiteralRule() {
		return getIntLiteralAccess().getRule();
	}

	//FloatLiteral:
	//	negative?="-"? value=FLOAT ";";
	public FloatLiteralElements getFloatLiteralAccess() {
		return pFloatLiteral;
	}
	
	public ParserRule getFloatLiteralRule() {
		return getFloatLiteralAccess().getRule();
	}

	//DoubleLiteral:
	//	negative?="-"? value=DOUBLE ";";
	public DoubleLiteralElements getDoubleLiteralAccess() {
		return pDoubleLiteral;
	}
	
	public ParserRule getDoubleLiteralRule() {
		return getDoubleLiteralAccess().getRule();
	}

	//ExpressionLiteral:
	//	value=XBlockExpression;
	public ExpressionLiteralElements getExpressionLiteralAccess() {
		return pExpressionLiteral;
	}
	
	public ParserRule getExpressionLiteralRule() {
		return getExpressionLiteralAccess().getRule();
	}

	//Referenciable:
	//	Property | Definition;
	public ReferenciableElements getReferenciableAccess() {
		return pReferenciable;
	}
	
	public ParserRule getReferenciableRule() {
		return getReferenciableAccess().getRule();
	}

	//XTReference:
	//	"ref" value=[Referenciable|QualifiedName] ";";
	public XTReferenceElements getXTReferenceAccess() {
		return pXTReference;
	}
	
	public ParserRule getXTReferenceRule() {
		return getXTReferenceAccess().getRule();
	}

	//EnumLiteral:
	//	value=ENUM ";";
	public EnumLiteralElements getEnumLiteralAccess() {
		return pEnumLiteral;
	}
	
	public ParserRule getEnumLiteralRule() {
		return getEnumLiteralAccess().getRule();
	}

	//terminal ENUM:
	//	("A".."Z" | "_") ("0".."9" | "A".."Z" | "_")*;
	public TerminalRule getENUMRule() {
		return tENUM;
	} 

	//terminal FLOAT returns ecore::EFloat:
	//	INT "." INT "F";
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	} 

	//terminal DOUBLE returns ecore::EDouble:
	//	INT "." INT;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	} 

	//terminal TIME:
	//	(("0".."9"+ ":")? ("0".."1" "0".."9" | "2" "0".."3") ":")? "0".."5" "0".."9" ":" "0".."5" "0".."9" ("," "0".."9"
	//	"0".."9" "0".."9")?;
	public TerminalRule getTIMERule() {
		return tTIME;
	} 

	//Property:
	//	code=Code? id=PropertyTypes name=ValidID? ("{" features+=PropertyFeature* "}" | ";");
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//PropertyFeature:
	//	Attribute | Property | Method;
	public PropertyFeatureElements getPropertyFeatureAccess() {
		return pPropertyFeature;
	}
	
	public ParserRule getPropertyFeatureRule() {
		return getPropertyFeatureAccess().getRule();
	}

	//Method:
	//	id=MethodTypes "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")" body=XBlockExpression;
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}

	//Variable:
	//	"var" name=ValidID "as" type=JvmTypeReference ";";
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	//Define:
	//	"define" name=ValidID "=" value=STRING ";";
	public DefineElements getDefineAccess() {
		return pDefine;
	}
	
	public ParserRule getDefineRule() {
		return getDefineAccess().getRule();
	}

	//Schema:
	//	id="schema" "{" properties+=SchemaFeature* "}";
	public SchemaElements getSchemaAccess() {
		return pSchema;
	}
	
	public ParserRule getSchemaRule() {
		return getSchemaAccess().getRule();
	}

	//SchemaFeature:
	//	SchemaSection | SchemaProperty;
	public SchemaFeatureElements getSchemaFeatureAccess() {
		return pSchemaFeature;
	}
	
	public ParserRule getSchemaFeatureRule() {
		return getSchemaFeatureAccess().getRule();
	}

	//SchemaSection:
	//	many?="many"? id=ID "{" features+=SchemaFeature* "}";
	public SchemaSectionElements getSchemaSectionAccess() {
		return pSchemaSection;
	}
	
	public ParserRule getSchemaSectionRule() {
		return getSchemaSectionAccess().getRule();
	}

	//SchemaProperty:
	//	many?="many"? id=ID source=SchemaPropertyOfValue;
	public SchemaPropertyElements getSchemaPropertyAccess() {
		return pSchemaProperty;
	}
	
	public ParserRule getSchemaPropertyRule() {
		return getSchemaPropertyAccess().getRule();
	}

	//SchemaPropertyOfValue:
	//	type=JvmParameterizedTypeReference (body=XBlockExpression | ";");
	public SchemaPropertyOfValueElements getSchemaPropertyOfValueAccess() {
		return pSchemaPropertyOfValue;
	}
	
	public ParserRule getSchemaPropertyOfValueRule() {
		return getSchemaPropertyOfValueAccess().getRule();
	}

	//Function:
	//	"function" name=ValidID "(" (params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")" (":"
	//	type=JvmTypeReference)? body=XBlockExpression;
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}

	//QualifiedNameWithWildcard:
	//	QualifiedName ("." "*")?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}

	//XExpression:
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaXbase.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//	{XAssignment} feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign value=XAssignment | XOrExpression
	//	(=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMultiAssign])
	//	rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaXbase.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaXbase.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//	"+=" | "-=" | "*=" | "/=" | "%=" | "<" "<" "=" | ">" ">"? ">=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaXbase.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaXbase.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaXbase.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaXbase.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaXbase.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaXbase.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//	"==" | "!=" | "===" | "!==";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaXbase.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaXbase.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//	">=" | "<" "=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaXbase.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaXbase.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//	"->" | "..<" | ">" ".." | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<" | "=>") | "<>" | "?:";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaXbase.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaXbase.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaXbase.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaXbase.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaXbase.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation returns XExpression:
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XUnaryOperation | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaXbase.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaXbase.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//	XPostfixOperation (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaXbase.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XPostfixOperation returns XExpression:
	//	XMemberFeatureCall => ({XPostfixOperation.operand=current} feature=[types::JvmIdentifiableElement|OpPostfix])?;
	public XbaseGrammarAccess.XPostfixOperationElements getXPostfixOperationAccess() {
		return gaXbase.getXPostfixOperationAccess();
	}
	
	public ParserRule getXPostfixOperationRule() {
		return getXPostfixOperationAccess().getRule();
	}

	//OpPostfix:
	//	"++" | "--";
	public XbaseGrammarAccess.OpPostfixElements getOpPostfixAccess() {
		return gaXbase.getOpPostfixAccess();
	}
	
	public ParserRule getOpPostfixRule() {
		return getOpPostfixAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} ("." | explicitStatic?="::")
	//	feature=[types::JvmIdentifiableElement|FeatureCallID] OpSingleAssign) value=XAssignment | =>
	//	({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." | explicitStatic?="::")) ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (memberCallArguments+=XShortClosure |
	//	memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)? ")")? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaXbase.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XSynchronizedExpression | XFeatureCall | XLiteral |
	//	XIfExpression | XForLoopExpression | XBasicForLoopExpression | XWhileExpression | XDoWhileExpression |
	//	XThrowExpression | XReturnExpression | XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaXbase.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//	XCollectionLiteral | XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaXbase.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XCollectionLiteral:
	//	XSetLiteral | XListLiteral;
	public XbaseGrammarAccess.XCollectionLiteralElements getXCollectionLiteralAccess() {
		return gaXbase.getXCollectionLiteralAccess();
	}
	
	public ParserRule getXCollectionLiteralRule() {
		return getXCollectionLiteralAccess().getRule();
	}

	//XSetLiteral:
	//	{XSetLiteral} "#" "{" (elements+=XExpression ("," elements+=XExpression)*)? "}";
	public XbaseGrammarAccess.XSetLiteralElements getXSetLiteralAccess() {
		return gaXbase.getXSetLiteralAccess();
	}
	
	public ParserRule getXSetLiteralRule() {
		return getXSetLiteralAccess().getRule();
	}

	//XListLiteral:
	//	{XListLiteral} "#" "[" (elements+=XExpression ("," elements+=XExpression)*)? "]";
	public XbaseGrammarAccess.XListLiteralElements getXListLiteralAccess() {
		return gaXbase.getXListLiteralAccess();
	}
	
	public ParserRule getXListLiteralRule() {
		return getXListLiteralAccess().getRule();
	}

	//XClosure returns XExpression:
	//	=> ({XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaXbase.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//	{XBlockExpression} (expressions+=XExpressionOrVarDeclaration ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaXbase.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaXbase.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaXbase.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaXbase.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//	{XSwitchExpression} "switch" (=> ("(" declaredParam=JvmFormalParameter ":") switch=XExpression ")" | =>
	//	(declaredParam=JvmFormalParameter ":")? switch=XExpression) "{" cases+=XCasePart* ("default" ":" default=XExpression)?
	//	"}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaXbase.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//	{XCasePart} typeGuard=JvmTypeReference? ("case" case=XExpression)? (":" then=XExpression | fallThrough?=",");
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaXbase.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//	=> ({XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":") forExpression=XExpression ")"
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaXbase.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XBasicForLoopExpression returns XExpression:
	//	{XBasicForLoopExpression} "for" "(" (initExpressions+=XExpressionOrVarDeclaration (","
	//	initExpressions+=XExpressionOrVarDeclaration)*)? ";" expression=XExpression? ";" (updateExpressions+=XExpression (","
	//	updateExpressions+=XExpression)*)? ")" eachExpression=XExpression;
	public XbaseGrammarAccess.XBasicForLoopExpressionElements getXBasicForLoopExpressionAccess() {
		return gaXbase.getXBasicForLoopExpressionAccess();
	}
	
	public ParserRule getXBasicForLoopExpressionRule() {
		return getXBasicForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaXbase.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaXbase.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//	{XBlockExpression} "{" (expressions+=XExpressionOrVarDeclaration ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaXbase.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionOrVarDeclaration returns XExpression:
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionOrVarDeclarationElements getXExpressionOrVarDeclarationAccess() {
		return gaXbase.getXExpressionOrVarDeclarationAccess();
	}
	
	public ParserRule getXExpressionOrVarDeclarationRule() {
		return getXExpressionOrVarDeclarationAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaXbase.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaXbase.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaXbase.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//	{XFeatureCall} ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//	feature=[types::JvmIdentifiableElement|IdOrSuper] (=> explicitOperationCall?="(" (featureCallArguments+=XShortClosure
	//	| featureCallArguments+=XExpression ("," featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaXbase.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//FeatureCallID:
	//	ValidID | "extends" | "static" | "import" | "extension";
	public XbaseGrammarAccess.FeatureCallIDElements getFeatureCallIDAccess() {
		return gaXbase.getFeatureCallIDAccess();
	}
	
	public ParserRule getFeatureCallIDRule() {
		return getFeatureCallIDAccess().getRule();
	}

	//IdOrSuper:
	//	FeatureCallID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaXbase.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? (=>
	//	explicitConstructorCall?="(" (arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")?
	//	arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaXbase.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaXbase.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaXbase.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaXbase.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral returns XExpression:
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaXbase.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] arrayDimensions+=ArrayBrackets* ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaXbase.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaXbase.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//	{XReturnExpression} "return" -> expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaXbase.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaXbase.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XSynchronizedExpression returns XExpression:
	//	=> ({XSynchronizedExpression} "synchronized" "(") param=XExpression ")" expression=XExpression;
	public XbaseGrammarAccess.XSynchronizedExpressionElements getXSynchronizedExpressionAccess() {
		return gaXbase.getXSynchronizedExpressionAccess();
	}
	
	public ParserRule getXSynchronizedExpressionRule() {
		return getXSynchronizedExpressionAccess().getRule();
	}

	//XCatchClause:
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaXbase.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaXbase.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaXbase.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	/// **
	// * Dummy rule, for "better" downwards compatibility, since GrammarAccess generates non-static inner classes, 
	// * which makes downstream grammars break on classloading, when a rule is removed.
	// * / StaticQualifier:
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaXbase.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaXbase.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaXbase.getINTRule();
	} 

	//terminal DECIMAL:
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaXbase.getDECIMALRule();
	} 

	//JvmTypeReference:
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} ArrayBrackets)* |
	//	XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaXbase.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//ArrayBrackets:
	//	"[" "]";
	public XtypeGrammarAccess.ArrayBracketsElements getArrayBracketsAccess() {
		return gaXbase.getArrayBracketsAccess();
	}
	
	public ParserRule getArrayBracketsRule() {
		return getArrayBracketsAccess().getRule();
	}

	//XFunctionTypeRef:
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaXbase.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)* ">"
	//	(=> ({JvmInnerTypeReference.outer=current} ".") type=[JvmType|ValidID] ("<" arguments+=JvmArgumentTypeReference (","
	//	arguments+=JvmArgumentTypeReference)* ">")?)*)?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaXbase.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaXbase.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* |
	//	constraints+=JvmLowerBound constraints+=JvmLowerBoundAnded*)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaXbase.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaXbase.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaXbase.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaXbase.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmLowerBoundAnded returns JvmLowerBound:
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundAndedElements getJvmLowerBoundAndedAccess() {
		return gaXbase.getJvmLowerBoundAndedAccess();
	}
	
	public ParserRule getJvmLowerBoundAndedRule() {
		return getJvmLowerBoundAndedAccess().getRule();
	}

	//JvmTypeParameter:
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded*)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaXbase.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//ValidID:
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaXbase.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//XImportSection:
	//	importDeclarations+=XImportDeclaration+;
	public XtypeGrammarAccess.XImportSectionElements getXImportSectionAccess() {
		return gaXbase.getXImportSectionAccess();
	}
	
	public ParserRule getXImportSectionRule() {
		return getXImportSectionAccess().getRule();
	}

	//XImportDeclaration:
	//	"import" (static?="static" extension?="extension"? importedType=[JvmDeclaredType|QualifiedNameInStaticImport]
	//	(wildcard?="*" | memberName=ValidID) | importedType=[JvmDeclaredType|QualifiedName] |
	//	importedNamespace=QualifiedNameWithWildcard) ";"?;
	public XtypeGrammarAccess.XImportDeclarationElements getXImportDeclarationAccess() {
		return gaXbase.getXImportDeclarationAccess();
	}
	
	public ParserRule getXImportDeclarationRule() {
		return getXImportDeclarationAccess().getRule();
	}

	//QualifiedNameInStaticImport:
	//	(ValidID ".")+;
	public XtypeGrammarAccess.QualifiedNameInStaticImportElements getQualifiedNameInStaticImportAccess() {
		return gaXbase.getQualifiedNameInStaticImportAccess();
	}
	
	public ParserRule getQualifiedNameInStaticImportRule() {
		return getQualifiedNameInStaticImportAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaXbase.getIDRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') * / | !("\\" | "\""))* "\""? | "\'" ("\\" .
	//	/ * ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') * / | !("\\" | "\'"))* "\'"?;
	public TerminalRule getSTRINGRule() {
		return gaXbase.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaXbase.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaXbase.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaXbase.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaXbase.getANY_OTHERRule();
	} 
}
