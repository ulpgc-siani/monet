/*
* generated by Xtext
*/
grammar InternalMonetModelingLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.monet.editor.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.monet.editor.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.monet.editor.dsl.services.MonetModelingLanguageGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private MonetModelingLanguageGrammarAccess grammarAccess;
 	
    public InternalMonetModelingLanguageParser(TokenStream input, MonetModelingLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DomainModel";	
   	}
   	
   	@Override
   	protected MonetModelingLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDomainModel
entryRuleDomainModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDomainModelRule()); }
	 iv_ruleDomainModel=ruleDomainModel 
	 { $current=$iv_ruleDomainModel.current; } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDomainModelAccess().getDefinitionModelParserRuleCall_0()); 
    }
    this_DefinitionModel_0=ruleDefinitionModel
    { 
        $current = $this_DefinitionModel_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDomainModelAccess().getProjectModelParserRuleCall_1()); 
    }
    this_ProjectModel_1=ruleProjectModel
    { 
        $current = $this_ProjectModel_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDomainModelAccess().getDistributionModelParserRuleCall_2()); 
    }
    this_DistributionModel_2=ruleDistributionModel
    { 
        $current = $this_DistributionModel_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDistributionModel
entryRuleDistributionModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDistributionModelRule()); }
	 iv_ruleDistributionModel=ruleDistributionModel 
	 { $current=$iv_ruleDistributionModel.current; } 
	 EOF 
;

// Rule DistributionModel
ruleDistributionModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='distribution' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDistributionModelAccess().getDistributionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDistributionModelAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDistributionModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDistributionModelAccess().getExtendsKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDistributionModelRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDistributionModelAccess().getSuperTypeProjectModelCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDistributionModelAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDistributionModelAccess().getFeaturesManifestFeatureParserRuleCall_5_0()); 
	    }
		lv_features_5_0=ruleManifestFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDistributionModelRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"ManifestFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDistributionModelAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleProjectModel
entryRuleProjectModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProjectModelRule()); }
	 iv_ruleProjectModel=ruleProjectModel 
	 { $current=$iv_ruleProjectModel.current; } 
	 EOF 
;

// Rule ProjectModel
ruleProjectModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='project' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProjectModelAccess().getProjectKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectModelAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProjectModelAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectModelAccess().getFeaturesManifestFeatureParserRuleCall_3_0()); 
	    }
		lv_features_3_0=ruleManifestFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectModelRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"ManifestFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProjectModelAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleManifestFeature
entryRuleManifestFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getManifestFeatureRule()); }
	 iv_ruleManifestFeature=ruleManifestFeature 
	 { $current=$iv_ruleManifestFeature.current; } 
	 EOF 
;

// Rule ManifestFeature
ruleManifestFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getManifestFeatureAccess().getAttributeParserRuleCall_0()); 
    }
    this_Attribute_0=ruleAttribute
    { 
        $current = $this_Attribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getManifestFeatureAccess().getPropertyParserRuleCall_1()); 
    }
    this_Property_1=ruleProperty
    { 
        $current = $this_Property_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getManifestFeatureAccess().getDefineParserRuleCall_2()); 
    }
    this_Define_2=ruleDefine
    { 
        $current = $this_Define_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getManifestFeatureAccess().getMethodParserRuleCall_3()); 
    }
    this_Method_3=ruleMethod
    { 
        $current = $this_Method_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefinitionModel
entryRuleDefinitionModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionModelRule()); }
	 iv_ruleDefinitionModel=ruleDefinitionModel 
	 { $current=$iv_ruleDefinitionModel.current; } 
	 EOF 
;

// Rule DefinitionModel
ruleDefinitionModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionModelAccess().getElementsImportParserRuleCall_0_0()); 
	    }
		lv_elements_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionModelAccess().getElementsPackageDeclarationParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=rulePackageDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"PackageDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCode
entryRuleCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCodeRule()); }
	 iv_ruleCode=ruleCode 
	 { $current=$iv_ruleCode.current; } 
	 EOF 
;

// Rule Code
ruleCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCodeAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getCodeAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCodeAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	 iv_rulePackageDeclaration=rulePackageDeclaration 
	 { $current=$iv_rulePackageDeclaration.current; } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getDefinitionDefinitionParserRuleCall_3_0()); 
	    }
		lv_definition_3_0=ruleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_3_0, 
        		"Definition");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDefinitionType
entryRuleDefinitionType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionTypeRule()); } 
	 iv_ruleDefinitionType=ruleDefinitionType 
	 { $current=$iv_ruleDefinitionType.current.getText(); }  
	 EOF 
;

// Rule DefinitionType
ruleDefinitionType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='activity' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getActivityKeyword_0()); 
    }

    |
	kw='catalog' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getCatalogKeyword_1()); 
    }

    |
	kw='collection' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getCollectionKeyword_2()); 
    }

    |
	kw='container' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getContainerKeyword_3()); 
    }

    |
	kw='dashboard' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getDashboardKeyword_4()); 
    }

    |
	kw='datastore-builder' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getDatastoreBuilderKeyword_5()); 
    }

    |
	kw='datastore' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getDatastoreKeyword_6()); 
    }

    |
	kw='desktop' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getDesktopKeyword_7()); 
    }

    |
	kw='document' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getDocumentKeyword_8()); 
    }

    |
	kw='exporter' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getExporterKeyword_9()); 
    }

    |
	kw='form' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getFormKeyword_10()); 
    }

    |
	kw='glossary' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getGlossaryKeyword_11()); 
    }

    |
	kw='importer' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getImporterKeyword_12()); 
    }

    |
	kw='index' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getIndexKeyword_13()); 
    }

    |
	kw='job' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getJobKeyword_14()); 
    }

    |
	kw='measure-unit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getMeasureUnitKeyword_15()); 
    }

    |
	kw='role' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getRoleKeyword_16()); 
    }

    |
	kw='sensor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getSensorKeyword_17()); 
    }

    |
	kw='service' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getServiceKeyword_18()); 
    }

    |
	kw='tasktray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getTasktrayKeyword_19()); 
    }

    |
	kw='thesaurus' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefinitionTypeAccess().getThesaurusKeyword_20()); 
    }
)
    ;





// Entry rule entryRulePropertyTypes
entryRulePropertyTypes returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyTypesRule()); } 
	 iv_rulePropertyTypes=rulePropertyTypes 
	 { $current=$iv_rulePropertyTypes.current.getText(); }  
	 EOF 
;

// Rule PropertyTypes
rulePropertyTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='parent' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getParentKeyword_0()); 
    }

    |
	kw='field-picture' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldPictureKeyword_1()); 
    }

    |
	kw='select' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSelectKeyword_2()); 
    }

    |
	kw='allow-locations' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowLocationsKeyword_3()); 
    }

    |
	kw='aborted' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAbortedKeyword_4()); 
    }

    |
	kw='allow-add' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowAddKeyword_5()); 
    }

    |
	kw='is-component' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsComponentKeyword_6()); 
    }

    |
	kw='taxonomy' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTaxonomyKeyword_7()); 
    }

    |
	kw='signatures' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSignaturesKeyword_8()); 
    }

    |
	kw='is-static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsStaticKeyword_9()); 
    }

    |
	kw='tab:taskboard' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTabTaskboardKeyword_10()); 
    }

    |
	kw='terms' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTermsKeyword_11()); 
    }

    |
	kw='edit-text' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditTextKeyword_12()); 
    }

    |
	kw='default-location' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDefaultLocationKeyword_13()); 
    }

    |
	kw='recent-task' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRecentTaskKeyword_14()); 
    }

    |
	kw='is-default' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsDefaultKeyword_15()); 
    }

    |
	kw='tab:trash' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTabTrashKeyword_16()); 
    }

    |
	kw='cube' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getCubeKeyword_17()); 
    }

    |
	kw='require-confirmation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRequireConfirmationKeyword_18()); 
    }

    |
	kw='tasks' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTasksKeyword_19()); 
    }

    |
	kw='is-environment' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsEnvironmentKeyword_20()); 
    }

    |
	kw='edit-memo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditMemoKeyword_21()); 
    }

    |
	kw='field-summation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldSummationKeyword_22()); 
    }

    |
	kw='mapping' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getMappingKeyword_23()); 
    }

    |
	kw='links:out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getLinksOutKeyword_24()); 
    }

    |
	kw='edit-video' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditVideoKeyword_25()); 
    }

    |
	kw='capture-date' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getCaptureDateKeyword_26()); 
    }

    |
	kw='field-boolean' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldBooleanKeyword_27()); 
    }

    |
	kw='rule:view' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRuleViewKeyword_28()); 
    }

    |
	kw='index' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIndexKeyword_29()); 
    }

    |
	kw='self-generated' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSelfGeneratedKeyword_30()); 
    }

    |
	kw='back-enable' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getBackEnableKeyword_31()); 
    }

    |
	kw='confirmation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getConfirmationKeyword_32()); 
    }

    |
	kw='secondary' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSecondaryKeyword_33()); 
    }

    |
	kw='explicit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getExplicitKeyword_34()); 
    }

    |
	kw='allow-edit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowEditKeyword_35()); 
    }

    |
	kw='exit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getExitKeyword_36()); 
    }

    |
	kw='is-initial' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsInitialKeyword_37()); 
    }

    |
	kw='enable-history' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEnableHistoryKeyword_38()); 
    }

    |
	kw='folder' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFolderKeyword_39()); 
    }

    |
	kw='size' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSizeKeyword_40()); 
    }

    |
	kw='stop' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getStopKeyword_41()); 
    }

    |
	kw='meta' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getMetaKeyword_42()); 
    }

    |
	kw='is-extended' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsExtendedKeyword_43()); 
    }

    |
	kw='analyze' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAnalyzeKeyword_44()); 
    }

    |
	kw='field-date' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldDateKeyword_45()); 
    }

    |
	kw='allow-less-precision' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowLessPrecisionKeyword_46()); 
    }

    |
	kw='orders' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getOrdersKeyword_47()); 
    }

    |
	kw='enroll' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEnrollKeyword_48()); 
    }

    |
	kw='allow-search' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowSearchKeyword_49()); 
    }

    |
	kw='items' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getItemsKeyword_50()); 
    }

    |
	kw='primary' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getPrimaryKeyword_51()); 
    }

    |
	kw='is-univocal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsUnivocalKeyword_52()); 
    }

    |
	kw='implicit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getImplicitKeyword_53()); 
    }

    |
	kw='internal' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getInternalKeyword_54()); 
    }

    |
	kw='wait' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getWaitKeyword_55()); 
    }

    |
	kw='send-response' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSendResponseKeyword_56()); 
    }

    |
	kw='attachments' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAttachmentsKeyword_57()); 
    }

    |
	kw='signature' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSignatureKeyword_58()); 
    }

    |
	kw='is-singleton' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsSingletonKeyword_59()); 
    }

    |
	kw='pattern' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getPatternKeyword_60()); 
    }

    |
	kw='field-number' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldNumberKeyword_61()); 
    }

    |
	kw='edit-position' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditPositionKeyword_62()); 
    }

    |
	kw='range' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRangeKeyword_63()); 
    }

    |
	kw='field-uri' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldUriKeyword_64()); 
    }

    |
	kw='assign-role' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAssignRoleKeyword_65()); 
    }

    |
	kw='is-private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsPrivateKeyword_66()); 
    }

    |
	kw='edit-check' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditCheckKeyword_67()); 
    }

    |
	kw='feature' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFeatureKeyword_68()); 
    }

    |
	kw='unpublish' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getUnpublishKeyword_69()); 
    }

    |
	kw='add-operation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAddOperationKeyword_70()); 
    }

    |
	kw='term' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTermKeyword_71()); 
    }

    |
	kw='attribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAttributeKeyword_72()); 
    }

    |
	kw='place' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getPlaceKeyword_73()); 
    }

    |
	kw='enable-services' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEnableServicesKeyword_74()); 
    }

    |
	kw='capture-position' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getCapturePositionKeyword_75()); 
    }

    |
	kw='federation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFederationKeyword_76()); 
    }

    |
	kw='contain' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getContainKeyword_77()); 
    }

    |
	kw='edit-select' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditSelectKeyword_78()); 
    }

    |
	kw='is-embedded' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsEmbeddedKeyword_79()); 
    }

    |
	kw='display' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDisplayKeyword_80()); 
    }

    |
	kw='field-node' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldNodeKeyword_81()); 
    }

    |
	kw='is-email' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsEmailKeyword_82()); 
    }

    |
	kw='edit-date' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditDateKeyword_83()); 
    }

    |
	kw='filter' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFilterKeyword_84()); 
    }

    |
	kw='field-link' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldLinkKeyword_85()); 
    }

    |
	kw='from-roles' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFromRolesKeyword_86()); 
    }

    |
	kw='toolbar' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getToolbarKeyword_87()); 
    }

    |
	kw='tab:roles' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTabRolesKeyword_88()); 
    }

    |
	kw='is-conditional' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsConditionalKeyword_89()); 
    }

    |
	kw='is-final' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsFinalKeyword_90()); 
    }

    |
	kw='partner' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getPartnerKeyword_91()); 
    }

    |
	kw='metric' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getMetricKeyword_92()); 
    }

    |
	kw='disable' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDisableKeyword_93()); 
    }

    |
	kw='report' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getReportKeyword_94()); 
    }

    |
	kw='is-abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsAbstractKeyword_95()); 
    }

    |
	kw='to' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getToKeyword_96()); 
    }

    |
	kw='tab:news' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTabNewsKeyword_97()); 
    }

    |
	kw='is-self-generated' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsSelfGeneratedKeyword_98()); 
    }

    |
	kw='operation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getOperationKeyword_99()); 
    }

    |
	kw='is-breadcrumbs-disabled' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsBreadcrumbsDisabledKeyword_100()); 
    }

    |
	kw='send-request' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSendRequestKeyword_101()); 
    }

    |
	kw='indicator' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIndicatorKeyword_102()); 
    }

    |
	kw='field-text' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldTextKeyword_103()); 
    }

    |
	kw='is-required' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsRequiredKeyword_104()); 
    }

    |
	kw='door' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDoorKeyword_105()); 
    }

    |
	kw='rule:node' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRuleNodeKeyword_106()); 
    }

    |
	kw='notes' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getNotesKeyword_107()); 
    }

    |
	kw='use' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getUseKeyword_108()); 
    }

    |
	kw='edit-picture' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditPictureKeyword_109()); 
    }

    |
	kw='source' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSourceKeyword_110()); 
    }

    |
	kw='listen' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getListenKeyword_111()); 
    }

    |
	kw='space' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSpaceKeyword_112()); 
    }

    |
	kw='reference' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getReferenceKeyword_113()); 
    }

    |
	kw='view' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getViewKeyword_114()); 
    }

    |
	kw='is-category' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsCategoryKeyword_115()); 
    }

    |
	kw='is-multiple' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsMultipleKeyword_116()); 
    }

    |
	kw='is-extensible' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsExtensibleKeyword_117()); 
    }

    |
	kw='is-hand-written' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsHandWrittenKeyword_118()); 
    }

    |
	kw='is-prototypable' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsPrototypableKeyword_119()); 
    }

    |
	kw='edit-boolean' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditBooleanKeyword_120()); 
    }

    |
	kw='check-position' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getCheckPositionKeyword_121()); 
    }

    |
	kw='allow-history' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowHistoryKeyword_122()); 
    }

    |
	kw='add' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAddKeyword_123()); 
    }

    |
	kw='field-composite' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldCompositeKeyword_124()); 
    }

    |
	kw='contest' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getContestKeyword_125()); 
    }

    |
	kw='level' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getLevelKeyword_126()); 
    }

    |
	kw='is-readonly' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsReadonlyKeyword_127()); 
    }

    |
	kw='shared-prototypes' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSharedPrototypesKeyword_128()); 
    }

    |
	kw='send-job' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSendJobKeyword_129()); 
    }

    |
	kw='external' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getExternalKeyword_130()); 
    }

    |
	kw='is-hidden' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsHiddenKeyword_131()); 
    }

    |
	kw='field-memo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldMemoKeyword_132()); 
    }

    |
	kw='enable-feeders' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEnableFeedersKeyword_133()); 
    }

    |
	kw='disable-edition' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDisableEditionKeyword_134()); 
    }

    |
	kw='is-visible-when-embedded' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsVisibleWhenEmbeddedKeyword_135()); 
    }

    |
	kw='edit-number' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditNumberKeyword_136()); 
    }

    |
	kw='secondary:location' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSecondaryLocationKeyword_137()); 
    }

    |
	kw='expiration' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getExpirationKeyword_138()); 
    }

    |
	kw='rule:form' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRuleFormKeyword_139()); 
    }

    |
	kw='is-external-fed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsExternalFedKeyword_140()); 
    }

    |
	kw='links:in' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getLinksInKeyword_141()); 
    }

    |
	kw='boundary' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getBoundaryKeyword_142()); 
    }

    |
	kw='allow-key' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowKeyKeyword_143()); 
    }

    |
	kw='is-read-only' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsReadOnlyKeyword_144()); 
    }

    |
	kw='request' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRequestKeyword_145()); 
    }

    |
	kw='is-negative' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsNegativeKeyword_146()); 
    }

    |
	kw='is-georeferenced' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsGeoreferencedKeyword_147()); 
    }

    |
	kw='from-index' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFromIndexKeyword_148()); 
    }

    |
	kw='rejected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRejectedKeyword_149()); 
    }

    |
	kw='line' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getLineKeyword_150()); 
    }

    |
	kw='show' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getShowKeyword_151()); 
    }

    |
	kw='for' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getForKeyword_152()); 
    }

    |
	kw='edition' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getEditionKeyword_153()); 
    }

    |
	kw='scale' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getScaleKeyword_154()); 
    }

    |
	kw='allow-other' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getAllowOtherKeyword_155()); 
    }

    |
	kw='timeout' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTimeoutKeyword_156()); 
    }

    |
	kw='owned-prototypes' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getOwnedPrototypesKeyword_157()); 
    }

    |
	kw='is-oust' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsOustKeyword_158()); 
    }

    |
	kw='shortcut' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getShortcutKeyword_159()); 
    }

    |
	kw='provider' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getProviderKeyword_160()); 
    }

    |
	kw='sorting' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSortingKeyword_161()); 
    }

    |
	kw='field:node' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldNodeKeyword_162()); 
    }

    |
	kw='revisions' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRevisionsKeyword_163()); 
    }

    |
	kw='dimension' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDimensionKeyword_164()); 
    }

    |
	kw='summary' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSummaryKeyword_165()); 
    }

    |
	kw='tab:tasktray' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getTabTasktrayKeyword_166()); 
    }

    |
	kw='center' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getCenterKeyword_167()); 
    }

    |
	kw='is-background' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsBackgroundKeyword_168()); 
    }

    |
	kw='length' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getLengthKeyword_169()); 
    }

    |
	kw='is-profile-photo' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsProfilePhotoKeyword_170()); 
    }

    |
	kw='field-check' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldCheckKeyword_171()); 
    }

    |
	kw='disable-users' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDisableUsersKeyword_172()); 
    }

    |
	kw='is-collapsible' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsCollapsibleKeyword_173()); 
    }

    |
	kw='field-file' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldFileKeyword_174()); 
    }

    |
	kw='field-select' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldSelectKeyword_175()); 
    }

    |
	kw='serial' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getSerialKeyword_176()); 
    }

    |
	kw='is-manual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getIsManualKeyword_177()); 
    }

    |
	kw='response' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getResponseKeyword_178()); 
    }

    |
	kw='publish' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getPublishKeyword_179()); 
    }

    |
	kw='olap' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getOlapKeyword_180()); 
    }

    |
	kw='rule:link' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRuleLinkKeyword_181()); 
    }

    |
	kw='rule:operation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRuleOperationKeyword_182()); 
    }

    |
	kw='field-serial' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getFieldSerialKeyword_183()); 
    }

    |
	kw='locations' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getLocationsKeyword_184()); 
    }

    |
	kw='location' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getLocationKeyword_185()); 
    }

    |
	kw='step' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getStepKeyword_186()); 
    }

    |
	kw='require-partner-context' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getRequirePartnerContextKeyword_187()); 
    }

    |
	kw='delegation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getDelegationKeyword_188()); 
    }

    |
	kw='category' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getCategoryKeyword_189()); 
    }

    |
	kw='properties' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getPropertiesKeyword_190()); 
    }

    |
	kw='customer' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPropertyTypesAccess().getCustomerKeyword_191()); 
    }
)
    ;





// Entry rule entryRuleMethodTypes
entryRuleMethodTypes returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodTypesRule()); } 
	 iv_ruleMethodTypes=ruleMethodTypes 
	 { $current=$iv_ruleMethodTypes.current.getText(); }  
	 EOF 
;

// Rule MethodTypes
ruleMethodTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='onChatMessageReceived' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnChatMessageReceivedKeyword_0()); 
    }

    |
	kw='onPopulated' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnPopulatedKeyword_1()); 
    }

    |
	kw='isVisible' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getIsVisibleKeyword_2()); 
    }

    |
	kw='onTake' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnTakeKeyword_3()); 
    }

    |
	kw='when' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getWhenKeyword_4()); 
    }

    |
	kw='onExportItem' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnExportItemKeyword_5()); 
    }

    |
	kw='onResponse' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnResponseKeyword_6()); 
    }

    |
	kw='onSelectJobRoleComplete' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSelectJobRoleCompleteKeyword_7()); 
    }

    |
	kw='onSave' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSaveKeyword_8()); 
    }

    |
	kw='onInit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnInitKeyword_9()); 
    }

    |
	kw='onRemoved' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnRemovedKeyword_10()); 
    }

    |
	kw='onSetupComplete' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSetupCompleteKeyword_11()); 
    }

    |
	kw='calculate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getCalculateKeyword_12()); 
    }

    |
	kw='onAbort' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnAbortKeyword_13()); 
    }

    |
	kw='isEnabled' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getIsEnabledKeyword_14()); 
    }

    |
	kw='constructor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getConstructorKeyword_15()); 
    }

    |
	kw='onSetupJobComplete' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSetupJobCompleteKeyword_16()); 
    }

    |
	kw='execute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getExecuteKeyword_17()); 
    }

    |
	kw='onSignsComplete' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSignsCompleteKeyword_18()); 
    }

    |
	kw='onTermAdded' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnTermAddedKeyword_19()); 
    }

    |
	kw='onSolve' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSolveKeyword_20()); 
    }

    |
	kw='onImportItem' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnImportItemKeyword_21()); 
    }

    |
	kw='onFinished' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnFinishedKeyword_22()); 
    }

    |
	kw='onOpened' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnOpenedKeyword_23()); 
    }

    |
	kw='onSelectJobRole' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSelectJobRoleKeyword_24()); 
    }

    |
	kw='import' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getImportKeyword_25()); 
    }

    |
	kw='onRequest' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnRequestKeyword_26()); 
    }

    |
	kw='onSaved' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSavedKeyword_27()); 
    }

    |
	kw='onTerminate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnTerminateKeyword_28()); 
    }

    |
	kw='onCancel' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnCancelKeyword_29()); 
    }

    |
	kw='onValidate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnValidateKeyword_30()); 
    }

    |
	kw='onSynchronized' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSynchronizedKeyword_31()); 
    }

    |
	kw='onSetup' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSetupKeyword_32()); 
    }

    |
	kw='onUnassign' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnUnassignKeyword_33()); 
    }

    |
	kw='onItemAdded' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnItemAddedKeyword_34()); 
    }

    |
	kw='onSign' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSignKeyword_35()); 
    }

    |
	kw='onCreated' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnCreatedKeyword_36()); 
    }

    |
	kw='onReceiveEvent' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnReceiveEventKeyword_37()); 
    }

    |
	kw='onArrive' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnArriveKeyword_38()); 
    }

    |
	kw='onCreate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnCreateKeyword_39()); 
    }

    |
	kw='onClosed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnClosedKeyword_40()); 
    }

    |
	kw='onSetContext' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSetContextKeyword_41()); 
    }

    |
	kw='onExecute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnExecuteKeyword_42()); 
    }

    |
	kw='onAssign' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnAssignKeyword_43()); 
    }

    |
	kw='onItemRemoved' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnItemRemovedKeyword_44()); 
    }

    |
	kw='onTimeout' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnTimeoutKeyword_45()); 
    }

    |
	kw='onTermModified' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnTermModifiedKeyword_46()); 
    }

    |
	kw='onBack' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnBackKeyword_47()); 
    }

    |
	kw='onBuild' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnBuildKeyword_48()); 
    }

    |
	kw='onInitialize' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnInitializeKeyword_49()); 
    }

    |
	kw='onSetupJob' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSetupJobKeyword_50()); 
    }

    |
	kw='onTerminate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnTerminateKeyword_51()); 
    }

    |
	kw='onSelectRole' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodTypesAccess().getOnSelectRoleKeyword_52()); 
    }
)
    ;





// Entry rule entryRuleAttributeTypes
entryRuleAttributeTypes returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeTypesRule()); } 
	 iv_ruleAttributeTypes=ruleAttributeTypes 
	 { $current=$iv_ruleAttributeTypes.current.getText(); }  
	 EOF 
;

// Rule AttributeTypes
ruleAttributeTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='parent' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getParentKeyword_0()); 
    }

    |
	kw='datastore' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDatastoreKeyword_1()); 
    }

    |
	kw='type' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTypeKeyword_2()); 
    }

    |
	kw='when' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getWhenKeyword_3()); 
    }

    |
	kw='resolution' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getResolutionKeyword_4()); 
    }

    |
	kw='collaborator' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getCollaboratorKeyword_5()); 
    }

    |
	kw='tab:environment' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTabEnvironmentKeyword_6()); 
    }

    |
	kw='shortcut-view' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getShortcutViewKeyword_7()); 
    }

    |
	kw='children' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getChildrenKeyword_8()); 
    }

    |
	kw='enable' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getEnableKeyword_9()); 
    }

    |
	kw='context' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getContextKeyword_10()); 
    }

    |
	kw='classifier' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getClassifierKeyword_11()); 
    }

    |
	kw='line-below' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLineBelowKeyword_12()); 
    }

    |
	kw='dashboard' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDashboardKeyword_13()); 
    }

    |
	kw='height' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getHeightKeyword_14()); 
    }

    |
	kw='index' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getIndexKeyword_15()); 
    }

    |
	kw='version' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getVersionKeyword_16()); 
    }

    |
	kw='script' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getScriptKeyword_17()); 
    }

    |
	kw='node' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getNodeKeyword_18()); 
    }

    |
	kw='show-text' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getShowTextKeyword_19()); 
    }

    |
	kw='field' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFieldKeyword_20()); 
    }

    |
	kw='subtitle' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getSubtitleKeyword_21()); 
    }

    |
	kw='template' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTemplateKeyword_22()); 
    }

    |
	kw='regexp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getRegexpKeyword_23()); 
    }

    |
	kw='role' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getRoleKeyword_24()); 
    }

    |
	kw='latitude' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLatitudeKeyword_25()); 
    }

    |
	kw='icon' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getIconKeyword_26()); 
    }

    |
	kw='range' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getRangeKeyword_27()); 
    }

    |
	kw='secret' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getSecretKeyword_28()); 
    }

    |
	kw='layer' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLayerKeyword_29()); 
    }

    |
	kw='default' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDefaultKeyword_30()); 
    }

    |
	kw='exporter' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getExporterKeyword_31()); 
    }

    |
	kw='min' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getMinKeyword_32()); 
    }

    |
	kw='goto' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getGotoKeyword_33()); 
    }

    |
	kw='feature' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFeatureKeyword_34()); 
    }

    |
	kw='attribute' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getAttributeKeyword_35()); 
    }

    |
	kw='after' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getAfterKeyword_36()); 
    }

    |
	kw='key' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getKeyKeyword_37()); 
    }

    |
	kw='max' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getMaxKeyword_38()); 
    }

    |
	kw='uri' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getUriKeyword_39()); 
    }

    |
	kw='picture' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getPictureKeyword_40()); 
    }

    |
	kw='help' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getHelpKeyword_41()); 
    }

    |
	kw='component' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getComponentKeyword_42()); 
    }

    |
	kw='depth' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDepthKeyword_43()); 
    }

    |
	kw='metric' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getMetricKeyword_44()); 
    }

    |
	kw='width' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getWidthKeyword_45()); 
    }

    |
	kw='measure-unit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getMeasureUnitKeyword_46()); 
    }

    |
	kw='operation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getOperationKeyword_47()); 
    }

    |
	kw='indicator' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getIndicatorKeyword_48()); 
    }

    |
	kw='tab:dashboard' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTabDashboardKeyword_49()); 
    }

    |
	kw='use' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getUseKeyword_50()); 
    }

    |
	kw='precision' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getPrecisionKeyword_51()); 
    }

    |
	kw='source' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getSourceKeyword_52()); 
    }

    |
	kw='operator' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getOperatorKeyword_53()); 
    }

    |
	kw='mode' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getModeKeyword_54()); 
    }

    |
	kw='flatten' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFlattenKeyword_55()); 
    }

    |
	kw='view' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getViewKeyword_56()); 
    }

    |
	kw='add-flag' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getAddFlagKeyword_57()); 
    }

    |
	kw='limit' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLimitKeyword_58()); 
    }

    |
	kw='tag' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTagKeyword_59()); 
    }

    |
	kw='ontology' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getOntologyKeyword_60()); 
    }

    |
	kw='longitude' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLongitudeKeyword_61()); 
    }

    |
	kw='use:amount' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getUseAmountKeyword_62()); 
    }

    |
	kw='unlock' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getUnlockKeyword_63()); 
    }

    |
	kw='author' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getAuthorKeyword_64()); 
    }

    |
	kw='format' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFormatKeyword_65()); 
    }

    |
	kw='collection' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getCollectionKeyword_66()); 
    }

    |
	kw='history' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getHistoryKeyword_67()); 
    }

    |
	kw='field:file' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFieldFileKeyword_68()); 
    }

    |
	kw='take' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTakeKeyword_69()); 
    }

    |
	kw='task' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTaskKeyword_70()); 
    }

    |
	kw='sort-by' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getSortByKeyword_71()); 
    }

    |
	kw='name' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getNameKeyword_72()); 
    }

    |
	kw='position' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getPositionKeyword_73()); 
    }

    |
	kw='job' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getJobKeyword_74()); 
    }

    |
	kw='request' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getRequestKeyword_75()); 
    }

    |
	kw='code' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getCodeKeyword_76()); 
    }

    |
	kw='purpose' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getPurposeKeyword_77()); 
    }

    |
	kw='footer' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFooterKeyword_78()); 
    }

    |
	kw='timezone' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTimezoneKeyword_79()); 
    }

    |
	kw='line' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLineKeyword_80()); 
    }

    |
	kw='link' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLinkKeyword_81()); 
    }

    |
	kw='for' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getForKeyword_82()); 
    }

    |
	kw='show' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getShowKeyword_83()); 
    }

    |
	kw='edition' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getEditionKeyword_84()); 
    }

    |
	kw='description' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDescriptionKeyword_85()); 
    }

    |
	kw='scale' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getScaleKeyword_86()); 
    }

    |
	kw='title' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTitleKeyword_87()); 
    }

    |
	kw='highlight' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getHighlightKeyword_88()); 
    }

    |
	kw='setup-uri' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getSetupUriKeyword_89()); 
    }

    |
	kw='shortcut' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getShortcutKeyword_90()); 
    }

    |
	kw='provider' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getProviderKeyword_91()); 
    }

    |
	kw='root' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getRootKeyword_92()); 
    }

    |
	kw='design' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDesignKeyword_93()); 
    }

    |
	kw='definition' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDefinitionKeyword_94()); 
    }

    |
	kw='factor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFactorKeyword_95()); 
    }

    |
	kw='value' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getValueKeyword_96()); 
    }

    |
	kw='layout:extended' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLayoutExtendedKeyword_97()); 
    }

    |
	kw='use:y' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getUseYKeyword_98()); 
    }

    |
	kw='amount' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getAmountKeyword_99()); 
    }

    |
	kw='use:x' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getUseXKeyword_100()); 
    }

    |
	kw='center' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getCenterKeyword_101()); 
    }

    |
	kw='zoom' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getZoomKeyword_102()); 
    }

    |
	kw='label' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLabelKeyword_103()); 
    }

    |
	kw='with-view' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getWithViewKeyword_104()); 
    }

    |
	kw='message' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getMessageKeyword_105()); 
    }

    |
	kw='target' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getTargetKeyword_106()); 
    }

    |
	kw='layout' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getLayoutKeyword_107()); 
    }

    |
	kw='interpolation' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getInterpolationKeyword_108()); 
    }

    |
	kw='sibling' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getSiblingKeyword_109()); 
    }

    |
	kw='form' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFormKeyword_110()); 
    }

    |
	kw='sort-mode' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getSortModeKeyword_111()); 
    }

    |
	kw='service' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getServiceKeyword_112()); 
    }

    |
	kw='response' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getResponseKeyword_113()); 
    }

    |
	kw='marker-icon' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getMarkerIconKeyword_114()); 
    }

    |
	kw='formula' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getFormulaKeyword_115()); 
    }

    |
	kw='deploy-uri' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getDeployUriKeyword_116()); 
    }

    |
	kw='user' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAttributeTypesAccess().getUserKeyword_117()); 
    }
)
    ;





// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	 iv_ruleDefinition=ruleDefinition 
	 { $current=$iv_ruleDefinition.current; } 
	 EOF 
;

// Rule Definition
ruleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getCodeCodeParserRuleCall_0_0()); 
	    }
		lv_code_0_0=ruleCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		set(
       			$current, 
       			"code",
        		lv_code_0_0, 
        		"Code");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_abstract_1_0=	'abstract' 
    {
        newLeafNode(lv_abstract_1_0, grammarAccess.getDefinitionAccess().getAbstractAbstractKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
)?(
(
		lv_extensible_2_0=	'extensible' 
    {
        newLeafNode(lv_extensible_2_0, grammarAccess.getDefinitionAccess().getExtensibleExtensibleKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
       		setWithLastConsumed($current, "extensible", true, "extensible");
	    }

)
)?	otherlv_3='definition' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefinitionAccess().getDefinitionKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getNameValidIDParserRuleCall_4_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='is' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getIsKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getDefinitionTypeDefinitionTypeParserRuleCall_6_0()); 
	    }
		lv_definitionType_6_0=ruleDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		set(
       			$current, 
       			"definitionType",
        		lv_definitionType_6_0, 
        		"DefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='extends' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDefinitionAccess().getExtendsKeyword_7_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getSuperTypeDefinitionCrossReference_7_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='replace' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDefinitionAccess().getReplaceKeyword_8_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getReplaceSuperTypeDefinitionCrossReference_8_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDefinitionAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getFeaturesFeatureParserRuleCall_10_0()); 
	    }
		lv_features_12_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_12_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDefinitionAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0()); 
    }
    this_Attribute_0=ruleAttribute
    { 
        $current = $this_Attribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getDefinitionParserRuleCall_1()); 
    }
    this_Definition_1=ruleDefinition
    { 
        $current = $this_Definition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getPropertyParserRuleCall_2()); 
    }
    this_Property_2=ruleProperty
    { 
        $current = $this_Property_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getSchemaParserRuleCall_3()); 
    }
    this_Schema_3=ruleSchema
    { 
        $current = $this_Schema_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getMethodParserRuleCall_4()); 
    }
    this_Method_4=ruleMethod
    { 
        $current = $this_Method_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getFunctionParserRuleCall_5()); 
    }
    this_Function_5=ruleFunction
    { 
        $current = $this_Function_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureAccess().getVariableParserRuleCall_6()); 
    }
    this_Variable_6=ruleVariable
    { 
        $current = $this_Variable_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getIdAttributeTypesParserRuleCall_0_0()); 
	    }
		lv_id_0_0=ruleAttributeTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"AttributeTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getValueAttributeValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"AttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributeValue
entryRuleAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeValueRule()); }
	 iv_ruleAttributeValue=ruleAttributeValue 
	 { $current=$iv_ruleAttributeValue.current; } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getStringLiteralParserRuleCall_0()); 
    }
    this_StringLiteral_0=ruleStringLiteral
    { 
        $current = $this_StringLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getIntLiteralParserRuleCall_1()); 
    }
    this_IntLiteral_1=ruleIntLiteral
    { 
        $current = $this_IntLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getFloatLiteralParserRuleCall_2()); 
    }
    this_FloatLiteral_2=ruleFloatLiteral
    { 
        $current = $this_FloatLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getDoubleLiteralParserRuleCall_3()); 
    }
    this_DoubleLiteral_3=ruleDoubleLiteral
    { 
        $current = $this_DoubleLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getEnumLiteralParserRuleCall_4()); 
    }
    this_EnumLiteral_4=ruleEnumLiteral
    { 
        $current = $this_EnumLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getXTReferenceParserRuleCall_5()); 
    }
    this_XTReference_5=ruleXTReference
    { 
        $current = $this_XTReference_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getLocalizedTextParserRuleCall_6()); 
    }
    this_LocalizedText_6=ruleLocalizedText
    { 
        $current = $this_LocalizedText_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getResourceParserRuleCall_7()); 
    }
    this_Resource_7=ruleResource
    { 
        $current = $this_Resource_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getExpressionLiteralParserRuleCall_8()); 
    }
    this_ExpressionLiteral_8=ruleExpressionLiteral
    { 
        $current = $this_ExpressionLiteral_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeValueAccess().getTimeLiteralParserRuleCall_9()); 
    }
    this_TimeLiteral_9=ruleTimeLiteral
    { 
        $current = $this_TimeLiteral_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLocalizedText
entryRuleLocalizedText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalizedTextRule()); }
	 iv_ruleLocalizedText=ruleLocalizedText 
	 { $current=$iv_ruleLocalizedText.current; } 
	 EOF 
;

// Rule LocalizedText
ruleLocalizedText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='text' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLocalizedTextAccess().getTextKeyword_0());
    }
(
(
(
		lv_value_1_1=RULE_ID
		{
			newLeafNode(lv_value_1_1, grammarAccess.getLocalizedTextAccess().getValueIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalizedTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_1, 
        		"ID");
	    }

    |		lv_value_1_2=RULE_ENUM
		{
			newLeafNode(lv_value_1_2, grammarAccess.getLocalizedTextAccess().getValueENUMTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalizedTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_2, 
        		"ENUM");
	    }

)

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLocalizedTextAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	 iv_ruleResource=ruleResource 
	 { $current=$iv_ruleResource.current; } 
	 EOF 
;

// Rule Resource
ruleResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_type_0_1=	'data' 
    {
        newLeafNode(lv_type_0_1, grammarAccess.getResourceAccess().getTypeDataKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_1, null);
	    }

    |		lv_type_0_2=	'help' 
    {
        newLeafNode(lv_type_0_2, grammarAccess.getResourceAccess().getTypeHelpKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_2, null);
	    }

    |		lv_type_0_3=	'image' 
    {
        newLeafNode(lv_type_0_3, grammarAccess.getResourceAccess().getTypeImageKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_3, null);
	    }

    |		lv_type_0_4=	'template' 
    {
        newLeafNode(lv_type_0_4, grammarAccess.getResourceAccess().getTypeTemplateKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_4, null);
	    }

    |		lv_type_0_5=	'layout' 
    {
        newLeafNode(lv_type_0_5, grammarAccess.getResourceAccess().getTypeLayoutKeyword_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_5, null);
	    }

)

)
)(
(
(
		lv_value_1_1=RULE_ID
		{
			newLeafNode(lv_value_1_1, grammarAccess.getResourceAccess().getValueIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_1, 
        		"ID");
	    }

    |		lv_value_1_2=RULE_ENUM
		{
			newLeafNode(lv_value_1_2, grammarAccess.getResourceAccess().getValueENUMTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_2, 
        		"ENUM");
	    }

)

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStringLiteralAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeLiteralRule()); }
	 iv_ruleTimeLiteral=ruleTimeLiteral 
	 { $current=$iv_ruleTimeLiteral.current; } 
	 EOF 
;

// Rule TimeLiteral
ruleTimeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_TIME
		{
			newLeafNode(lv_value_0_0, grammarAccess.getTimeLiteralAccess().getValueTIMETerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"TIME");
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTimeLiteralAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	 iv_ruleIntLiteral=ruleIntLiteral 
	 { $current=$iv_ruleIntLiteral.current; } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_negative_0_0=	'-' 
    {
        newLeafNode(lv_negative_0_0, grammarAccess.getIntLiteralAccess().getNegativeHyphenMinusKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntLiteralRule());
	        }
       		setWithLastConsumed($current, "negative", true, "-");
	    }

)
)?(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntLiteralAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatLiteralRule()); }
	 iv_ruleFloatLiteral=ruleFloatLiteral 
	 { $current=$iv_ruleFloatLiteral.current; } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_negative_0_0=	'-' 
    {
        newLeafNode(lv_negative_0_0, grammarAccess.getFloatLiteralAccess().getNegativeHyphenMinusKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFloatLiteralRule());
	        }
       		setWithLastConsumed($current, "negative", true, "-");
	    }

)
)?(
(
		lv_value_1_0=RULE_FLOAT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFloatLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"FLOAT");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFloatLiteralAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleLiteralRule()); }
	 iv_ruleDoubleLiteral=ruleDoubleLiteral 
	 { $current=$iv_ruleDoubleLiteral.current; } 
	 EOF 
;

// Rule DoubleLiteral
ruleDoubleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_negative_0_0=	'-' 
    {
        newLeafNode(lv_negative_0_0, grammarAccess.getDoubleLiteralAccess().getNegativeHyphenMinusKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleLiteralRule());
	        }
       		setWithLastConsumed($current, "negative", true, "-");
	    }

)
)?(
(
		lv_value_1_0=RULE_DOUBLE
		{
			newLeafNode(lv_value_1_0, grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"DOUBLE");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDoubleLiteralAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleExpressionLiteral
entryRuleExpressionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionLiteralRule()); }
	 iv_ruleExpressionLiteral=ruleExpressionLiteral 
	 { $current=$iv_ruleExpressionLiteral.current; } 
	 EOF 
;

// Rule ExpressionLiteral
ruleExpressionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getValueXBlockExpressionParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleXBlockExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"XBlockExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;







// Entry rule entryRuleXTReference
entryRuleXTReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTReferenceRule()); }
	 iv_ruleXTReference=ruleXTReference 
	 { $current=$iv_ruleXTReference.current; } 
	 EOF 
;

// Rule XTReference
ruleXTReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXTReferenceAccess().getRefKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTReferenceAccess().getValueReferenciableCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTReferenceAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	 iv_ruleEnumLiteral=ruleEnumLiteral 
	 { $current=$iv_ruleEnumLiteral.current; } 
	 EOF 
;

// Rule EnumLiteral
ruleEnumLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_ENUM
		{
			newLeafNode(lv_value_0_0, grammarAccess.getEnumLiteralAccess().getValueENUMTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ENUM");
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumLiteralAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getCodeCodeParserRuleCall_0_0()); 
	    }
		lv_code_0_0=ruleCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"code",
        		lv_code_0_0, 
        		"Code");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getIdPropertyTypesParserRuleCall_1_0()); 
	    }
		lv_id_1_0=rulePropertyTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"PropertyTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)?((	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getFeaturesPropertyFeatureParserRuleCall_3_0_1_0()); 
	    }
		lv_features_4_0=rulePropertyFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_4_0, 
        		"PropertyFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_3_0_2());
    }
)
    |	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPropertyAccess().getSemicolonKeyword_3_1());
    }
))
;





// Entry rule entryRulePropertyFeature
entryRulePropertyFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyFeatureRule()); }
	 iv_rulePropertyFeature=rulePropertyFeature 
	 { $current=$iv_rulePropertyFeature.current; } 
	 EOF 
;

// Rule PropertyFeature
rulePropertyFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyFeatureAccess().getAttributeParserRuleCall_0()); 
    }
    this_Attribute_0=ruleAttribute
    { 
        $current = $this_Attribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyFeatureAccess().getPropertyParserRuleCall_1()); 
    }
    this_Property_1=ruleProperty
    { 
        $current = $this_Property_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyFeatureAccess().getMethodParserRuleCall_2()); 
    }
    this_Method_2=ruleMethod
    { 
        $current = $this_Method_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getIdMethodTypesParserRuleCall_0_0()); 
	    }
		lv_id_0_0=ruleMethodTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"MethodTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getParamsFullJvmFormalParameterParserRuleCall_2_0_0()); 
	    }
		lv_params_2_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_2_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMethodAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getParamsFullJvmFormalParameterParserRuleCall_2_1_1_0()); 
	    }
		lv_params_4_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMethodAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getBodyXBlockExpressionParserRuleCall_4_0()); 
	    }
		lv_body_6_0=ruleXBlockExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_6_0, 
        		"XBlockExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='var' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVarKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getAsKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getTypeJvmTypeReferenceParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	 iv_ruleDefine=ruleDefine 
	 { $current=$iv_ruleDefine.current; } 
	 EOF 
;

// Rule Define
ruleDefine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='define' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefineAccess().getDefineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefineAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDefineAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getDefineAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDefineAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleSchema
entryRuleSchema returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemaRule()); }
	 iv_ruleSchema=ruleSchema 
	 { $current=$iv_ruleSchema.current; } 
	 EOF 
;

// Rule Schema
ruleSchema returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_id_0_0=	'schema' 
    {
        newLeafNode(lv_id_0_0, grammarAccess.getSchemaAccess().getIdSchemaKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemaRule());
	        }
       		setWithLastConsumed($current, "id", lv_id_0_0, "schema");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSchemaAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemaAccess().getPropertiesSchemaFeatureParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleSchemaFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemaRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"SchemaFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSchemaAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSchemaFeature
entryRuleSchemaFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemaFeatureRule()); }
	 iv_ruleSchemaFeature=ruleSchemaFeature 
	 { $current=$iv_ruleSchemaFeature.current; } 
	 EOF 
;

// Rule SchemaFeature
ruleSchemaFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemaFeatureAccess().getSchemaSectionParserRuleCall_0()); 
    }
    this_SchemaSection_0=ruleSchemaSection
    { 
        $current = $this_SchemaSection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSchemaFeatureAccess().getSchemaPropertyParserRuleCall_1()); 
    }
    this_SchemaProperty_1=ruleSchemaProperty
    { 
        $current = $this_SchemaProperty_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSchemaSection
entryRuleSchemaSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemaSectionRule()); }
	 iv_ruleSchemaSection=ruleSchemaSection 
	 { $current=$iv_ruleSchemaSection.current; } 
	 EOF 
;

// Rule SchemaSection
ruleSchemaSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getSchemaSectionAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemaSectionRule());
	        }
       		setWithLastConsumed($current, "many", true, "many");
	    }

)
)?(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getSchemaSectionAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemaSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSchemaSectionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemaSectionAccess().getFeaturesSchemaFeatureParserRuleCall_3_0()); 
	    }
		lv_features_3_0=ruleSchemaFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemaSectionRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"SchemaFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSchemaSectionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSchemaProperty
entryRuleSchemaProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemaPropertyRule()); }
	 iv_ruleSchemaProperty=ruleSchemaProperty 
	 { $current=$iv_ruleSchemaProperty.current; } 
	 EOF 
;

// Rule SchemaProperty
ruleSchemaProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getSchemaPropertyAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemaPropertyRule());
	        }
       		setWithLastConsumed($current, "many", true, "many");
	    }

)
)?(
(
		lv_id_1_0=RULE_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getSchemaPropertyAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemaPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemaPropertyAccess().getSourceSchemaPropertyOfValueParserRuleCall_2_0()); 
	    }
		lv_source_2_0=ruleSchemaPropertyOfValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemaPropertyRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_2_0, 
        		"SchemaPropertyOfValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSchemaPropertyOfValue
entryRuleSchemaPropertyOfValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemaPropertyOfValueRule()); }
	 iv_ruleSchemaPropertyOfValue=ruleSchemaPropertyOfValue 
	 { $current=$iv_ruleSchemaPropertyOfValue.current; } 
	 EOF 
;

// Rule SchemaPropertyOfValue
ruleSchemaPropertyOfValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSchemaPropertyOfValueAccess().getTypeJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleJvmParameterizedTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemaPropertyOfValueRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"JvmParameterizedTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getSchemaPropertyOfValueAccess().getBodyXBlockExpressionParserRuleCall_1_0_0()); 
	    }
		lv_body_1_0=ruleXBlockExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemaPropertyOfValueRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"XBlockExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSchemaPropertyOfValueAccess().getSemicolonKeyword_1_1());
    }
))
;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='function' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0()); 
	    }
		lv_params_3_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_params_5_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getColonKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getTypeJvmTypeReferenceParserRuleCall_5_1_0()); 
	    }
		lv_type_8_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getBodyXBlockExpressionParserRuleCall_6_0()); 
	    }
		lv_body_9_0=ruleXBlockExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_9_0, 
        		"XBlockExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	 iv_ruleXExpression=ruleXExpression 
	 { $current=$iv_ruleXExpression.current; } 
	 EOF 
;

// Rule XExpression
ruleXExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
    }
    this_XAssignment_0=ruleXAssignment
    { 
        $current = $this_XAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	 iv_ruleXAssignment=ruleXAssignment 
	 { $current=$iv_ruleXAssignment.current; } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
	    }
		lv_value_3_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
    }
    this_XOrExpression_4=ruleXOrExpression
    { 
        $current = $this_XOrExpression_4.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMultiAssign
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpMultiAssign		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_7_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_7_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); } 
	 iv_ruleOpSingleAssign=ruleOpSingleAssign 
	 { $current=$iv_ruleOpSingleAssign.current.getText(); }  
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); } 
	 iv_ruleOpMultiAssign=ruleOpMultiAssign 
	 { $current=$iv_ruleOpMultiAssign.current.getText(); }  
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
    }

    |
	kw='*=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); 
    }

    |
	kw='/=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); 
    }

    |
	kw='%=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); 
    }

    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); 
    }

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); 
    }
)
    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); 
    }
(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); 
    }
)?
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); 
    }
))
    ;





// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	 iv_ruleXOrExpression=ruleXOrExpression 
	 { $current=$iv_ruleXOrExpression.current; } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
    }
    this_XAndExpression_0=ruleXAndExpression
    { 
        $current = $this_XAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOr
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOr		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOrRule()); } 
	 iv_ruleOpOr=ruleOpOr 
	 { $current=$iv_ruleOpOr.current.getText(); }  
	 EOF 
;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	 iv_ruleXAndExpression=ruleXAndExpression 
	 { $current=$iv_ruleXAndExpression.current; } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
    }
    this_XEqualityExpression_0=ruleXEqualityExpression
    { 
        $current = $this_XEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAnd
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAndExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAnd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAndRule()); } 
	 iv_ruleOpAnd=ruleOpAnd 
	 { $current=$iv_ruleOpAnd.current.getText(); }  
	 EOF 
;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	 iv_ruleXEqualityExpression=ruleXEqualityExpression 
	 { $current=$iv_ruleXEqualityExpression.current; } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
    }
    this_XRelationalExpression_0=ruleXRelationalExpression
    { 
        $current = $this_XRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpEquality
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXEqualityExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpEquality		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }

    |
	kw='===' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
    }

    |
	kw='!==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	 iv_ruleXRelationalExpression=ruleXRelationalExpression 
	 { $current=$iv_ruleXRelationalExpression.current; } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
    }
    this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
    { 
        $current = $this_XOtherOperatorExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
		ruleOpCompare
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpCompare		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleXOtherOperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"XOtherOperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); } 
	 iv_ruleOpCompare=ruleOpCompare 
	 { $current=$iv_ruleOpCompare.current.getText(); }  
	 EOF 
;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
    }

    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); 
    }

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); 
    }
)
    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	 iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression 
	 { $current=$iv_ruleXOtherOperatorExpression.current; } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
    }
    this_XAdditiveExpression_0=ruleXAdditiveExpression
    { 
        $current = $this_XAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOther
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOther		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); } 
	 iv_ruleOpOther=ruleOpOther 
	 { $current=$iv_ruleOpOther.current.getText(); }  
	 EOF 
;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
    }

    |
	kw='..<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
    }

	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
    }
)
    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
    }

    |
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
    }
((((
	'>' 

	'>' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
    }
))
    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
    }
))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
    }
((((
	'<' 

	'<' 
))=>(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
    }
))
    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
    }

    |
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); 
    }
))
    |
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
    }
)
    ;





// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	 iv_ruleXAdditiveExpression=ruleXAdditiveExpression 
	 { $current=$iv_ruleXAdditiveExpression.current; } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
    { 
        $current = $this_XMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAdd
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAdd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	 iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression 
	 { $current=$iv_ruleXMultiplicativeExpression.current; } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
    }
    this_XUnaryOperation_0=ruleXUnaryOperation
    { 
        $current = $this_XUnaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMulti
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMulti		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='**' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	 iv_ruleXUnaryOperation=ruleXUnaryOperation 
	 { $current=$iv_ruleXUnaryOperation.current; } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXUnaryOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleOpUnary		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
    }
    this_XCastedExpression_3=ruleXCastedExpression
    { 
        $current = $this_XCastedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); } 
	 iv_ruleOpUnary=ruleOpUnary 
	 { $current=$iv_ruleOpUnary.current.getText(); }  
	 EOF 
;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	 iv_ruleXCastedExpression=ruleXCastedExpression 
	 { $current=$iv_ruleXCastedExpression.current; } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); 
    }
    this_XPostfixOperation_0=ruleXPostfixOperation
    { 
        $current = $this_XPostfixOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'as' 
))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXPostfixOperation
entryRuleXPostfixOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPostfixOperationRule()); }
	 iv_ruleXPostfixOperation=ruleXPostfixOperation 
	 { $current=$iv_ruleXPostfixOperation.current; } 
	 EOF 
;

// Rule XPostfixOperation
ruleXPostfixOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); 
    }
    this_XMemberFeatureCall_0=ruleXMemberFeatureCall
    { 
        $current = $this_XMemberFeatureCall_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)(
(
		ruleOpPostfix
)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXPostfixOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); 
	    }
		ruleOpPostfix		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleOpPostfix
entryRuleOpPostfix returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpPostfixRule()); } 
	 iv_ruleOpPostfix=ruleOpPostfix 
	 { $current=$iv_ruleOpPostfix.current.getText(); }  
	 EOF 
;

// Rule OpPostfix
ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	 iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall 
	 { $current=$iv_ruleXMemberFeatureCall.current; } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)(	'.' 

    |(
(
	'::' 
 

)
))(
(
		ruleFeatureCallID
)
)	ruleOpSingleAssign))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            $current);
    }
)(	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
    }

    |(
(
		lv_explicitStatic_3_0=	'::' 
    {
        newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitStatic", true, "::");
	    }

)
))(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
	    }
		lv_value_6_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(	'.' 

    |(
(
	'?.' 
 

)
)
    |(
(
	'::' 
 

)
))))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            $current);
    }
)(	otherlv_8='.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
    }

    |(
(
		lv_nullSafe_9_0=	'?.' 
    {
        newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "nullSafe", true, "?.");
	    }

)
)
    |(
(
		lv_explicitStatic_10_0=	'::' 
    {
        newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitStatic", true, "::");
	    }

)
))))(	otherlv_11='<' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
	    }
		lv_typeArguments_12_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_12_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
	    }
		lv_typeArguments_14_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_14_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
    }
)?(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_17_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
	    }
		lv_memberCallArguments_18_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_18_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
	    }
		lv_memberCallArguments_19_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_19_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
	    }
		lv_memberCallArguments_21_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_21_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_22=')' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
	    }
		lv_memberCallArguments_23_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_23_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?))*)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
    }
    this_XConstructorCall_0=ruleXConstructorCall
    { 
        $current = $this_XConstructorCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
    }
    this_XBlockExpression_1=ruleXBlockExpression
    { 
        $current = $this_XBlockExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
    }
    this_XSwitchExpression_2=ruleXSwitchExpression
    { 
        $current = $this_XSwitchExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
)	'synchronized' 
	'(' 
))=>
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); 
    }
    this_XSynchronizedExpression_3=ruleXSynchronizedExpression
    { 
        $current = $this_XSynchronizedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); 
    }
    this_XFeatureCall_4=ruleXFeatureCall
    { 
        $current = $this_XFeatureCall_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); 
    }
    this_XLiteral_5=ruleXLiteral
    { 
        $current = $this_XLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); 
    }
    this_XIfExpression_6=ruleXIfExpression
    { 
        $current = $this_XIfExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
)	'for' 
	'(' 
(
(
ruleJvmFormalParameter
)
)	':' 
))=>
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); 
    }
    this_XForLoopExpression_7=ruleXForLoopExpression
    { 
        $current = $this_XForLoopExpression_7.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); 
    }
    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression
    { 
        $current = $this_XBasicForLoopExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); 
    }
    this_XWhileExpression_9=ruleXWhileExpression
    { 
        $current = $this_XWhileExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); 
    }
    this_XDoWhileExpression_10=ruleXDoWhileExpression
    { 
        $current = $this_XDoWhileExpression_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); 
    }
    this_XThrowExpression_11=ruleXThrowExpression
    { 
        $current = $this_XThrowExpression_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); 
    }
    this_XReturnExpression_12=ruleXReturnExpression
    { 
        $current = $this_XReturnExpression_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); 
    }
    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression
    { 
        $current = $this_XTryCatchFinallyExpression_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); 
    }
    this_XParenthesizedExpression_14=ruleXParenthesizedExpression
    { 
        $current = $this_XParenthesizedExpression_14.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current; } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
    }
    this_XCollectionLiteral_0=ruleXCollectionLiteral
    { 
        $current = $this_XCollectionLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
)	'[' 
))=>
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
    }
    this_XClosure_1=ruleXClosure
    { 
        $current = $this_XClosure_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
    }
    this_XBooleanLiteral_2=ruleXBooleanLiteral
    { 
        $current = $this_XBooleanLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
    }
    this_XNumberLiteral_3=ruleXNumberLiteral
    { 
        $current = $this_XNumberLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
    }
    this_XNullLiteral_4=ruleXNullLiteral
    { 
        $current = $this_XNullLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
    }
    this_XStringLiteral_5=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
    }
    this_XTypeLiteral_6=ruleXTypeLiteral
    { 
        $current = $this_XTypeLiteral_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCollectionLiteralRule()); }
	 iv_ruleXCollectionLiteral=ruleXCollectionLiteral 
	 { $current=$iv_ruleXCollectionLiteral.current; } 
	 EOF 
;

// Rule XCollectionLiteral
ruleXCollectionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
    }
    this_XSetLiteral_0=ruleXSetLiteral
    { 
        $current = $this_XSetLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
    }
    this_XListLiteral_1=ruleXListLiteral
    { 
        $current = $this_XListLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSetLiteralRule()); }
	 iv_ruleXSetLiteral=ruleXSetLiteral 
	 { $current=$iv_ruleXSetLiteral.current; } 
	 EOF 
;

// Rule XSetLiteral
ruleXSetLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_elements_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXListLiteral
entryRuleXListLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXListLiteralRule()); }
	 iv_ruleXListLiteral=ruleXListLiteral 
	 { $current=$iv_ruleXListLiteral.current; } 
	 EOF 
;

// Rule XListLiteral
ruleXListLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXListLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_elements_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXListLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	 iv_ruleXClosure=ruleXClosure 
	 { $current=$iv_ruleXClosure.current; } 
	 EOF 
;

// Rule XClosure
ruleXClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
    }
))(((((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>(((
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
	    }
		lv_declaredFormalParameters_2_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_2_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
	    }
		lv_declaredFormalParameters_4_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_4_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_5_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
	    }
		lv_expression_6_0=ruleXExpressionInClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"XExpressionInClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	 iv_ruleXExpressionInClosure=ruleXExpressionInClosure 
	 { $current=$iv_ruleXExpressionInClosure.current; } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleXExpressionOrVarDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"XExpressionOrVarDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
    }
)?)*)
;





// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	 iv_ruleXShortClosure=ruleXShortClosure 
	 { $current=$iv_ruleXShortClosure.current; } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
	    }
		lv_declaredFormalParameters_1_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_1_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
	    }
		lv_declaredFormalParameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_4_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXShortClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	 iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression 
	 { $current=$iv_ruleXParenthesizedExpression.current; } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	 iv_ruleXIfExpression=ruleXIfExpression 
	 { $current=$iv_ruleXIfExpression.current; } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	 iv_ruleXSwitchExpression=ruleXSwitchExpression 
	 { $current=$iv_ruleXSwitchExpression.current; } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
    }
(((((	'(' 
(
(
ruleJvmFormalParameter
)
)	':' 
))=>(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_switch_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
    }
)
    |(((((
(
ruleJvmFormalParameter
)
)	':' 
))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); 
	    }
		lv_declaredParam_7_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_7_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_switch_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
	    }
		lv_cases_11_0=ruleXCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_11_0, 
        		"XCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_12='default' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
	    }
		lv_default_14_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_14_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	 iv_ruleXCasePart=ruleXCasePart 
	 { $current=$iv_ruleXCasePart.current; } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeGuard_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"typeGuard",
        		lv_typeGuard_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='case' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); 
	    }
		lv_case_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?((	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); 
	    }
		lv_then_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_fallThrough_6_0=	',' 
    {
        newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXCasePartRule());
	        }
       		setWithLastConsumed($current, "fallThrough", true, ",");
	    }

)
)))
;





// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	 iv_ruleXForLoopExpression=ruleXForLoopExpression 
	 { $current=$iv_ruleXForLoopExpression.current; } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'for' 
	'(' 
(
(
ruleJvmFormalParameter
)
)	':' 
))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); 
	    }
		lv_forExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); 
	    }
		lv_eachExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXBasicForLoopExpression
entryRuleXBasicForLoopExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); }
	 iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression 
	 { $current=$iv_ruleXBasicForLoopExpression.current; } 
	 EOF 
;

// Rule XBasicForLoopExpression
ruleXBasicForLoopExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); 
	    }
		lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
	        }
       		add(
       			$current, 
       			"initExpressions",
        		lv_initExpressions_3_0, 
        		"XExpressionOrVarDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); 
	    }
		lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
	        }
       		add(
       			$current, 
       			"initExpressions",
        		lv_initExpressions_5_0, 
        		"XExpressionOrVarDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); 
	    }
		lv_expression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); 
	    }
		lv_updateExpressions_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
	        }
       		add(
       			$current, 
       			"updateExpressions",
        		lv_updateExpressions_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); 
	    }
		lv_updateExpressions_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
	        }
       		add(
       			$current, 
       			"updateExpressions",
        		lv_updateExpressions_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); 
	    }
		lv_eachExpression_13_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_13_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	 iv_ruleXWhileExpression=ruleXWhileExpression 
	 { $current=$iv_ruleXWhileExpression.current; } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	 iv_ruleXDoWhileExpression=ruleXDoWhileExpression 
	 { $current=$iv_ruleXDoWhileExpression.current; } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	 iv_ruleXBlockExpression=ruleXBlockExpression 
	 { $current=$iv_ruleXBlockExpression.current; } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); 
	    }
		lv_expressions_2_0=ruleXExpressionOrVarDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"XExpressionOrVarDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
    }
)?)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionOrVarDeclaration
entryRuleXExpressionOrVarDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); }
	 iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration 
	 { $current=$iv_ruleXExpressionOrVarDeclaration.current; } 
	 EOF 
;

// Rule XExpressionOrVarDeclaration
ruleXExpressionOrVarDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); 
    }
    this_XVariableDeclaration_0=ruleXVariableDeclaration
    { 
        $current = $this_XVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	 iv_ruleXVariableDeclaration=ruleXVariableDeclaration 
	 { $current=$iv_ruleXVariableDeclaration.current; } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
            $current);
    }
)((
(
		lv_writeable_1_0=	'var' 
    {
        newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationRule());
	        }
       		setWithLastConsumed($current, "writeable", true, "var");
	    }

)
)
    |	otherlv_2='val' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
    }
)(((((
(
ruleJvmTypeReference
)
)(
(
ruleValidID
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
	    }
		lv_right_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	 iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter 
	 { $current=$iv_ruleFullJvmFormalParameter.current; } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	 iv_ruleXFeatureCall=ruleXFeatureCall 
	 { $current=$iv_ruleXFeatureCall.current; } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
            $current);
    }
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_typeArguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
    }
)?(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_7_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
	    }
		lv_featureCallArguments_8_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_8_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
	    }
		lv_featureCallArguments_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
	    }
		lv_featureCallArguments_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
	    }
		lv_featureCallArguments_13_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_13_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureCallIDRule()); } 
	 iv_ruleFeatureCallID=ruleFeatureCallID 
	 { $current=$iv_ruleFeatureCallID.current.getText(); }  
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='extends' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
    }

    |
	kw='import' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
    }

    |
	kw='extension' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); } 
	 iv_ruleIdOrSuper=ruleIdOrSuper 
	 { $current=$iv_ruleIdOrSuper.current.getText(); }  
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
    }
    this_FeatureCallID_0=ruleFeatureCallID    {
		$current.merge(this_FeatureCallID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	 iv_ruleXConstructorCall=ruleXConstructorCall 
	 { $current=$iv_ruleXConstructorCall.current; } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_typeArguments_6_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_6_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
    }
)?(((
(
	'(' 
 

)
)=>
(
		lv_explicitConstructorCall_8_0=	'(' 
    {
        newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
       		setWithLastConsumed($current, "explicitConstructorCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_arguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_arguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_arguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	 iv_ruleXBooleanLiteral=ruleXBooleanLiteral 
	 { $current=$iv_ruleXBooleanLiteral.current; } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	 iv_ruleXNullLiteral=ruleXNullLiteral 
	 { $current=$iv_ruleXNullLiteral.current; } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	 iv_ruleXNumberLiteral=ruleXNumberLiteral 
	 { $current=$iv_ruleXNumberLiteral.current; } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	 iv_ruleXStringLiteral=ruleXStringLiteral 
	 { $current=$iv_ruleXStringLiteral.current; } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	 iv_ruleXTypeLiteral=ruleXTypeLiteral 
	 { $current=$iv_ruleXTypeLiteral.current; } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
            $current);
    }
)	otherlv_1='typeof' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTypeLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
	    }
		lv_arrayDimensions_4_0=ruleArrayBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
	        }
       		add(
       			$current, 
       			"arrayDimensions",
        		lv_arrayDimensions_4_0, 
        		"ArrayBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	 iv_ruleXThrowExpression=ruleXThrowExpression 
	 { $current=$iv_ruleXThrowExpression.current; } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	 iv_ruleXReturnExpression=ruleXReturnExpression 
	 { $current=$iv_ruleXReturnExpression.current; } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
    }
((	'extends' 
 | 	'static' 
 | 	'import' 
 | 	'extension' 
 | 	'!' 
 | 	'-' 
 | 	'+' 
 | 	'new' 
 | 	'{' 
 | 	'switch' 
 | 	'synchronized' 
 | 	'<' 
 | 	'super' 
 | 	'#' 
 | 	'[' 
 | 	'false' 
 | 	'true' 
 | 	'null' 
 | 	'typeof' 
 | 	'if' 
 | 	'for' 
 | 	'while' 
 | 	'do' 
 | 	'throw' 
 | 	'return' 
 | 	'try' 
 | 	'(' 
 | 	RULE_ID | 	RULE_HEX | 	RULE_INT | 	RULE_DECIMAL | 	RULE_STRING)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression 
	 { $current=$iv_ruleXTryCatchFinallyExpression.current; } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	'catch' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClauses_3_0=ruleXCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		add(
       			$current, 
       			"catchClauses",
        		lv_catchClauses_3_0, 
        		"XCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)+(((	'finally' 
)=>	otherlv_4='finally' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
	    }
		lv_finallyExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='finally' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_finallyExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleXSynchronizedExpression
entryRuleXSynchronizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); }
	 iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression 
	 { $current=$iv_ruleXSynchronizedExpression.current; } 
	 EOF 
;

// Rule XSynchronizedExpression
ruleXSynchronizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'synchronized' 
	'(' 
))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
            $current);
    }
)	otherlv_1='synchronized' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); 
	    }
		lv_param_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
	        }
       		set(
       			$current, 
       			"param",
        		lv_param_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	 iv_ruleXCatchClause=ruleXCatchClause 
	 { $current=$iv_ruleXCatchClause.current; } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'catch' 
)=>	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
	    }
		lv_declaredParam_2_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_2_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_HEX_0=RULE_HEX    {
		$current.merge(this_HEX_0);
    }

    { 
    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
    }

    |((    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
    }

    |    this_DECIMAL_2=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_DECIMAL_5=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_5);
    }

    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
    }
))?))
    ;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	ruleArrayBrackets))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
            $current);
    }
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
    }
ruleArrayBrackets
    { 
        afterParserOrEnumRuleCall();
    }
))*)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
    }
    this_XFunctionTypeRef_3=ruleXFunctionTypeRef
    { 
        $current = $this_XFunctionTypeRef_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayBracketsRule()); } 
	 iv_ruleArrayBrackets=ruleArrayBrackets 
	 { $current=$iv_ruleArrayBrackets.current.getText(); }  
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	 iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef 
	 { $current=$iv_ruleXFunctionTypeRef.current; } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
	    }
		lv_paramTypes_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
	    }
		lv_paramTypes_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
    }
)?	otherlv_5='=>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
	    }
		lv_returnType_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference 
	 { $current=$iv_ruleJvmParameterizedTypeReference.current; } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_arguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
(((((
)	'.' 
))=>((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
            $current);
    }
)	otherlv_7='.' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
    }
))(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_9='<' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); 
	    }
		lv_arguments_10_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); 
	    }
		lv_arguments_12_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13='>' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
    }
)?)*)?)
;





// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference 
	 { $current=$iv_ruleJvmArgumentTypeReference.current; } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
    }
    this_JvmTypeReference_0=ruleJvmTypeReference
    { 
        $current = $this_JvmTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
    }
    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
    { 
        $current = $this_JvmWildcardTypeReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference 
	 { $current=$iv_ruleJvmWildcardTypeReference.current; } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); 
	    }
		lv_constraints_3_0=ruleJvmUpperBoundAnded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_3_0, 
        		"JvmUpperBoundAnded");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); 
	    }
		lv_constraints_4_0=ruleJvmLowerBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_4_0, 
        		"JvmLowerBound");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); 
	    }
		lv_constraints_5_0=ruleJvmLowerBoundAnded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_5_0, 
        		"JvmLowerBoundAnded");
	        afterParserOrEnumRuleCall();
	    }

)
)*))?)
;





// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	 iv_ruleJvmUpperBound=ruleJvmUpperBound 
	 { $current=$iv_ruleJvmUpperBound.current; } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	 iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded 
	 { $current=$iv_ruleJvmUpperBoundAnded.current; } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	 iv_ruleJvmLowerBound=ruleJvmLowerBound 
	 { $current=$iv_ruleJvmLowerBound.current; } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBoundAnded
entryRuleJvmLowerBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); }
	 iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded 
	 { $current=$iv_ruleJvmLowerBoundAnded.current; } 
	 EOF 
;

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;







// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXImportDeclarationRule()); }
	 iv_ruleXImportDeclaration=ruleXImportDeclaration 
	 { $current=$iv_ruleXImportDeclaration.current; } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
    }
(((
(
		lv_static_1_0=	'static' 
    {
        newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "static", true, "static");
	    }

)
)(
(
		lv_extension_2_0=	'extension' 
    {
        newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "extension", true, "extension");
	    }

)
)?(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
	    }
		ruleQualifiedNameInStaticImport		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_wildcard_4_0=	'*' 
    {
        newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "wildcard", true, "*");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); 
	    }
		lv_memberName_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		set(
       			$current, 
       			"memberName",
        		lv_memberName_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
	    }
		lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_7_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
    }
)?)
;





// Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); } 
	 iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport 
	 { $current=$iv_ruleQualifiedNameInStaticImport.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); 
    }
)+
    ;





RULE_ENUM : ('A'..'Z'|'_') ('0'..'9'|'A'..'Z'|'_')*;

RULE_FLOAT : RULE_INT '.' RULE_INT 'F';

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_TIME : ((('0'..'9')+ ':')? ('0'..'1' '0'..'9'|'2' '0'..'3') ':')? '0'..'5' '0'..'9' ':' '0'..'5' '0'..'9' (',' '0'..'9' '0'..'9' '0'..'9')?;

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'?|'\'' ('\\' .|~(('\\'|'\'')))* '\''?);

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


